import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import { TextInput } from 'react-native';
import { useNavigation } from '@react-navigation/native';
/**
 * WordPress dependencies
 */

import { useState } from '@wordpress/element';
import { Icon, chevronRight } from '@wordpress/icons';
import { usePreferredColorSchemeStyle } from '@wordpress/compose';
import { BottomSheet, PanelBody, FooterMessageControl } from '@wordpress/components';
/**
 * Internal dependencies
 */

import styles from './styles.scss';

var BottomSheetTextControl = function BottomSheetTextControl(_ref) {
  var initialValue = _ref.initialValue,
      onChange = _ref.onChange,
      placeholder = _ref.placeholder,
      label = _ref.label,
      icon = _ref.icon,
      footerNote = _ref.footerNote;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      showSubSheet = _useState2[0],
      setShowSubSheet = _useState2[1];

  var navigation = useNavigation();

  var goBack = function goBack() {
    setShowSubSheet(false);
    navigation.goBack();
  };

  var openSubSheet = function openSubSheet() {
    navigation.navigate(BottomSheet.SubSheet.screenName);
    setShowSubSheet(true);
  };

  var _useState3 = useState(initialValue),
      _useState4 = _slicedToArray(_useState3, 2),
      value = _useState4[0],
      _onChangeText = _useState4[1];

  var horizontalBorderStyle = usePreferredColorSchemeStyle(styles.horizontalBorder, styles.horizontalBorderDark);
  var textEditorStyle = usePreferredColorSchemeStyle(styles.textEditor, styles.textEditorDark);
  return createElement(BottomSheet.SubSheet, {
    navigationButton: createElement(BottomSheet.Cell, {
      icon: icon,
      placeholder: placeholder,
      label: label,
      onPress: openSubSheet,
      value: initialValue || ''
    }, createElement(Icon, {
      icon: chevronRight
    })),
    showSheet: showSubSheet
  }, createElement(Fragment, null, createElement(BottomSheet.NavigationHeader, {
    screen: label,
    leftButtonOnPress: goBack
  }), createElement(PanelBody, {
    style: horizontalBorderStyle
  }, createElement(TextInput, {
    label: label,
    onChangeText: function onChangeText(text) {
      return _onChangeText(text);
    },
    onChange: onChange(value),
    value: value,
    multiline: true,
    placeholder: placeholder,
    placeholderTextColor: '#87a6bc',
    style: textEditorStyle,
    textAlignVertical: 'top'
  }))), footerNote && createElement(PanelBody, {
    style: styles.textFooternote
  }, createElement(FooterMessageControl, {
    label: footerNote,
    textAlign: "left"
  })));
};

export default BottomSheetTextControl;
//# sourceMappingURL=index.native.js.map