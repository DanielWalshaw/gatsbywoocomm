{"version":3,"sources":["@wordpress/editor/src/components/entities-saved-states/index.js"],"names":["EntitiesSavedStates","isOpen","close","saveButtonRef","current","focus","select","dirtyEntityRecords","coreStore","__experimentalGetDirtyEntityRecords","saveEditedEntityRecord","partitionedSavables","Object","values","unselectedEntities","_setUnselectedEntities","setUnselectedEntities","checked","kind","name","key","filter","elt","saveCheckedEntities","entitiesToSave","forEach","dismissPanel","length","closeIcon","map","list"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { some, groupBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button, withFocusReturn } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useCallback, useRef, useEffect } from '@wordpress/element';\nimport { close as closeIcon } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport EntityTypeList from './entity-type-list';\n\nfunction EntitiesSavedStates( { isOpen, close } ) {\n\tconst saveButtonRef = useRef();\n\tuseEffect( () => {\n\t\tif ( isOpen ) {\n\t\t\t// Focus the save button when the saved states panel is opened\n\t\t\tsaveButtonRef.current?.focus();\n\t\t}\n\t}, [ isOpen ] );\n\tconst { dirtyEntityRecords } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tdirtyEntityRecords: select(\n\t\t\t\tcoreStore\n\t\t\t).__experimentalGetDirtyEntityRecords(),\n\t\t};\n\t}, [] );\n\tconst { saveEditedEntityRecord } = useDispatch( coreStore );\n\n\t// To group entities by type.\n\tconst partitionedSavables = Object.values(\n\t\tgroupBy( dirtyEntityRecords, 'name' )\n\t);\n\n\t// Unchecked entities to be ignored by save function.\n\tconst [ unselectedEntities, _setUnselectedEntities ] = useState( [] );\n\n\tconst setUnselectedEntities = ( { kind, name, key }, checked ) => {\n\t\tif ( checked ) {\n\t\t\t_setUnselectedEntities(\n\t\t\t\tunselectedEntities.filter(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind !== kind ||\n\t\t\t\t\t\telt.name !== name ||\n\t\t\t\t\t\telt.key !== key\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t_setUnselectedEntities( [\n\t\t\t\t...unselectedEntities,\n\t\t\t\t{ kind, name, key },\n\t\t\t] );\n\t\t}\n\t};\n\n\tconst saveCheckedEntities = () => {\n\t\tconst entitiesToSave = dirtyEntityRecords.filter(\n\t\t\t( { kind, name, key } ) => {\n\t\t\t\treturn ! some(\n\t\t\t\t\tunselectedEntities,\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind === kind &&\n\t\t\t\t\t\telt.name === name &&\n\t\t\t\t\t\telt.key === key\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tclose( entitiesToSave );\n\n\t\tentitiesToSave.forEach( ( { kind, name, key } ) => {\n\t\t\tsaveEditedEntityRecord( kind, name, key );\n\t\t} );\n\t};\n\n\t// Explicitly define this with no argument passed.  Using `close` on\n\t// its own will use the event object in place of the expected saved entities.\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\n\n\treturn isOpen ? (\n\t\t<div className=\"entities-saved-states__panel\">\n\t\t\t<div className=\"entities-saved-states__panel-header\">\n\t\t\t\t<Button\n\t\t\t\t\tref={ saveButtonRef }\n\t\t\t\t\tisPrimary\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tdirtyEntityRecords.length -\n\t\t\t\t\t\t\tunselectedEntities.length ===\n\t\t\t\t\t\t0\n\t\t\t\t\t}\n\t\t\t\t\tonClick={ saveCheckedEntities }\n\t\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ dismissPanel }\n\t\t\t\t\ticon={ closeIcon }\n\t\t\t\t\tlabel={ __( 'Close panel' ) }\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\n\t\t\t\t<strong>{ __( 'Select the changes you want to save' ) }</strong>\n\t\t\t\t<p>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Some changes may affect other areas of your site.'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{ partitionedSavables.map( ( list ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityTypeList\n\t\t\t\t\t\tkey={ list[ 0 ].name }\n\t\t\t\t\t\tlist={ list }\n\t\t\t\t\t\tclosePanel={ dismissPanel }\n\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\n\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t) : null;\n}\n\nexport default withFocusReturn( EntitiesSavedStates );\n"]}