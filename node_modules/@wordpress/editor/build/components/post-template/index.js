"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PostTemplate = PostTemplate;
exports.default = void 0;

var _element = require("@wordpress/element");

var _objectDestructuringEmpty2 = _interopRequireDefault(require("@babel/runtime/helpers/objectDestructuringEmpty"));

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _coreData = require("@wordpress/core-data");

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function PostTemplate(_ref) {
  (0, _objectDestructuringEmpty2.default)(_ref);

  var _useSelect = (0, _data.useSelect)(function (select) {
    var _getPostType$viewable, _getPostType;

    var _select = select(_store.store),
        getEditedPostAttribute = _select.getEditedPostAttribute,
        getEditorSettings = _select.getEditorSettings,
        getCurrentPostType = _select.getCurrentPostType;

    var _select2 = select(_coreData.store),
        getPostType = _select2.getPostType;

    return {
      selectedTemplate: getEditedPostAttribute('template'),
      availableTemplates: getEditorSettings().availableTemplates,
      isViewable: (_getPostType$viewable = (_getPostType = getPostType(getCurrentPostType())) === null || _getPostType === void 0 ? void 0 : _getPostType.viewable) !== null && _getPostType$viewable !== void 0 ? _getPostType$viewable : false
    };
  }, []),
      availableTemplates = _useSelect.availableTemplates,
      selectedTemplate = _useSelect.selectedTemplate,
      isViewable = _useSelect.isViewable;

  var _useDispatch = (0, _data.useDispatch)(_store.store),
      editPost = _useDispatch.editPost;

  if (!isViewable || (0, _lodash.isEmpty)(availableTemplates)) {
    return null;
  }

  return (0, _element.createElement)(_components.SelectControl, {
    label: (0, _i18n.__)('Template:'),
    value: selectedTemplate,
    onChange: function onChange(templateSlug) {
      editPost({
        template: templateSlug || ''
      });
    },
    options: (0, _lodash.map)(availableTemplates, function (templateName, templateSlug) {
      return {
        value: templateSlug,
        label: templateName
      };
    })
  });
}

var _default = PostTemplate;
exports.default = _default;
//# sourceMappingURL=index.js.map