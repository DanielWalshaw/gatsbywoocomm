{"version":3,"sources":["@wordpress/editor/src/components/post-template/index.js"],"names":["PostTemplate","select","editorStore","getEditedPostAttribute","getEditorSettings","getCurrentPostType","coreStore","getPostType","selectedTemplate","availableTemplates","isViewable","viewable","editPost","templateSlug","template","templateName","value","label"],"mappings":";;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AAKA;;AAhBA;AACA;AACA;;AAGA;AACA;AACA;;AAMA;AACA;AACA;AAGO,SAASA,YAAT,OAA4B;AAAA;;AAAA,mBAC2B,qBAC5D,UAAEC,MAAF,EAAc;AAAA;;AAAA,kBAKTA,MAAM,CAAEC,YAAF,CALG;AAAA,QAEZC,sBAFY,WAEZA,sBAFY;AAAA,QAGZC,iBAHY,WAGZA,iBAHY;AAAA,QAIZC,kBAJY,WAIZA,kBAJY;;AAAA,mBAMWJ,MAAM,CAAEK,eAAF,CANjB;AAAA,QAMLC,WANK,YAMLA,WANK;;AAQb,WAAO;AACNC,MAAAA,gBAAgB,EAAEL,sBAAsB,CAAE,UAAF,CADlC;AAENM,MAAAA,kBAAkB,EAAEL,iBAAiB,GAAGK,kBAFlC;AAGNC,MAAAA,UAAU,2CACTH,WAAW,CAAEF,kBAAkB,EAApB,CADF,iDACT,aAAqCM,QAD5B,yEACwC;AAJ5C,KAAP;AAMA,GAf2D,EAgB5D,EAhB4D,CAD3B;AAAA,MAC1BF,kBAD0B,cAC1BA,kBAD0B;AAAA,MACND,gBADM,cACNA,gBADM;AAAA,MACYE,UADZ,cACYA,UADZ;;AAAA,qBAoBb,uBAAaR,YAAb,CApBa;AAAA,MAoB1BU,QApB0B,gBAoB1BA,QApB0B;;AAsBlC,MAAK,CAAEF,UAAF,IAAgB,qBAASD,kBAAT,CAArB,EAAqD;AACpD,WAAO,IAAP;AACA;;AAED,SACC,4BAAC,yBAAD;AACC,IAAA,KAAK,EAAG,cAAI,WAAJ,CADT;AAEC,IAAA,KAAK,EAAGD,gBAFT;AAGC,IAAA,QAAQ,EAAG,kBAAEK,YAAF,EAAoB;AAC9BD,MAAAA,QAAQ,CAAE;AACTE,QAAAA,QAAQ,EAAED,YAAY,IAAI;AADjB,OAAF,CAAR;AAGA,KAPF;AAQC,IAAA,OAAO,EAAG,iBACTJ,kBADS,EAET,UAAEM,YAAF,EAAgBF,YAAhB;AAAA,aAAoC;AACnCG,QAAAA,KAAK,EAAEH,YAD4B;AAEnCI,QAAAA,KAAK,EAAEF;AAF4B,OAApC;AAAA,KAFS;AARX,IADD;AAkBA;;eAEcf,Y","sourcesContent":["/**\n * External dependencies\n */\nimport { isEmpty, map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { SelectControl } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function PostTemplate( {} ) {\n\tconst { availableTemplates, selectedTemplate, isViewable } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEditedPostAttribute,\n\t\t\t\tgetEditorSettings,\n\t\t\t\tgetCurrentPostType,\n\t\t\t} = select( editorStore );\n\t\t\tconst { getPostType } = select( coreStore );\n\n\t\t\treturn {\n\t\t\t\tselectedTemplate: getEditedPostAttribute( 'template' ),\n\t\t\t\tavailableTemplates: getEditorSettings().availableTemplates,\n\t\t\t\tisViewable:\n\t\t\t\t\tgetPostType( getCurrentPostType() )?.viewable ?? false,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tif ( ! isViewable || isEmpty( availableTemplates ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<SelectControl\n\t\t\tlabel={ __( 'Template:' ) }\n\t\t\tvalue={ selectedTemplate }\n\t\t\tonChange={ ( templateSlug ) => {\n\t\t\t\teditPost( {\n\t\t\t\t\ttemplate: templateSlug || '',\n\t\t\t\t} );\n\t\t\t} }\n\t\t\toptions={ map(\n\t\t\t\tavailableTemplates,\n\t\t\t\t( templateName, templateSlug ) => ( {\n\t\t\t\t\tvalue: templateSlug,\n\t\t\t\t\tlabel: templateName,\n\t\t\t\t} )\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default PostTemplate;\n"]}