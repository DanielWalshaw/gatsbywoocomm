{"version":3,"sources":["@wordpress/editor/src/components/page-attributes/parent.js"],"names":["get","unescape","unescapeString","debounce","repeat","find","flatten","deburr","__","ComboboxControl","useState","useMemo","useSelect","useDispatch","decodeEntities","buildTermsTree","getTitle","post","title","rendered","id","getItemPriority","name","searchValue","normalizedName","toLowerCase","normalizedSearch","startsWith","length","Infinity","PageAttributesParent","editPost","fieldValue","setFieldValue","select","getPostType","getEntityRecords","getEntityRecord","getCurrentPostId","getEditedPostAttribute","postTypeSlug","pageId","pType","postId","isHierarchical","query","per_page","exclude","parent_exclude","orderby","order","_fields","search","parentPostId","parentPost","items","postType","parentPageLabel","pageItems","parentOptions","getOptionsFromTree","tree","level","mappedNodes","map","treeNode","value","label","rawName","children","sortedNodes","sort","a","b","priorityA","priorityB","item","parent","opts","optsHasParent","unshift","handleKeydown","inputValue","handleChange","selectedPostId"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tget,\n\tunescape as unescapeString,\n\tdebounce,\n\trepeat,\n\tfind,\n\tflatten,\n\tdeburr,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\nimport { useState, useMemo } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { buildTermsTree } from '../../utils/terms';\n\nfunction getTitle( post ) {\n\treturn post?.title?.rendered\n\t\t? decodeEntities( post.title.rendered )\n\t\t: `#${ post.id } (${ __( 'no title' ) })`;\n}\n\nexport const getItemPriority = ( name, searchValue ) => {\n\tconst normalizedName = deburr( name ).toLowerCase();\n\tconst normalizedSearch = deburr( searchValue ).toLowerCase();\n\tif ( normalizedName === normalizedSearch ) {\n\t\treturn 0;\n\t}\n\n\tif ( normalizedName.startsWith( normalizedSearch ) ) {\n\t\treturn normalizedName.length;\n\t}\n\n\treturn Infinity;\n};\n\nexport function PageAttributesParent() {\n\tconst { editPost } = useDispatch( 'core/editor' );\n\tconst [ fieldValue, setFieldValue ] = useState( false );\n\tconst { parentPost, parentPostId, items, postType } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getPostType, getEntityRecords, getEntityRecord } = select(\n\t\t\t\t'core'\n\t\t\t);\n\t\t\tconst { getCurrentPostId, getEditedPostAttribute } = select(\n\t\t\t\t'core/editor'\n\t\t\t);\n\t\t\tconst postTypeSlug = getEditedPostAttribute( 'type' );\n\t\t\tconst pageId = getEditedPostAttribute( 'parent' );\n\t\t\tconst pType = getPostType( postTypeSlug );\n\t\t\tconst postId = getCurrentPostId();\n\t\t\tconst isHierarchical = get( pType, [ 'hierarchical' ], false );\n\t\t\tconst query = {\n\t\t\t\tper_page: 100,\n\t\t\t\texclude: postId,\n\t\t\t\tparent_exclude: postId,\n\t\t\t\torderby: 'menu_order',\n\t\t\t\torder: 'asc',\n\t\t\t\t_fields: 'id,title,parent',\n\t\t\t};\n\n\t\t\t// Perform a search when the field is changed.\n\t\t\tif ( !! fieldValue ) {\n\t\t\t\tquery.search = fieldValue;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tparentPostId: pageId,\n\t\t\t\tparentPost: pageId\n\t\t\t\t\t? getEntityRecord( 'postType', postTypeSlug, pageId )\n\t\t\t\t\t: null,\n\t\t\t\titems: isHierarchical\n\t\t\t\t\t? getEntityRecords( 'postType', postTypeSlug, query )\n\t\t\t\t\t: [],\n\t\t\t\tpostType: pType,\n\t\t\t};\n\t\t},\n\t\t[ fieldValue ]\n\t);\n\n\tconst isHierarchical = get( postType, [ 'hierarchical' ], false );\n\tconst parentPageLabel = get( postType, [ 'labels', 'parent_item_colon' ] );\n\tconst pageItems = items || [];\n\n\tconst parentOptions = useMemo( () => {\n\t\tconst getOptionsFromTree = ( tree, level = 0 ) => {\n\t\t\tconst mappedNodes = tree.map( ( treeNode ) => [\n\t\t\t\t{\n\t\t\t\t\tvalue: treeNode.id,\n\t\t\t\t\tlabel:\n\t\t\t\t\t\trepeat( 'â€” ', level ) + unescapeString( treeNode.name ),\n\t\t\t\t\trawName: treeNode.name,\n\t\t\t\t},\n\t\t\t\t...getOptionsFromTree( treeNode.children || [], level + 1 ),\n\t\t\t] );\n\n\t\t\tconst sortedNodes = mappedNodes.sort( ( [ a ], [ b ] ) => {\n\t\t\t\tconst priorityA = getItemPriority( a.rawName, fieldValue );\n\t\t\t\tconst priorityB = getItemPriority( b.rawName, fieldValue );\n\t\t\t\treturn priorityA >= priorityB ? 1 : -1;\n\t\t\t} );\n\n\t\t\treturn flatten( sortedNodes );\n\t\t};\n\n\t\tlet tree = pageItems.map( ( item ) => ( {\n\t\t\tid: item.id,\n\t\t\tparent: item.parent,\n\t\t\tname: getTitle( item ),\n\t\t} ) );\n\n\t\t// Only build a hierarchical tree when not searching.\n\t\tif ( ! fieldValue ) {\n\t\t\ttree = buildTermsTree( tree );\n\t\t}\n\n\t\tconst opts = getOptionsFromTree( tree );\n\n\t\t// Ensure the current parent is in the options list.\n\t\tconst optsHasParent = find(\n\t\t\topts,\n\t\t\t( item ) => item.value === parentPostId\n\t\t);\n\t\tif ( parentPost && ! optsHasParent ) {\n\t\t\topts.unshift( {\n\t\t\t\tvalue: parentPostId,\n\t\t\t\tlabel: getTitle( parentPost ),\n\t\t\t} );\n\t\t}\n\t\treturn opts;\n\t}, [ pageItems, fieldValue ] );\n\n\tif ( ! isHierarchical || ! parentPageLabel ) {\n\t\treturn null;\n\t}\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {Object} selectedPostId The selected Author.\n\t */\n\tconst handleChange = ( selectedPostId ) => {\n\t\teditPost( { parent: selectedPostId } );\n\t};\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\tclassName=\"editor-page-attributes__parent\"\n\t\t\tlabel={ parentPageLabel }\n\t\t\tvalue={ parentPostId }\n\t\t\toptions={ parentOptions }\n\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\tonChange={ handleChange }\n\t\t/>\n\t);\n}\n\nexport default PageAttributesParent;\n"]}