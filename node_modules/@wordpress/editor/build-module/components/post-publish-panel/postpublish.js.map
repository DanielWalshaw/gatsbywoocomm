{"version":3,"sources":["@wordpress/editor/src/components/post-publish-panel/postpublish.js"],"names":["get","PanelBody","Button","TextControl","__","sprintf","Component","createRef","withSelect","safeDecodeURIComponent","decodeEntities","useCopyToClipboard","PostScheduleLabel","POSTNAME","getFuturePostUrl","post","slug","permalink_template","includes","replace","CopyButton","text","onCopy","children","ref","PostPublishPanelPostpublish","arguments","state","showCopyConfirmation","bind","onSelectInput","postLink","props","focusOnMount","current","focus","clearTimeout","dismissCopyConfirmation","setState","setTimeout","event","target","select","isScheduled","postType","postLabel","viewPostLabel","link","status","postPublishNonLinkHeader","title","getEditedPostAttribute","getCurrentPost","isCurrentPostScheduled","getPostType"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { PanelBody, Button, TextControl } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { safeDecodeURIComponent } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useCopyToClipboard } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleLabel from '../post-schedule/label';\n\nconst POSTNAME = '%postname%';\n\n/**\n * Returns URL for a future post.\n *\n * @param {Object} post         Post object.\n *\n * @return {string} PostPublish URL.\n */\n\nconst getFuturePostUrl = ( post ) => {\n\tconst { slug } = post;\n\n\tif ( post.permalink_template.includes( POSTNAME ) ) {\n\t\treturn post.permalink_template.replace( POSTNAME, slug );\n\t}\n\n\treturn post.permalink_template;\n};\n\nfunction CopyButton( { text, onCopy, children } ) {\n\tconst ref = useCopyToClipboard( text, onCopy );\n\treturn (\n\t\t<Button isSecondary ref={ ref }>\n\t\t\t{ children }\n\t\t</Button>\n\t);\n}\n\nclass PostPublishPanelPostpublish extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tshowCopyConfirmation: false,\n\t\t};\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.onSelectInput = this.onSelectInput.bind( this );\n\t\tthis.postLink = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.postLink.current.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t}\n\n\tonCopy() {\n\t\tthis.setState( {\n\t\t\tshowCopyConfirmation: true,\n\t\t} );\n\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t\tthis.dismissCopyConfirmation = setTimeout( () => {\n\t\t\tthis.setState( {\n\t\t\t\tshowCopyConfirmation: false,\n\t\t\t} );\n\t\t}, 4000 );\n\t}\n\n\tonSelectInput( event ) {\n\t\tevent.target.select();\n\t}\n\n\trender() {\n\t\tconst { children, isScheduled, post, postType } = this.props;\n\t\tconst postLabel = get( postType, [ 'labels', 'singular_name' ] );\n\t\tconst viewPostLabel = get( postType, [ 'labels', 'view_item' ] );\n\t\tconst link =\n\t\t\tpost.status === 'future' ? getFuturePostUrl( post ) : post.link;\n\n\t\tconst postPublishNonLinkHeader = isScheduled ? (\n\t\t\t<>\n\t\t\t\t{ __( 'is now scheduled. It will go live on' ) }{ ' ' }\n\t\t\t\t<PostScheduleLabel />.\n\t\t\t</>\n\t\t) : (\n\t\t\t__( 'is now live.' )\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"post-publish-panel__postpublish\">\n\t\t\t\t<PanelBody className=\"post-publish-panel__postpublish-header\">\n\t\t\t\t\t<a ref={ this.postLink } href={ link }>\n\t\t\t\t\t\t{ decodeEntities( post.title ) || __( '(no title)' ) }\n\t\t\t\t\t</a>{ ' ' }\n\t\t\t\t\t{ postPublishNonLinkHeader }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p className=\"post-publish-panel__postpublish-subheader\">\n\t\t\t\t\t\t<strong>{ __( 'Whatâ€™s next?' ) }</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tclassName=\"post-publish-panel__postpublish-post-address\"\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t/* translators: %s: post type singular name */\n\t\t\t\t\t\t\t__( '%s address' ),\n\t\t\t\t\t\t\tpostLabel\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvalue={ safeDecodeURIComponent( link ) }\n\t\t\t\t\t\tonFocus={ this.onSelectInput }\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-buttons\">\n\t\t\t\t\t\t{ ! isScheduled && (\n\t\t\t\t\t\t\t<Button isSecondary href={ link }>\n\t\t\t\t\t\t\t\t{ viewPostLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<CopyButton text={ link } onCopy={ this.onCopy }>\n\t\t\t\t\t\t\t{ this.state.showCopyConfirmation\n\t\t\t\t\t\t\t\t? __( 'Copied!' )\n\t\t\t\t\t\t\t\t: __( 'Copy Link' ) }\n\t\t\t\t\t\t</CopyButton>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetEditedPostAttribute,\n\t\tgetCurrentPost,\n\t\tisCurrentPostScheduled,\n\t} = select( 'core/editor' );\n\tconst { getPostType } = select( 'core' );\n\n\treturn {\n\t\tpost: getCurrentPost(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisScheduled: isCurrentPostScheduled(),\n\t};\n} )( PostPublishPanelPostpublish );\n"]}