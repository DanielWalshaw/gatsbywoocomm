import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { addQueryArgs } from '@wordpress/url';
import { useRef, useState, useCallback, useEffect } from '@wordpress/element';
import { Disabled } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
var DEFAULT_HEIGHT = 300;
export default function PreviewIframe(_ref) {
  var idBase = _ref.idBase,
      instance = _ref.instance,
      isVisible = _ref.isVisible;
  var ref = useRef();

  var _useState = useState(DEFAULT_HEIGHT),
      _useState2 = _slicedToArray(_useState, 2),
      height = _useState2[0],
      setHeight = _useState2[1];

  var adjustHeight = useCallback(function () {
    setHeight(ref.current.contentDocument.body.scrollHeight);
  }, []);
  useEffect(function () {
    if (isVisible) {
      adjustHeight();
    }
  }, [isVisible, adjustHeight]);
  return createElement(Disabled, {
    hidden: !isVisible
  }, createElement("iframe", {
    ref: ref,
    className: "wp-block-legacy-widget__edit-preview",
    src: addQueryArgs('themes.php', {
      page: 'gutenberg-widgets',
      'legacy-widget-preview': {
        idBase: idBase,
        instance: instance
      }
    }),
    title: __('Legacy Widget Preview'),
    height: height,
    onLoad: adjustHeight
  }));
}
//# sourceMappingURL=preview.js.map