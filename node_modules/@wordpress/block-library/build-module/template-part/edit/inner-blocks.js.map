{"version":3,"sources":["@wordpress/block-library/src/template-part/edit/inner-blocks.js"],"names":["useEntityBlockEditor","InnerBlocks","__experimentalUseInnerBlocksProps","useInnerBlocksProps","__experimentalUseEditorFeature","useEditorFeature","store","blockEditorStore","useSelect","TemplatePartInnerBlocks","id","postId","hasInnerBlocks","layout","TagName","tagName","blockProps","themeSupportsLayout","select","getSettings","supportsLayout","defaultLayout","usedLayout","inherit","contentSize","wideSize","alignments","blocks","onInput","onChange","innerBlocksProps","value","renderAppender","undefined","ButtonBlockAppender","__experimentalLayout","type"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,oBAAT,QAAqC,sBAArC;AACA,SACCC,WADD,EAECC,iCAAiC,IAAIC,mBAFtC,EAGCC,8BAA8B,IAAIC,gBAHnC,EAICC,KAAK,IAAIC,gBAJV,QAKO,yBALP;AAMA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,eAAe,SAASC,uBAAT,OAMX;AAAA,MALKC,EAKL,QALHC,MAKG;AAAA,MAJHC,cAIG,QAJHA,cAIG;AAAA,MAHHC,MAGG,QAHHA,MAGG;AAAA,MAFMC,OAEN,QAFHC,OAEG;AAAA,MADHC,UACG,QADHA,UACG;AACH,MAAMC,mBAAmB,GAAGT,SAAS,CAAE,UAAEU,MAAF,EAAc;AAAA;;AAAA,kBAC5BA,MAAM,CAAEX,gBAAF,CADsB;AAAA,QAC5CY,WAD4C,WAC5CA,WAD4C;;AAEpD,2BAAOA,WAAW,EAAlB,iDAAO,aAAeC,cAAtB;AACA,GAHoC,EAGlC,EAHkC,CAArC;AAIA,MAAMC,aAAa,GAAGhB,gBAAgB,CAAE,QAAF,CAAhB,IAAgC,EAAtD;AACA,MAAMiB,UAAU,GAAG,CAAC,CAAET,MAAH,IAAaA,MAAM,CAACU,OAApB,GAA8BF,aAA9B,GAA8CR,MAAjE;AANG,MAOKW,WAPL,GAO+BF,UAP/B,CAOKE,WAPL;AAAA,MAOkBC,QAPlB,GAO+BH,UAP/B,CAOkBG,QAPlB;AAQH,MAAMC,UAAU,GACfF,WAAW,IAAIC,QAAf,GACG,CAAE,MAAF,EAAU,MAAV,CADH,GAEG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,CAHJ;;AARG,8BAYmCzB,oBAAoB,CACzD,UADyD,EAEzD,kBAFyD,EAGzD;AAAEU,IAAAA,EAAE,EAAFA;AAAF,GAHyD,CAZvD;AAAA;AAAA,MAYKiB,MAZL;AAAA,MAYaC,OAZb;AAAA,MAYsBC,QAZtB;;AAiBH,MAAMC,gBAAgB,GAAG3B,mBAAmB,CAAEa,UAAF,EAAc;AACzDe,IAAAA,KAAK,EAAEJ,MADkD;AAEzDC,IAAAA,OAAO,EAAPA,OAFyD;AAGzDC,IAAAA,QAAQ,EAARA,QAHyD;AAIzDG,IAAAA,cAAc,EAAEpB,cAAc,GAC3BqB,SAD2B,GAE3BhC,WAAW,CAACiC,mBAN0C;AAOzDC,IAAAA,oBAAoB,EAAE;AACrBC,MAAAA,IAAI,EAAE,SADe;AAErB;AACAV,MAAAA,UAAU,EAAET,mBAAmB,GAAGS,UAAH,GAAgBO;AAH1B;AAPmC,GAAd,CAA5C;AAaA,SAAO,cAAC,OAAD,EAAcH,gBAAd,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityBlockEditor } from '@wordpress/core-data';\nimport {\n\tInnerBlocks,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\t__experimentalUseEditorFeature as useEditorFeature,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\nexport default function TemplatePartInnerBlocks( {\n\tpostId: id,\n\thasInnerBlocks,\n\tlayout,\n\ttagName: TagName,\n\tblockProps,\n} ) {\n\tconst themeSupportsLayout = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings()?.supportsLayout;\n\t}, [] );\n\tconst defaultLayout = useEditorFeature( 'layout' ) || {};\n\tconst usedLayout = !! layout && layout.inherit ? defaultLayout : layout;\n\tconst { contentSize, wideSize } = usedLayout;\n\tconst alignments =\n\t\tcontentSize || wideSize\n\t\t\t? [ 'wide', 'full' ]\n\t\t\t: [ 'left', 'center', 'right' ];\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\t'wp_template_part',\n\t\t{ id }\n\t);\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tvalue: blocks,\n\t\tonInput,\n\t\tonChange,\n\t\trenderAppender: hasInnerBlocks\n\t\t\t? undefined\n\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t\t__experimentalLayout: {\n\t\t\ttype: 'default',\n\t\t\t// Find a way to inject this in the support flag code (hooks).\n\t\t\talignments: themeSupportsLayout ? alignments : undefined,\n\t\t},\n\t} );\n\treturn <TagName { ...innerBlocksProps } />;\n}\n"]}