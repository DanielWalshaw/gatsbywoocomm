{"version":3,"sources":["@wordpress/block-library/src/template-part/edit/advanced-controls.js"],"names":["useEntityProp","SelectControl","TextControl","sprintf","__","InspectorAdvancedControls","getTagBasedOnArea","AREA_OPTIONS","label","value","TemplatePartAdvancedControls","tagName","setAttributes","isEntityAvailable","templatePartId","area","setArea","title","setTitle","event","target","select"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityProp } from '@wordpress/core-data';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { InspectorAdvancedControls } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { getTagBasedOnArea } from './get-tag-based-on-area';\n\nconst AREA_OPTIONS = [\n\t{ label: __( 'Header' ), value: 'header' },\n\t{ label: __( 'Footer' ), value: 'footer' },\n\t{\n\t\tlabel: __( 'General' ),\n\t\tvalue: 'uncategorized',\n\t},\n];\n\nexport function TemplatePartAdvancedControls( {\n\ttagName,\n\tsetAttributes,\n\tisEntityAvailable,\n\ttemplatePartId,\n} ) {\n\tconst [ area, setArea ] = useEntityProp(\n\t\t'postType',\n\t\t'wp_template_part',\n\t\t'area',\n\t\ttemplatePartId\n\t);\n\n\tconst [ title, setTitle ] = useEntityProp(\n\t\t'postType',\n\t\t'wp_template_part',\n\t\t'title',\n\t\ttemplatePartId\n\t);\n\n\treturn (\n\t\t<InspectorAdvancedControls>\n\t\t\t{ isEntityAvailable && (\n\t\t\t\t<>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Title' ) }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\tsetTitle( value );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonFocus={ ( event ) => event.target.select() }\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel={ __( 'Area' ) }\n\t\t\t\t\t\tlabelPosition=\"top\"\n\t\t\t\t\t\toptions={ AREA_OPTIONS }\n\t\t\t\t\t\tvalue={ area }\n\t\t\t\t\t\tonChange={ setArea }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<SelectControl\n\t\t\t\tlabel={ __( 'HTML element' ) }\n\t\t\t\toptions={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: sprintf(\n\t\t\t\t\t\t\t/* translators: %s: HTML tag based on area. */\n\t\t\t\t\t\t\t__( 'Default based on area (%s)' ),\n\t\t\t\t\t\t\t`<${ getTagBasedOnArea( area ) }>`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t},\n\t\t\t\t\t{ label: '<header>', value: 'header' },\n\t\t\t\t\t{ label: '<main>', value: 'main' },\n\t\t\t\t\t{ label: '<section>', value: 'section' },\n\t\t\t\t\t{ label: '<article>', value: 'article' },\n\t\t\t\t\t{ label: '<aside>', value: 'aside' },\n\t\t\t\t\t{ label: '<footer>', value: 'footer' },\n\t\t\t\t\t{ label: '<div>', value: 'div' },\n\t\t\t\t] }\n\t\t\t\tvalue={ tagName || '' }\n\t\t\t\tonChange={ ( value ) => setAttributes( { tagName: value } ) }\n\t\t\t/>\n\t\t</InspectorAdvancedControls>\n\t);\n}\n"]}