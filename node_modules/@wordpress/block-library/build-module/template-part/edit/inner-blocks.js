import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useEntityBlockEditor } from '@wordpress/core-data';
import { InnerBlocks, __experimentalUseInnerBlocksProps as useInnerBlocksProps, __experimentalUseEditorFeature as useEditorFeature, store as blockEditorStore } from '@wordpress/block-editor';
import { useSelect } from '@wordpress/data';
export default function TemplatePartInnerBlocks(_ref) {
  var id = _ref.postId,
      hasInnerBlocks = _ref.hasInnerBlocks,
      layout = _ref.layout,
      TagName = _ref.tagName,
      blockProps = _ref.blockProps;
  var themeSupportsLayout = useSelect(function (select) {
    var _getSettings;

    var _select = select(blockEditorStore),
        getSettings = _select.getSettings;

    return (_getSettings = getSettings()) === null || _getSettings === void 0 ? void 0 : _getSettings.supportsLayout;
  }, []);
  var defaultLayout = useEditorFeature('layout') || {};
  var usedLayout = !!layout && layout.inherit ? defaultLayout : layout;
  var contentSize = usedLayout.contentSize,
      wideSize = usedLayout.wideSize;
  var alignments = contentSize || wideSize ? ['wide', 'full'] : ['left', 'center', 'right'];

  var _useEntityBlockEditor = useEntityBlockEditor('postType', 'wp_template_part', {
    id: id
  }),
      _useEntityBlockEditor2 = _slicedToArray(_useEntityBlockEditor, 3),
      blocks = _useEntityBlockEditor2[0],
      onInput = _useEntityBlockEditor2[1],
      onChange = _useEntityBlockEditor2[2];

  var innerBlocksProps = useInnerBlocksProps(blockProps, {
    value: blocks,
    onInput: onInput,
    onChange: onChange,
    renderAppender: hasInnerBlocks ? undefined : InnerBlocks.ButtonBlockAppender,
    __experimentalLayout: {
      type: 'default',
      // Find a way to inject this in the support flag code (hooks).
      alignments: themeSupportsLayout ? alignments : undefined
    }
  });
  return createElement(TagName, innerBlocksProps);
}
//# sourceMappingURL=inner-blocks.js.map