{"version":3,"sources":["@wordpress/block-library/src/buttons/edit.js"],"names":["classnames","BlockControls","useBlockProps","__experimentalUseInnerBlocksProps","useInnerBlocksProps","JustifyContentControl","name","buttonBlockName","ALLOWED_BLOCKS","BUTTONS_TEMPLATE","ButtonsEdit","attributes","contentJustification","orientation","setAttributes","blockProps","className","innerBlocksProps","allowedBlocks","template","__experimentalLayout","type","alignments","templateInsertUpdatesSelection","justifyControls","value","position","isAlternate"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SACCC,aADD,EAECC,aAFD,EAGCC,iCAAiC,IAAIC,mBAHtC,EAICC,qBAJD,QAKO,yBALP;AAOA;AACA;AACA;;AACA,SAASC,IAAI,IAAIC,eAAjB,QAAwC,WAAxC;AAEA,IAAMC,cAAc,GAAG,CAAED,eAAF,CAAvB;AACA,IAAME,gBAAgB,GAAG,CAAE,CAAE,aAAF,CAAF,CAAzB;;AAEA,SAASC,WAAT,OAGI;AAAA;;AAAA,6BAFHC,UAEG;AAAA,MAFWC,oBAEX,mBAFWA,oBAEX;AAAA,MAFiCC,WAEjC,mBAFiCA,WAEjC;AAAA,MADHC,aACG,QADHA,aACG;AACH,MAAMC,UAAU,GAAGb,aAAa,CAAE;AACjCc,IAAAA,SAAS,EAAEhB,UAAU,oFACWY,oBADX,GACsCA,oBADtC,gCAEpB,aAFoB,EAELC,WAAW,KAAK,UAFX;AADY,GAAF,CAAhC;AAMA,MAAMI,gBAAgB,GAAGb,mBAAmB,CAAEW,UAAF,EAAc;AACzDG,IAAAA,aAAa,EAAEV,cAD0C;AAEzDW,IAAAA,QAAQ,EAAEV,gBAF+C;AAGzDI,IAAAA,WAAW,EAAXA,WAHyD;AAIzDO,IAAAA,oBAAoB,EAAE;AACrBC,MAAAA,IAAI,EAAE,SADe;AAErBC,MAAAA,UAAU,EAAE;AAFS,KAJmC;AAQzDC,IAAAA,8BAA8B,EAAE;AARyB,GAAd,CAA5C;AAWA,MAAMC,eAAe,GACpBX,WAAW,KAAK,UAAhB,GACG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,CADH,GAEG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,EAA6B,eAA7B,CAHJ;AAKA,SACC,8BACC,cAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,cAAC,qBAAD;AACC,IAAA,eAAe,EAAGW,eADnB;AAEC,IAAA,KAAK,EAAGZ,oBAFT;AAGC,IAAA,QAAQ,EAAG,kBAAEa,KAAF;AAAA,aACVX,aAAa,CAAE;AAAEF,QAAAA,oBAAoB,EAAEa;AAAxB,OAAF,CADH;AAAA,KAHZ;AAMC,IAAA,YAAY,EAAG;AACdC,MAAAA,QAAQ,EAAE,cADI;AAEdC,MAAAA,WAAW,EAAE;AAFC;AANhB,IADD,CADD,EAcC,qBAAUV,gBAAV,CAdD,CADD;AAkBA;;AAED,eAAeP,WAAf","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBlockControls,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\tJustifyContentControl,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { name as buttonBlockName } from '../button';\n\nconst ALLOWED_BLOCKS = [ buttonBlockName ];\nconst BUTTONS_TEMPLATE = [ [ 'core/button' ] ];\n\nfunction ButtonsEdit( {\n\tattributes: { contentJustification, orientation },\n\tsetAttributes,\n} ) {\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `is-content-justification-${ contentJustification }` ]: contentJustification,\n\t\t\t'is-vertical': orientation === 'vertical',\n\t\t} ),\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t\ttemplate: BUTTONS_TEMPLATE,\n\t\torientation,\n\t\t__experimentalLayout: {\n\t\t\ttype: 'default',\n\t\t\talignments: [],\n\t\t},\n\t\ttemplateInsertUpdatesSelection: true,\n\t} );\n\n\tconst justifyControls =\n\t\torientation === 'vertical'\n\t\t\t? [ 'left', 'center', 'right' ]\n\t\t\t: [ 'left', 'center', 'right', 'space-between' ];\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<JustifyContentControl\n\t\t\t\t\tallowedControls={ justifyControls }\n\t\t\t\t\tvalue={ contentJustification }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { contentJustification: value } )\n\t\t\t\t\t}\n\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\tposition: 'bottom right',\n\t\t\t\t\t\tisAlternate: true,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nexport default ButtonsEdit;\n"]}