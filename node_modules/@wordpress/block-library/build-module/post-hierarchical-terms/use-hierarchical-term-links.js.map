{"version":3,"sources":["@wordpress/block-library/src/post-hierarchical-terms/use-hierarchical-term-links.js"],"names":["map","useEntityProp","store","coreStore","useSelect","useHierarchicalTermLinks","postId","postType","term","restBase","rest_base","slug","hierarchicalTermItems","select","getEntityRecord","loaded","links","itemId","item","link","event","preventDefault","name","hierarchicalTermLinks","isLoadingHierarchicalTermLinks"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,QAApB;AAEA;AACA;AACA;;AACA,SAASC,aAAT,EAAwBC,KAAK,IAAIC,SAAjC,QAAkD,sBAAlD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,eAAe,SAASC,wBAAT,OAAgE;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,IAAS,QAATA,IAAS;AAAA,MAC3DC,QAD2D,GACxCD,IADwC,CACtEE,SADsE;AAAA,MACjDC,IADiD,GACxCH,IADwC,CACjDG,IADiD;;AAAA,uBAG5CV,aAAa,CAC9C,UAD8C,EAE9CM,QAF8C,EAG9CE,QAH8C,EAI9CH,MAJ8C,CAH+B;AAAA;AAAA,MAGtEM,qBAHsE;;AAAA,mBAUZR,SAAS,CAC1E,UAAES,MAAF,EAAc;AAAA,kBACeA,MAAM,CAAEV,SAAF,CADrB;AAAA,QACLW,eADK,WACLA,eADK;;AAGb,QAAIC,MAAM,GAAG,IAAb;AAEA,QAAMC,KAAK,GAAGhB,GAAG,CAAEY,qBAAF,EAAyB,UAAEK,MAAF,EAAc;AACvD,UAAMC,IAAI,GAAGJ,eAAe,CAAE,UAAF,EAAcH,IAAd,EAAoBM,MAApB,CAA5B;;AAEA,UAAK,CAAEC,IAAP,EAAc;AACb,eAASH,MAAM,GAAG,KAAlB;AACA;;AAED,aACC;AACC,QAAA,GAAG,EAAGE,MADP;AAEC,QAAA,IAAI,EAAGC,IAAI,CAACC,IAFb;AAGC,QAAA,OAAO,EAAG,iBAAEC,KAAF;AAAA,iBAAaA,KAAK,CAACC,cAAN,EAAb;AAAA;AAHX,SAKGH,IAAI,CAACI,IALR,CADD;AASA,KAhBgB,CAAjB;AAkBA,WAAO;AACNC,MAAAA,qBAAqB,EAAEP,KADjB;AAENQ,MAAAA,8BAA8B,EAAE,CAAET;AAF5B,KAAP;AAIA,GA5ByE,EA6B1E,CAAEH,qBAAF,CA7B0E,CAVG;AAAA,MAUtEW,qBAVsE,cAUtEA,qBAVsE;AAAA,MAU/CC,8BAV+C,cAU/CA,8BAV+C;;AA0C9E,SAAO;AAAED,IAAAA,qBAAqB,EAArBA,qBAAF;AAAyBC,IAAAA,8BAA8B,EAA9BA;AAAzB,GAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\n\nexport default function useHierarchicalTermLinks( { postId, postType, term } ) {\n\tconst { rest_base: restBase, slug } = term;\n\n\tconst [ hierarchicalTermItems ] = useEntityProp(\n\t\t'postType',\n\t\tpostType,\n\t\trestBase,\n\t\tpostId\n\t);\n\n\tconst { hierarchicalTermLinks, isLoadingHierarchicalTermLinks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord } = select( coreStore );\n\n\t\t\tlet loaded = true;\n\n\t\t\tconst links = map( hierarchicalTermItems, ( itemId ) => {\n\t\t\t\tconst item = getEntityRecord( 'taxonomy', slug, itemId );\n\n\t\t\t\tif ( ! item ) {\n\t\t\t\t\treturn ( loaded = false );\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<a\n\t\t\t\t\t\tkey={ itemId }\n\t\t\t\t\t\thref={ item.link }\n\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ item.name }\n\t\t\t\t\t</a>\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\treturn {\n\t\t\t\thierarchicalTermLinks: links,\n\t\t\t\tisLoadingHierarchicalTermLinks: ! loaded,\n\t\t\t};\n\t\t},\n\t\t[ hierarchicalTermItems ]\n\t);\n\n\treturn { hierarchicalTermLinks, isLoadingHierarchicalTermLinks };\n}\n"]}