{"version":3,"sources":["@wordpress/block-library/src/query/edit/query-inspector-controls.js"],"names":["debounce","PanelBody","QueryControls","TextControl","FormTokenField","SelectControl","RangeControl","ToggleControl","Notice","__","InspectorControls","useSelect","addQueryArgs","useEffect","useState","useCallback","createInterpolateElement","store","coreStore","getTermsInfo","usePostTypes","MAX_FETCHED_TERMS","stickyOptions","label","value","CreateNewPostLink","type","newPostUrl","post_type","a","QueryInspectorControls","attributes","query","layout","setQuery","setLayout","order","orderBy","selectedAuthorId","author","postType","sticky","inherit","showCategories","setShowCategories","showTags","setShowTags","showSticky","setShowSticky","postTypesTaxonomiesMap","postTypesSelectOptions","select","getEntityRecords","termsQuery","per_page","_categories","_tags","categories","tags","authorList","postTypeTaxonomies","includes","onPostTypeChange","newValue","updateQuery","categoryIds","tagIds","onTermsChange","terms","queryProperty","newTermValues","termIds","reduce","accumulator","termValue","termId","id","mapByName","push","onCategoriesChange","onTagsChange","search","querySearch","setQuerySearch","onChangeDebounced","cancel","getExistingTermsFormTokenValue","taxonomy","termsMapper","category","queryProp","post_tag","requestedTerm","term","mapById","name","columns","Math","max","length","names","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\n\nimport {\n\tPanelBody,\n\tQueryControls,\n\tTextControl,\n\tFormTokenField,\n\tSelectControl,\n\tRangeControl,\n\tToggleControl,\n\tNotice,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport {\n\tuseEffect,\n\tuseState,\n\tuseCallback,\n\tcreateInterpolateElement,\n} from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { getTermsInfo, usePostTypes } from '../utils';\nimport { MAX_FETCHED_TERMS } from '../constants';\n\nconst stickyOptions = [\n\t{ label: __( 'Include' ), value: '' },\n\t{ label: __( 'Exclude' ), value: 'exclude' },\n\t{ label: __( 'Only' ), value: 'only' },\n];\n\nconst CreateNewPostLink = ( { type } ) => {\n\tconst newPostUrl = addQueryArgs( 'post-new.php', {\n\t\tpost_type: type,\n\t} );\n\treturn (\n\t\t<div className=\"wp-block-query__create-new-link\">\n\t\t\t{ createInterpolateElement(\n\t\t\t\t__( '<a>Create a new post</a> for this feed.' ),\n\t\t\t\t// eslint-disable-next-line jsx-a11y/anchor-has-content\n\t\t\t\t{ a: <a href={ newPostUrl } /> }\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nexport default function QueryInspectorControls( {\n\tattributes: { query, layout },\n\tsetQuery,\n\tsetLayout,\n} ) {\n\tconst {\n\t\torder,\n\t\torderBy,\n\t\tauthor: selectedAuthorId,\n\t\tpostType,\n\t\tsticky,\n\t\tinherit,\n\t} = query;\n\tconst [ showCategories, setShowCategories ] = useState( true );\n\tconst [ showTags, setShowTags ] = useState( true );\n\tconst [ showSticky, setShowSticky ] = useState( postType === 'post' );\n\tconst { postTypesTaxonomiesMap, postTypesSelectOptions } = usePostTypes();\n\tconst { authorList, categories, tags } = useSelect( ( select ) => {\n\t\tconst { getEntityRecords } = select( coreStore );\n\t\tconst termsQuery = { per_page: MAX_FETCHED_TERMS };\n\t\tconst _categories = getEntityRecords(\n\t\t\t'taxonomy',\n\t\t\t'category',\n\t\t\ttermsQuery\n\t\t);\n\t\tconst _tags = getEntityRecords( 'taxonomy', 'post_tag', termsQuery );\n\t\treturn {\n\t\t\tcategories: getTermsInfo( _categories ),\n\t\t\ttags: getTermsInfo( _tags ),\n\t\t\tauthorList: getEntityRecords( 'root', 'user', {\n\t\t\t\tper_page: -1,\n\t\t\t} ),\n\t\t};\n\t}, [] );\n\tuseEffect( () => {\n\t\tif ( ! postTypesTaxonomiesMap ) return;\n\t\tconst postTypeTaxonomies = postTypesTaxonomiesMap[ postType ];\n\t\tsetShowCategories( postTypeTaxonomies.includes( 'category' ) );\n\t\tsetShowTags( postTypeTaxonomies.includes( 'post_tag' ) );\n\t}, [ postType, postTypesTaxonomiesMap ] );\n\tuseEffect( () => {\n\t\tsetShowSticky( postType === 'post' );\n\t}, [ postType ] );\n\tconst onPostTypeChange = ( newValue ) => {\n\t\tconst updateQuery = { postType: newValue };\n\t\tif ( ! postTypesTaxonomiesMap[ newValue ].includes( 'category' ) ) {\n\t\t\tupdateQuery.categoryIds = [];\n\t\t}\n\t\tif ( ! postTypesTaxonomiesMap[ newValue ].includes( 'post_tag' ) ) {\n\t\t\tupdateQuery.tagIds = [];\n\t\t}\n\t\tif ( newValue !== 'post' ) {\n\t\t\tupdateQuery.sticky = '';\n\t\t}\n\t\tsetQuery( updateQuery );\n\t};\n\t// Handles categories and tags changes.\n\tconst onTermsChange = ( terms, queryProperty ) => ( newTermValues ) => {\n\t\tconst termIds = newTermValues.reduce( ( accumulator, termValue ) => {\n\t\t\tconst termId = termValue?.id || terms.mapByName[ termValue ]?.id;\n\t\t\tif ( termId ) accumulator.push( termId );\n\t\t\treturn accumulator;\n\t\t}, [] );\n\t\tsetQuery( { [ queryProperty ]: termIds } );\n\t};\n\tconst onCategoriesChange = onTermsChange( categories, 'categoryIds' );\n\tconst onTagsChange = onTermsChange( tags, 'tagIds' );\n\n\tconst [ querySearch, setQuerySearch ] = useState( query.search );\n\tconst onChangeDebounced = useCallback(\n\t\tdebounce( () => {\n\t\t\tif ( query.search !== querySearch ) {\n\t\t\t\tsetQuery( { search: querySearch } );\n\t\t\t}\n\t\t}, 250 ),\n\t\t[ querySearch, query.search ]\n\t);\n\n\tuseEffect( () => {\n\t\tonChangeDebounced();\n\t\treturn onChangeDebounced.cancel;\n\t}, [ querySearch, onChangeDebounced ] );\n\n\t// Returns only the existing term ids (categories/tags) in proper\n\t// format to be used in `FormTokenField`. This prevents the component\n\t// from crashing in the editor, when non existing term ids were provided.\n\tconst getExistingTermsFormTokenValue = ( taxonomy ) => {\n\t\tconst termsMapper = {\n\t\t\tcategory: {\n\t\t\t\tqueryProp: 'categoryIds',\n\t\t\t\tterms: categories,\n\t\t\t},\n\t\t\tpost_tag: {\n\t\t\t\tqueryProp: 'tagIds',\n\t\t\t\tterms: tags,\n\t\t\t},\n\t\t};\n\t\tconst requestedTerm = termsMapper[ taxonomy ];\n\t\treturn ( query[ requestedTerm.queryProp ] || [] ).reduce(\n\t\t\t( accumulator, termId ) => {\n\t\t\t\tconst term = requestedTerm.terms.mapById[ termId ];\n\t\t\t\tif ( term ) {\n\t\t\t\t\taccumulator.push( {\n\t\t\t\t\t\tid: termId,\n\t\t\t\t\t\tvalue: term.name,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn accumulator;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t};\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<CreateNewPostLink type={ postType } />\n\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={ __( 'Inherit query from URL' ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'Disable the option to customize the query arguments. Leave enabled to inherit the global query depending on the URL.'\n\t\t\t\t\t) }\n\t\t\t\t\tchecked={ !! inherit }\n\t\t\t\t\tonChange={ ( value ) => setQuery( { inherit: !! value } ) }\n\t\t\t\t/>\n\t\t\t\t{ ! inherit && (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\toptions={ postTypesSelectOptions }\n\t\t\t\t\t\tvalue={ postType }\n\t\t\t\t\t\tlabel={ __( 'Post Type' ) }\n\t\t\t\t\t\tonChange={ onPostTypeChange }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ layout?.type === 'flex' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\tvalue={ layout.columns }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetLayout( { columns: value } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 2 }\n\t\t\t\t\t\t\tmax={ Math.max( 6, layout.columns ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ layout.columns > 6 && (\n\t\t\t\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'This column count exceeds the recommended amount and may cause visual breakage.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</Notice>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t\t{ ! inherit && (\n\t\t\t\t\t<QueryControls\n\t\t\t\t\t\t{ ...{ order, orderBy } }\n\t\t\t\t\t\tonOrderChange={ ( value ) =>\n\t\t\t\t\t\t\tsetQuery( { order: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonOrderByChange={ ( value ) =>\n\t\t\t\t\t\t\tsetQuery( { orderBy: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ showSticky && (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel={ __( 'Sticky posts' ) }\n\t\t\t\t\t\toptions={ stickyOptions }\n\t\t\t\t\t\tvalue={ sticky }\n\t\t\t\t\t\tonChange={ ( value ) => setQuery( { sticky: value } ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t\t{ ! inherit && (\n\t\t\t\t<PanelBody title={ __( 'Filters' ) }>\n\t\t\t\t\t{ showCategories && categories?.terms?.length > 0 && (\n\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\tlabel={ __( 'Categories' ) }\n\t\t\t\t\t\t\tvalue={ getExistingTermsFormTokenValue(\n\t\t\t\t\t\t\t\t'category'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tsuggestions={ categories.names }\n\t\t\t\t\t\t\tonChange={ onCategoriesChange }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ showTags && tags?.terms?.length > 0 && (\n\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\tlabel={ __( 'Tags' ) }\n\t\t\t\t\t\t\tvalue={ getExistingTermsFormTokenValue(\n\t\t\t\t\t\t\t\t'post_tag'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tsuggestions={ tags.names }\n\t\t\t\t\t\t\tonChange={ onTagsChange }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<QueryControls\n\t\t\t\t\t\t{ ...{ selectedAuthorId, authorList } }\n\t\t\t\t\t\tonAuthorChange={ ( value ) =>\n\t\t\t\t\t\t\tsetQuery( {\n\t\t\t\t\t\t\t\tauthor: value !== '' ? +value : undefined,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Keyword' ) }\n\t\t\t\t\t\tvalue={ querySearch }\n\t\t\t\t\t\tonChange={ setQuerySearch }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t) }\n\t\t</InspectorControls>\n\t);\n}\n"]}