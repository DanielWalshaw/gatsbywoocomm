{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["useSelect","useDispatch","useInstanceId","useEffect","BlockControls","useBlockProps","store","blockEditorStore","__experimentalUseInnerBlocksProps","useInnerBlocksProps","QueryToolbar","QueryInspectorControls","QueryBlockSetup","DEFAULTS_POSTS_PER_PAGE","TEMPLATE","QueryContent","attributes","setAttributes","queryId","query","layout","__unstableMarkNextChangeAsNotPersistent","instanceId","blockProps","innerBlocksProps","template","select","getSettings","postsPerPage","newQuery","perPage","Object","keys","length","updateQuery","updateLayout","newLayout","QueryEdit","props","clientId","hasInnerBlocks","getBlocks","Component"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryInspectorControls from './query-inspector-controls';\nimport QueryBlockSetup from './query-block-setup';\nimport { DEFAULTS_POSTS_PER_PAGE } from '../constants';\n\nconst TEMPLATE = [ [ 'core/query-loop' ] ];\nexport function QueryContent( { attributes, setAttributes } ) {\n\tconst { queryId, query, layout } = attributes;\n\tconst { __unstableMarkNextChangeAsNotPersistent } = useDispatch(\n\t\tblockEditorStore\n\t);\n\tconst instanceId = useInstanceId( QueryContent );\n\tconst blockProps = useBlockProps();\n\tconst innerBlocksProps = useInnerBlocksProps( {}, { template: TEMPLATE } );\n\tconst { postsPerPage } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tpostsPerPage:\n\t\t\t\t+getSettings().postsPerPage || DEFAULTS_POSTS_PER_PAGE,\n\t\t};\n\t}, [] );\n\t// There are some effects running where some initialization logic is\n\t// happening and setting some values to some attributes (ex. queryId).\n\t// These updates can cause an `undo trap` where undoing will result in\n\t// resetting again, so we need to mark these changes as not persistent\n\t// with `__unstableMarkNextChangeAsNotPersistent`.\n\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to overide previous wanted changes.\n\tuseEffect( () => {\n\t\tconst newQuery = {};\n\t\tif ( ! query.perPage && postsPerPage ) {\n\t\t\tnewQuery.perPage = postsPerPage;\n\t\t}\n\t\tif ( !! Object.keys( newQuery ).length ) {\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tupdateQuery( newQuery );\n\t\t}\n\t}, [ query.perPage ] );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\tconst updateLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: { ...layout, ...newLayout } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\tsetLayout={ updateLayout }\n\t\t\t/>\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar\n\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\t\tsetLayout={ updateLayout }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst QueryEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\t!! select( blockEditorStore ).getBlocks( clientId ).length,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks ? QueryContent : QueryBlockSetup;\n\treturn <Component { ...props } />;\n};\n\nexport default QueryEdit;\n"]}