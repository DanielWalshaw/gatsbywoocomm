{"version":3,"sources":["@wordpress/block-library/src/query/edit/query-block-setup.js"],"names":["cloneDeep","useDispatch","__","_x","SelectControl","ToggleControl","cloneBlock","createBlocksFromInnerBlocksTemplate","store","blockEditorStore","BlockSetup","usePostTypes","QueryBlockSetup","clientId","query","attributes","setAttributes","blockName","name","postType","inherit","replaceBlocks","replaceInnerBlocks","postTypesSelectOptions","updateQuery","newQuery","onVariationSelect","nextVariation","innerBlocks","onBlockPatternSelect","blocks","clonedBlocks","map","block","clone","queryAttributes","Object","assign","perPage","inheritToggleHelp","value","newValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { cloneDeep } from 'lodash';\n/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { SelectControl, ToggleControl } from '@wordpress/components';\nimport {\n\tcloneBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n} from '@wordpress/blocks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport BlockSetup from './block-setup';\nimport { usePostTypes } from '../utils';\n\nconst QueryBlockSetup = ( {\n\tclientId,\n\tattributes: { query },\n\tsetAttributes,\n\tname: blockName,\n} ) => {\n\tconst { postType, inherit } = query;\n\tconst { replaceBlocks, replaceInnerBlocks } = useDispatch(\n\t\tblockEditorStore\n\t);\n\tconst { postTypesSelectOptions } = usePostTypes();\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\tconst onVariationSelect = ( nextVariation ) => {\n\t\tif ( nextVariation.attributes ) {\n\t\t\tsetAttributes( nextVariation.attributes );\n\t\t}\n\t\tif ( nextVariation.innerBlocks ) {\n\t\t\treplaceInnerBlocks(\n\t\t\t\tclientId,\n\t\t\t\tcreateBlocksFromInnerBlocksTemplate(\n\t\t\t\t\tnextVariation.innerBlocks\n\t\t\t\t),\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t};\n\tconst onBlockPatternSelect = ( blocks ) => {\n\t\tconst clonedBlocks = blocks.map( ( block ) => {\n\t\t\tconst clone = cloneBlock( block );\n\t\t\t/**\n\t\t\t * TODO: this check will be revised with the ongoing work on block patterns.\n\t\t\t * For now we keep the value of posts per page (`query.perPage`) from Query patterns\n\t\t\t * so as to preview the pattern as intended, without possible big previews.\n\t\t\t * During insertion, we need to override the Query's attributes that can be set in\n\t\t\t * the Placeholder and we unset the `perPage` value to be set appropriately by Query block.\n\t\t\t */\n\t\t\tif ( block.name === 'core/query' ) {\n\t\t\t\t/**\n\t\t\t\t * We need to `cloneDeep` the Query's attributes, as `cloneBlock` does a swallow\n\t\t\t\t * copy of the block.\n\t\t\t\t */\n\t\t\t\tconst queryAttributes = cloneDeep( clone.attributes );\n\t\t\t\tObject.assign( queryAttributes.query, {\n\t\t\t\t\tinherit: query.inherit,\n\t\t\t\t\tpostType: query.postType,\n\t\t\t\t\tperPage: null,\n\t\t\t\t} );\n\t\t\t\treturn {\n\t\t\t\t\t...clone,\n\t\t\t\t\tattributes: queryAttributes,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn clone;\n\t\t} );\n\t\treplaceBlocks( clientId, clonedBlocks );\n\t};\n\tconst inheritToggleHelp = !! inherit\n\t\t? _x(\n\t\t\t\t'Inherit the global query depending on the URL.',\n\t\t\t\t'Query block `inherit` option helping text'\n\t\t  )\n\t\t: _x(\n\t\t\t\t'Customize the query arguments.',\n\t\t\t\t'Query block `inherit` option helping text'\n\t\t  );\n\treturn (\n\t\t<BlockSetup\n\t\t\tblockName={ blockName }\n\t\t\tuseLayoutSetup={ true }\n\t\t\tonVariationSelect={ onVariationSelect }\n\t\t\tonBlockPatternSelect={ onBlockPatternSelect }\n\t\t>\n\t\t\t<div className=\"block-attributes-setup-container\">\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={ __( 'Inherit query from URL' ) }\n\t\t\t\t\tchecked={ !! inherit }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tupdateQuery( { inherit: !! value } )\n\t\t\t\t\t}\n\t\t\t\t\thelp={ inheritToggleHelp }\n\t\t\t\t/>\n\t\t\t\t{ ! inherit && (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\toptions={ postTypesSelectOptions }\n\t\t\t\t\t\tvalue={ postType }\n\t\t\t\t\t\tlabel={ __( 'Post Type' ) }\n\t\t\t\t\t\tonChange={ ( newValue ) =>\n\t\t\t\t\t\t\tupdateQuery( { postType: newValue } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</BlockSetup>\n\t);\n};\n\nexport default QueryBlockSetup;\n"]}