{"version":3,"sources":["@wordpress/block-library/src/post-content/edit.js"],"names":["__","useSelect","useBlockProps","__experimentalUseInnerBlocksProps","useInnerBlocksProps","__experimentalUseEditorFeature","useEditorFeature","store","blockEditorStore","useEntityBlockEditor","Content","layout","postType","postId","themeSupportsLayout","select","getSettings","supportsLayout","defaultLayout","usedLayout","inherit","contentSize","wideSize","alignments","id","blocks","onInput","onChange","props","className","value","__experimentalLayout","type","undefined","Placeholder","blockProps","PostContentEdit","context","contextPostId","contextPostType","attributes"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACCC,aADD,EAECC,iCAAiC,IAAIC,mBAFtC,EAGCC,8BAA8B,IAAIC,gBAHnC,EAICC,KAAK,IAAIC,gBAJV,QAKO,yBALP;AAMA,SAASC,oBAAT,QAAqC,sBAArC;;AAEA,SAASC,OAAT,OAAiD;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,MAAW,QAAXA,MAAW;AAChD,MAAMC,mBAAmB,GAAGb,SAAS,CAAE,UAAEc,MAAF,EAAc;AAAA;;AAAA,kBAC5BA,MAAM,CAAEP,gBAAF,CADsB;AAAA,QAC5CQ,WAD4C,WAC5CA,WAD4C;;AAEpD,2BAAOA,WAAW,EAAlB,iDAAO,aAAeC,cAAtB;AACA,GAHoC,EAGlC,EAHkC,CAArC;AAIA,MAAMC,aAAa,GAAGZ,gBAAgB,CAAE,QAAF,CAAhB,IAAgC,EAAtD;AACA,MAAMa,UAAU,GAAG,CAAC,CAAER,MAAH,IAAaA,MAAM,CAACS,OAApB,GAA8BF,aAA9B,GAA8CP,MAAjE;AANgD,MAOxCU,WAPwC,GAOdF,UAPc,CAOxCE,WAPwC;AAAA,MAO3BC,QAP2B,GAOdH,UAPc,CAO3BG,QAP2B;AAQhD,MAAMC,UAAU,GACfF,WAAW,IAAIC,QAAf,GACG,CAAE,MAAF,EAAU,MAAV,CADH,GAEG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,CAHJ;;AARgD,8BAYVb,oBAAoB,CACzD,UADyD,EAEzDG,QAFyD,EAGzD;AAAEY,IAAAA,EAAE,EAAEX;AAAN,GAHyD,CAZV;AAAA;AAAA,MAYxCY,MAZwC;AAAA,MAYhCC,OAZgC;AAAA,MAYvBC,QAZuB;;AAiBhD,MAAMC,KAAK,GAAGxB,mBAAmB,CAChCF,aAAa,CAAE;AAAE2B,IAAAA,SAAS,EAAE;AAAb,GAAF,CADmB,EAEhC;AACCC,IAAAA,KAAK,EAAEL,MADR;AAECC,IAAAA,OAAO,EAAPA,OAFD;AAGCC,IAAAA,QAAQ,EAARA,QAHD;AAICI,IAAAA,oBAAoB,EAAE;AACrBC,MAAAA,IAAI,EAAE,SADe;AAErB;AACAT,MAAAA,UAAU,EAAET,mBAAmB,GAAGS,UAAH,GAAgBU;AAH1B;AAJvB,GAFgC,CAAjC;AAaA,SAAO,qBAAUL,KAAV,CAAP;AACA;;AAED,SAASM,WAAT,GAAuB;AACtB,MAAMC,UAAU,GAAGjC,aAAa,EAAhC;AACA,SACC,qBAAUiC,UAAV,EACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,4BAAQnC,EAAE,CAAE,yCAAF,CAAV,CADD,CADD,CADD;AAOA;;AAED,eAAe,SAASoC,eAAT,QAGX;AAAA,4BAFHC,OAEG;AAAA,MAFgBC,aAEhB,iBAFQzB,MAER;AAAA,MAFyC0B,eAEzC,iBAF+B3B,QAE/B;AAAA,MADH4B,UACG,SADHA,UACG;AAAA,2BACqBA,UADrB,CACK7B,MADL;AAAA,MACKA,MADL,mCACc,EADd;AAGH,SAAO2B,aAAa,IAAIC,eAAjB,GACN,cAAC,OAAD;AACC,IAAA,QAAQ,EAAGA,eADZ;AAEC,IAAA,MAAM,EAAGD,aAFV;AAGC,IAAA,MAAM,EAAG3B;AAHV,IADM,GAON,cAAC,WAAD,OAPD;AASA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\t__experimentalUseEditorFeature as useEditorFeature,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useEntityBlockEditor } from '@wordpress/core-data';\n\nfunction Content( { layout, postType, postId } ) {\n\tconst themeSupportsLayout = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings()?.supportsLayout;\n\t}, [] );\n\tconst defaultLayout = useEditorFeature( 'layout' ) || {};\n\tconst usedLayout = !! layout && layout.inherit ? defaultLayout : layout;\n\tconst { contentSize, wideSize } = usedLayout;\n\tconst alignments =\n\t\tcontentSize || wideSize\n\t\t\t? [ 'wide', 'full' ]\n\t\t\t: [ 'left', 'center', 'right' ];\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\tpostType,\n\t\t{ id: postId }\n\t);\n\tconst props = useInnerBlocksProps(\n\t\tuseBlockProps( { className: 'entry-content' } ),\n\t\t{\n\t\t\tvalue: blocks,\n\t\t\tonInput,\n\t\t\tonChange,\n\t\t\t__experimentalLayout: {\n\t\t\t\ttype: 'default',\n\t\t\t\t// Find a way to inject this in the support flag code (hooks).\n\t\t\t\talignments: themeSupportsLayout ? alignments : undefined,\n\t\t\t},\n\t\t}\n\t);\n\treturn <div { ...props } />;\n}\n\nfunction Placeholder() {\n\tconst blockProps = useBlockProps();\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<div className=\"wp-block-post-content__placeholder\">\n\t\t\t\t<span>{ __( 'This is a placeholder for post content.' ) }</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default function PostContentEdit( {\n\tcontext: { postId: contextPostId, postType: contextPostType },\n\tattributes,\n} ) {\n\tconst { layout = {} } = attributes;\n\n\treturn contextPostId && contextPostType ? (\n\t\t<Content\n\t\t\tpostType={ contextPostType }\n\t\t\tpostId={ contextPostId }\n\t\t\tlayout={ layout }\n\t\t/>\n\t) : (\n\t\t<Placeholder />\n\t);\n}\n"]}