import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */
// import { useSelect, useDispatch } from '@wordpress/data';

import { AlignmentToolbar, BlockControls, useBlockProps, Warning } from '@wordpress/block-editor';
import { ToolbarGroup } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import HeadingLevelDropdown from '../heading/heading-level-dropdown';
var SUPPORTED_TYPES = ['archive'];
export default function QueryTitleEdit(_ref) {
  var _classnames;

  var _ref$attributes = _ref.attributes,
      type = _ref$attributes.type,
      level = _ref$attributes.level,
      textAlign = _ref$attributes.textAlign,
      setAttributes = _ref.setAttributes;
  var TagName = "h".concat(level);
  var blockProps = useBlockProps({
    className: classnames((_classnames = {}, _defineProperty(_classnames, "has-text-align-".concat(textAlign), textAlign), _defineProperty(_classnames, 'wp-block-query-title__placeholder', type === 'archive'), _classnames))
  }); // The plan is to augment this block with more
  // block variations like `Search Title`.

  if (!SUPPORTED_TYPES.includes(type)) {
    return createElement("div", blockProps, createElement(Warning, null, __('Provided type is not supported.')));
  }

  var titleElement;

  if (type === 'archive') {
    titleElement = createElement(TagName, blockProps, __('Archive title'));
  }

  return createElement(Fragment, null, createElement(BlockControls, null, createElement(ToolbarGroup, null, createElement(HeadingLevelDropdown, {
    selectedLevel: level,
    onChange: function onChange(newLevel) {
      return setAttributes({
        level: newLevel
      });
    }
  })), createElement(AlignmentToolbar, {
    value: textAlign,
    onChange: function onChange(nextAlign) {
      setAttributes({
        textAlign: nextAlign
      });
    }
  })), titleElement);
}
//# sourceMappingURL=edit.js.map