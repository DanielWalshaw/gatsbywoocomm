{"version":3,"sources":["@wordpress/block-library/src/social-links/edit.js"],"names":["classNames","Fragment","useEffect","BlockControls","__experimentalUseInnerBlocksProps","useInnerBlocksProps","useBlockProps","InspectorControls","JustifyToolbar","ContrastChecker","PanelColorSettings","withColors","DropdownMenu","MenuGroup","MenuItem","PanelBody","ToggleControl","ToolbarItem","ToolbarGroup","__","check","ALLOWED_BLOCKS","sizeOptions","name","value","SocialLinksEdit","props","attributes","iconBackgroundColor","iconColor","isSelected","setAttributes","setIconBackgroundColor","setIconColor","iconBackgroundColorValue","iconColorValue","itemsJustification","openInNewTab","size","logosOnly","className","indexOf","undefined","customIconBackgroundColor","SocialPlaceholder","SelectedSocialPlaceholder","color","blockProps","innerBlocksProps","allowedBlocks","orientation","placeholder","templateLock","__experimentalAppenderTagName","POPOVER_PROPS","position","isAlternate","toggleProps","onClose","map","entry","onChange","colorValue","label","textColor","backgroundColor","iconColorAttributes"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classNames from 'classnames';\n\n/**\n * WordPress dependencies\n */\n\nimport { Fragment, useEffect } from '@wordpress/element';\n\nimport {\n\tBlockControls,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\tuseBlockProps,\n\tInspectorControls,\n\tJustifyToolbar,\n\tContrastChecker,\n\tPanelColorSettings,\n\twithColors,\n} from '@wordpress/block-editor';\nimport {\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItem,\n\tPanelBody,\n\tToggleControl,\n\tToolbarItem,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { check } from '@wordpress/icons';\n\nconst ALLOWED_BLOCKS = [ 'core/social-link' ];\n\nconst sizeOptions = [\n\t{ name: __( 'Small' ), value: 'has-small-icon-size' },\n\t{ name: __( 'Normal' ), value: 'has-normal-icon-size' },\n\t{ name: __( 'Large' ), value: 'has-large-icon-size' },\n\t{ name: __( 'Huge' ), value: 'has-huge-icon-size' },\n];\n\nexport function SocialLinksEdit( props ) {\n\tconst {\n\t\tattributes,\n\t\ticonBackgroundColor,\n\t\ticonColor,\n\t\tisSelected,\n\t\tsetAttributes,\n\t\tsetIconBackgroundColor,\n\t\tsetIconColor,\n\t} = props;\n\n\tconst {\n\t\ticonBackgroundColorValue,\n\t\ticonColorValue,\n\t\titemsJustification,\n\t\topenInNewTab,\n\t\tsize,\n\t} = attributes;\n\n\t// Remove icon background color if logos only style selected.\n\tconst logosOnly =\n\t\tattributes.className?.indexOf( 'is-style-logos-only' ) >= 0;\n\tuseEffect( () => {\n\t\tif ( logosOnly ) {\n\t\t\tsetAttributes( {\n\t\t\t\ticonBackgroundColor: undefined,\n\t\t\t\tcustomIconBackgroundColor: undefined,\n\t\t\t\ticonBackgroundColorValue: undefined,\n\t\t\t} );\n\t\t}\n\t}, [ logosOnly, setAttributes ] );\n\n\tconst SocialPlaceholder = (\n\t\t<li className=\"wp-block-social-links__social-placeholder\">\n\t\t\t<div className=\"wp-social-link\"></div>\n\t\t\t<div className=\"wp-block-social-links__social-placeholder-icons\">\n\t\t\t\t<div className=\"wp-social-link wp-social-link-twitter\"></div>\n\t\t\t\t<div className=\"wp-social-link wp-social-link-facebook\"></div>\n\t\t\t\t<div className=\"wp-social-link wp-social-link-instagram\"></div>\n\t\t\t</div>\n\t\t</li>\n\t);\n\n\tconst SelectedSocialPlaceholder = (\n\t\t<li className=\"wp-block-social-links__social-prompt\">\n\t\t\t{ __( 'Click plus to add' ) }\n\t\t</li>\n\t);\n\n\t// Fallback color values are used maintain selections in case switching\n\t// themes and named colors in palette do not match.\n\tconst className = classNames( size, {\n\t\t'has-icon-color': iconColor.color || iconColorValue,\n\t\t'has-icon-background-color':\n\t\t\ticonBackgroundColor.color || iconBackgroundColorValue,\n\t\t[ `items-justified-${ itemsJustification }` ]: itemsJustification,\n\t} );\n\n\tconst blockProps = useBlockProps( { className } );\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t\torientation: 'horizontal',\n\t\tplaceholder: isSelected ? SelectedSocialPlaceholder : SocialPlaceholder,\n\t\ttemplateLock: false,\n\t\t__experimentalAppenderTagName: 'li',\n\t} );\n\n\tconst POPOVER_PROPS = {\n\t\tposition: 'bottom right',\n\t\tisAlternate: true,\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<BlockControls>\n\t\t\t\t<JustifyToolbar\n\t\t\t\t\tallowedControls={ [\n\t\t\t\t\t\t'left',\n\t\t\t\t\t\t'center',\n\t\t\t\t\t\t'right',\n\t\t\t\t\t\t'space-between',\n\t\t\t\t\t] }\n\t\t\t\t\tvalue={ itemsJustification }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { itemsJustification: value } )\n\t\t\t\t\t}\n\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\tposition: 'bottom right',\n\t\t\t\t\t\tisAlternate: true,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarItem>\n\t\t\t\t\t\t{ ( toggleProps ) => (\n\t\t\t\t\t\t\t<DropdownMenu\n\t\t\t\t\t\t\t\tlabel={ __( 'Size' ) }\n\t\t\t\t\t\t\t\ttext={ __( 'Size' ) }\n\t\t\t\t\t\t\t\ticon={ null }\n\t\t\t\t\t\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\t\t\t\t\t\ttoggleProps={ toggleProps }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t\t\t{ sizeOptions.map( ( entry ) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t( size ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry.value ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t( ! size &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry.value ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'has-normal-icon-size' ) ) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheck\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize === entry.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={ entry.value }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize: entry.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t\t\t\t\t\t\t\trole=\"menuitemradio\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ entry.name }\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ToolbarItem>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Link settings' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Open links in new tab' ) }\n\t\t\t\t\t\tchecked={ openInNewTab }\n\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\tsetAttributes( { openInNewTab: ! openInNewTab } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelColorSettings\n\t\t\t\t\ttitle={ __( 'Color' ) }\n\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Use custom attribute as fallback to prevent loss of named color selection when\n\t\t\t\t\t\t\t// switching themes to a new theme that does not have a matching named color.\n\t\t\t\t\t\t\tvalue: iconColor.color || iconColorValue,\n\t\t\t\t\t\t\tonChange: ( colorValue ) => {\n\t\t\t\t\t\t\t\tsetIconColor( colorValue );\n\t\t\t\t\t\t\t\tsetAttributes( { iconColorValue: colorValue } );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlabel: __( 'Icon color' ),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t! logosOnly && {\n\t\t\t\t\t\t\t// Use custom attribute as fallback to prevent loss of named color selection when\n\t\t\t\t\t\t\t// switching themes to a new theme that does not have a matching named color.\n\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\ticonBackgroundColor.color ||\n\t\t\t\t\t\t\t\ticonBackgroundColorValue,\n\t\t\t\t\t\t\tonChange: ( colorValue ) => {\n\t\t\t\t\t\t\t\tsetIconBackgroundColor( colorValue );\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\ticonBackgroundColorValue: colorValue,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlabel: __( 'Icon background color' ),\n\t\t\t\t\t\t},\n\t\t\t\t\t] }\n\t\t\t\t/>\n\t\t\t\t{ ! logosOnly && (\n\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\ttextColor: iconColorValue,\n\t\t\t\t\t\t\tbackgroundColor: iconBackgroundColorValue,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tisLargeText={ false }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</InspectorControls>\n\t\t\t<ul { ...innerBlocksProps } />\n\t\t</Fragment>\n\t);\n}\n\nconst iconColorAttributes = {\n\ticonColor: 'icon-color',\n\ticonBackgroundColor: 'icon-background-color',\n};\n\nexport default withColors( iconColorAttributes )( SocialLinksEdit );\n"]}