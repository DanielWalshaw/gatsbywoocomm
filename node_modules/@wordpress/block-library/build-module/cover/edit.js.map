{"version":3,"sources":["@wordpress/block-library/src/cover/edit.js"],"names":["classnames","FastAverageColor","tinycolor","Fragment","useEffect","useRef","useState","BaseControl","Button","FocalPointPicker","PanelBody","PanelRow","RangeControl","ResizableBox","Spinner","ToggleControl","withNotices","__experimentalBoxControl","BoxControl","compose","withInstanceId","useInstanceId","BlockControls","BlockIcon","InspectorControls","MediaPlaceholder","MediaReplaceFlow","withColors","ColorPalette","useBlockProps","__experimentalUseInnerBlocksProps","useInnerBlocksProps","__experimentalUseGradient","__experimentalPanelColorGradientSettings","PanelColorGradientSettings","__experimentalUnitControl","UnitControl","__experimentalBlockAlignmentMatrixControl","BlockAlignmentMatrixControl","__experimentalBlockFullHeightAligmentControl","FullHeightAlignmentControl","store","blockEditorStore","__","withDispatch","cover","icon","isBlobURL","ALLOWED_MEDIA_TYPES","attributesFromMedia","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","COVER_MIN_HEIGHT","CSS_UNITS","backgroundImageStyles","dimRatioToClass","isContentPositionCenter","getPositionClassName","INNER_BLOCKS_TEMPLATE","align","fontSize","placeholder","BoxControlVisualizer","__Visualizer","retrieveFastAverageColor","fastAverageColor","CoverHeightInput","onChange","onUnitChange","unit","value","temporaryInput","setTemporaryInput","instanceId","inputId","isPx","handleOnChange","unprocessedValue","inputValue","parseInt","undefined","isNaN","handleOnBlur","min","maxWidth","RESIZABLE_BOX_ENABLE_OPTION","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","ResizableCover","className","onResizeStart","onResize","onResizeStop","props","isResizing","setIsResizing","_event","_direction","elt","clientHeight","useCoverIsDark","url","dimRatio","overlayColor","elementRef","isDark","setIsDark","current","getColorAsync","color","mediaPosition","x","y","Math","round","isTemporaryMedia","id","CoverPlaceholder","hasBackground","children","noticeUI","noticeOperations","onSelectMedia","removeAllNotices","createErrorNotice","title","instructions","message","CoverEdit","attributes","isSelected","setAttributes","setOverlayColor","toggleSelection","contentPosition","backgroundType","focalPoint","hasParallax","isRepeated","minHeight","minHeightUnit","styleAttribute","style","gradientClass","gradientValue","setGradient","isUploadingMedia","prevMinHeightValue","setPrevMinHeightValue","prevMinHeightUnit","setPrevMinHeightUnit","isMinFullHeight","toggleMinFullHeight","toggleParallax","toggleIsRepeated","isDarkElement","isImageBackground","isVideoBackground","temporaryMinHeight","setTemporaryMinHeight","minHeightWithUnit","isImgElement","backgroundImage","backgroundColor","mediaStyle","objectPosition","showFocalPointPicker","imperativeFocalPointPreview","ref","styleOfRef","property","controls","nextPosition","newFocalPoint","newMinHeight","nextUnit","colorValue","onColorChange","onGradientChange","label","newDimRation","blockProps","innerBlocksProps","template","templateInsertUpdatesSelection","classes","class","spacing","padding","visualizers","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport FastAverageColor from 'fast-average-color';\nimport tinycolor from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment, useEffect, useRef, useState } from '@wordpress/element';\nimport {\n\tBaseControl,\n\tButton,\n\tFocalPointPicker,\n\tPanelBody,\n\tPanelRow,\n\tRangeControl,\n\tResizableBox,\n\tSpinner,\n\tToggleControl,\n\twithNotices,\n\t__experimentalBoxControl as BoxControl,\n} from '@wordpress/components';\nimport { compose, withInstanceId, useInstanceId } from '@wordpress/compose';\nimport {\n\tBlockControls,\n\tBlockIcon,\n\tInspectorControls,\n\tMediaPlaceholder,\n\tMediaReplaceFlow,\n\twithColors,\n\tColorPalette,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\t__experimentalUseGradient,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalBlockAlignmentMatrixControl as BlockAlignmentMatrixControl,\n\t__experimentalBlockFullHeightAligmentControl as FullHeightAlignmentControl,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { withDispatch } from '@wordpress/data';\nimport { cover as icon } from '@wordpress/icons';\nimport { isBlobURL } from '@wordpress/blob';\n\n/**\n * Internal dependencies\n */\nimport {\n\tALLOWED_MEDIA_TYPES,\n\tattributesFromMedia,\n\tIMAGE_BACKGROUND_TYPE,\n\tVIDEO_BACKGROUND_TYPE,\n\tCOVER_MIN_HEIGHT,\n\tCSS_UNITS,\n\tbackgroundImageStyles,\n\tdimRatioToClass,\n\tisContentPositionCenter,\n\tgetPositionClassName,\n} from './shared';\n\n/**\n * Module Constants\n */\n\nconst INNER_BLOCKS_TEMPLATE = [\n\t[\n\t\t'core/paragraph',\n\t\t{\n\t\t\talign: 'center',\n\t\t\tfontSize: 'large',\n\t\t\tplaceholder: __( 'Write title…' ),\n\t\t},\n\t],\n];\n\nconst { __Visualizer: BoxControlVisualizer } = BoxControl;\n\nfunction retrieveFastAverageColor() {\n\tif ( ! retrieveFastAverageColor.fastAverageColor ) {\n\t\tretrieveFastAverageColor.fastAverageColor = new FastAverageColor();\n\t}\n\treturn retrieveFastAverageColor.fastAverageColor;\n}\n\nfunction CoverHeightInput( {\n\tonChange,\n\tonUnitChange,\n\tunit = 'px',\n\tvalue = '',\n} ) {\n\tconst [ temporaryInput, setTemporaryInput ] = useState( null );\n\n\tconst instanceId = useInstanceId( UnitControl );\n\tconst inputId = `block-cover-height-input-${ instanceId }`;\n\tconst isPx = unit === 'px';\n\n\tconst handleOnChange = ( unprocessedValue ) => {\n\t\tconst inputValue =\n\t\t\tunprocessedValue !== ''\n\t\t\t\t? parseInt( unprocessedValue, 10 )\n\t\t\t\t: undefined;\n\n\t\tif ( isNaN( inputValue ) && inputValue !== undefined ) {\n\t\t\tsetTemporaryInput( unprocessedValue );\n\t\t\treturn;\n\t\t}\n\t\tsetTemporaryInput( null );\n\t\tonChange( inputValue );\n\t\tif ( inputValue === undefined ) {\n\t\t\tonUnitChange();\n\t\t}\n\t};\n\n\tconst handleOnBlur = () => {\n\t\tif ( temporaryInput !== null ) {\n\t\t\tsetTemporaryInput( null );\n\t\t}\n\t};\n\n\tconst inputValue = temporaryInput !== null ? temporaryInput : value;\n\tconst min = isPx ? COVER_MIN_HEIGHT : 0;\n\n\treturn (\n\t\t<BaseControl label={ __( 'Minimum height of cover' ) } id={ inputId }>\n\t\t\t<UnitControl\n\t\t\t\tid={ inputId }\n\t\t\t\tisResetValueOnUnitChange\n\t\t\t\tmin={ min }\n\t\t\t\tonBlur={ handleOnBlur }\n\t\t\t\tonChange={ handleOnChange }\n\t\t\t\tonUnitChange={ onUnitChange }\n\t\t\t\tstep=\"1\"\n\t\t\t\tstyle={ { maxWidth: 80 } }\n\t\t\t\tunit={ unit }\n\t\t\t\tunits={ CSS_UNITS }\n\t\t\t\tvalue={ inputValue }\n\t\t\t/>\n\t\t</BaseControl>\n\t);\n}\n\nconst RESIZABLE_BOX_ENABLE_OPTION = {\n\ttop: false,\n\tright: false,\n\tbottom: true,\n\tleft: false,\n\ttopRight: false,\n\tbottomRight: false,\n\tbottomLeft: false,\n\ttopLeft: false,\n};\n\nfunction ResizableCover( {\n\tclassName,\n\tonResizeStart,\n\tonResize,\n\tonResizeStop,\n\t...props\n} ) {\n\tconst [ isResizing, setIsResizing ] = useState( false );\n\n\treturn (\n\t\t<ResizableBox\n\t\t\tclassName={ classnames( className, {\n\t\t\t\t'is-resizing': isResizing,\n\t\t\t} ) }\n\t\t\tenable={ RESIZABLE_BOX_ENABLE_OPTION }\n\t\t\tonResizeStart={ ( _event, _direction, elt ) => {\n\t\t\t\tonResizeStart( elt.clientHeight );\n\t\t\t\tonResize( elt.clientHeight );\n\t\t\t} }\n\t\t\tonResize={ ( _event, _direction, elt ) => {\n\t\t\t\tonResize( elt.clientHeight );\n\t\t\t\tif ( ! isResizing ) {\n\t\t\t\t\tsetIsResizing( true );\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonResizeStop={ ( _event, _direction, elt ) => {\n\t\t\t\tonResizeStop( elt.clientHeight );\n\t\t\t\tsetIsResizing( false );\n\t\t\t} }\n\t\t\tminHeight={ COVER_MIN_HEIGHT }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n\n/**\n * useCoverIsDark is a hook that returns a boolean variable specifying if the cover\n * background is dark or not.\n *\n * @param {?string} url          Url of the media background.\n * @param {?number} dimRatio     Transparency of the overlay color. If an image and\n *                               color are set, dimRatio is used to decide what is used\n *                               for background darkness checking purposes.\n * @param {?string} overlayColor String containing the overlay color value if one exists.\n * @param {?Object} elementRef   If a media background is set, elementRef should contain a reference to a\n *                               dom element that renders that media.\n *\n * @return {boolean} True if the cover background is considered \"dark\" and false otherwise.\n */\nfunction useCoverIsDark( url, dimRatio = 50, overlayColor, elementRef ) {\n\tconst [ isDark, setIsDark ] = useState( false );\n\tuseEffect( () => {\n\t\t// If opacity is lower than 50 the dominant color is the image or video color,\n\t\t// so use that color for the dark mode computation.\n\t\tif ( url && dimRatio <= 50 && elementRef.current ) {\n\t\t\tretrieveFastAverageColor().getColorAsync(\n\t\t\t\telementRef.current,\n\t\t\t\t( color ) => {\n\t\t\t\t\tsetIsDark( color.isDark );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}, [ url, url && dimRatio <= 50 && elementRef.current, setIsDark ] );\n\tuseEffect( () => {\n\t\t// If opacity is greater than 50 the dominant color is the overlay color,\n\t\t// so use that color for the dark mode computation.\n\t\tif ( dimRatio > 50 || ! url ) {\n\t\t\tif ( ! overlayColor ) {\n\t\t\t\t// If no overlay color exists the overlay color is black (isDark )\n\t\t\t\tsetIsDark( true );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetIsDark( tinycolor( overlayColor ).isDark() );\n\t\t}\n\t}, [ overlayColor, dimRatio > 50 || ! url, setIsDark ] );\n\tuseEffect( () => {\n\t\tif ( ! url && ! overlayColor ) {\n\t\t\t// Reset isDark\n\t\t\tsetIsDark( false );\n\t\t}\n\t}, [ ! url && ! overlayColor, setIsDark ] );\n\treturn isDark;\n}\n\nfunction mediaPosition( { x, y } ) {\n\treturn `${ Math.round( x * 100 ) }% ${ Math.round( y * 100 ) }%`;\n}\n\n/**\n * Is the URL a temporary blob URL? A blob URL is one that is used temporarily while\n * the media (image or video) is being uploaded and will not have an id allocated yet.\n *\n * @param {number} id  The id of the media.\n * @param {string} url The url of the media.\n *\n * @return {boolean} Is the URL a Blob URL.\n */\nconst isTemporaryMedia = ( id, url ) => ! id && isBlobURL( url );\n\nfunction CoverPlaceholder( {\n\thasBackground = false,\n\tchildren,\n\tnoticeUI,\n\tnoticeOperations,\n\tonSelectMedia,\n} ) {\n\tconst { removeAllNotices, createErrorNotice } = noticeOperations;\n\treturn (\n\t\t<MediaPlaceholder\n\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\tlabels={ {\n\t\t\t\ttitle: __( 'Cover' ),\n\t\t\t\tinstructions: __(\n\t\t\t\t\t'Upload an image or video file, or pick one from your media library.'\n\t\t\t\t),\n\t\t\t} }\n\t\t\tonSelect={ onSelectMedia }\n\t\t\taccept=\"image/*,video/*\"\n\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\tnotices={ noticeUI }\n\t\t\tdisableMediaButtons={ hasBackground }\n\t\t\tonError={ ( message ) => {\n\t\t\t\tremoveAllNotices();\n\t\t\t\tcreateErrorNotice( message );\n\t\t\t} }\n\t\t>\n\t\t\t{ children }\n\t\t</MediaPlaceholder>\n\t);\n}\n\nfunction CoverEdit( {\n\tattributes,\n\tisSelected,\n\tnoticeUI,\n\tnoticeOperations,\n\toverlayColor,\n\tsetAttributes,\n\tsetOverlayColor,\n\ttoggleSelection,\n} ) {\n\tconst {\n\t\tcontentPosition,\n\t\tid,\n\t\tbackgroundType,\n\t\tdimRatio,\n\t\tfocalPoint,\n\t\thasParallax,\n\t\tisRepeated,\n\t\tminHeight,\n\t\tminHeightUnit,\n\t\tstyle: styleAttribute,\n\t\turl,\n\t} = attributes;\n\tconst {\n\t\tgradientClass,\n\t\tgradientValue,\n\t\tsetGradient,\n\t} = __experimentalUseGradient();\n\tconst onSelectMedia = attributesFromMedia( setAttributes );\n\tconst isUploadingMedia = isTemporaryMedia( id, url );\n\n\tconst [ prevMinHeightValue, setPrevMinHeightValue ] = useState( minHeight );\n\tconst [ prevMinHeightUnit, setPrevMinHeightUnit ] = useState(\n\t\tminHeightUnit\n\t);\n\tconst isMinFullHeight = minHeightUnit === 'vh' && minHeight === 100;\n\n\tconst toggleMinFullHeight = () => {\n\t\tif ( isMinFullHeight ) {\n\t\t\t// If there aren't previous values, take the default ones.\n\t\t\tif ( prevMinHeightUnit === 'vh' && prevMinHeightValue === 100 ) {\n\t\t\t\treturn setAttributes( {\n\t\t\t\t\tminHeight: undefined,\n\t\t\t\t\tminHeightUnit: undefined,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Set the previous values of height.\n\t\t\treturn setAttributes( {\n\t\t\t\tminHeight: prevMinHeightValue,\n\t\t\t\tminHeightUnit: prevMinHeightUnit,\n\t\t\t} );\n\t\t}\n\n\t\tsetPrevMinHeightValue( minHeight );\n\t\tsetPrevMinHeightUnit( minHeightUnit );\n\n\t\t// Set full height.\n\t\treturn setAttributes( {\n\t\t\tminHeight: 100,\n\t\t\tminHeightUnit: 'vh',\n\t\t} );\n\t};\n\n\tconst toggleParallax = () => {\n\t\tsetAttributes( {\n\t\t\thasParallax: ! hasParallax,\n\t\t\t...( ! hasParallax ? { focalPoint: undefined } : {} ),\n\t\t} );\n\t};\n\n\tconst toggleIsRepeated = () => {\n\t\tsetAttributes( {\n\t\t\tisRepeated: ! isRepeated,\n\t\t} );\n\t};\n\n\tconst isDarkElement = useRef();\n\tconst isDark = useCoverIsDark(\n\t\turl,\n\t\tdimRatio,\n\t\toverlayColor.color,\n\t\tisDarkElement\n\t);\n\n\tconst isImageBackground = IMAGE_BACKGROUND_TYPE === backgroundType;\n\tconst isVideoBackground = VIDEO_BACKGROUND_TYPE === backgroundType;\n\n\tconst [ temporaryMinHeight, setTemporaryMinHeight ] = useState( null );\n\n\tconst minHeightWithUnit = minHeightUnit\n\t\t? `${ minHeight }${ minHeightUnit }`\n\t\t: minHeight;\n\n\tconst isImgElement = ! ( hasParallax || isRepeated );\n\n\tconst style = {\n\t\t...( isImageBackground && ! isImgElement\n\t\t\t? backgroundImageStyles( url )\n\t\t\t: {\n\t\t\t\t\tbackgroundImage: gradientValue ? gradientValue : undefined,\n\t\t\t  } ),\n\t\tbackgroundColor: overlayColor.color,\n\t\tminHeight: temporaryMinHeight || minHeightWithUnit || undefined,\n\t};\n\n\tconst mediaStyle = {\n\t\tobjectPosition:\n\t\t\tfocalPoint && isImgElement\n\t\t\t\t? mediaPosition( focalPoint )\n\t\t\t\t: undefined,\n\t};\n\n\tconst hasBackground = !! ( url || overlayColor.color || gradientValue );\n\tconst showFocalPointPicker =\n\t\tisVideoBackground ||\n\t\t( isImageBackground && ( ! hasParallax || isRepeated ) );\n\n\tconst imperativeFocalPointPreview = ( value ) => {\n\t\tconst [ styleOfRef, property ] = isDarkElement.current\n\t\t\t? [ isDarkElement.current.style, 'objectPosition' ]\n\t\t\t: [ ref.current.style, 'backgroundPosition' ];\n\t\tstyleOfRef[ property ] = mediaPosition( value );\n\t};\n\n\tconst controls = (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<BlockAlignmentMatrixControl\n\t\t\t\t\tlabel={ __( 'Change content position' ) }\n\t\t\t\t\tvalue={ contentPosition }\n\t\t\t\t\tonChange={ ( nextPosition ) =>\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tcontentPosition: nextPosition,\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t\tisDisabled={ ! hasBackground }\n\t\t\t\t/>\n\t\t\t\t<FullHeightAlignmentControl\n\t\t\t\t\tisActive={ isMinFullHeight }\n\t\t\t\t\tonToggle={ toggleMinFullHeight }\n\t\t\t\t\tisDisabled={ ! hasBackground }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<BlockControls group=\"other\">\n\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\tmediaId={ id }\n\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\taccept=\"image/*,video/*\"\n\t\t\t\t\tonSelect={ onSelectMedia }\n\t\t\t\t\tname={ ! url ? __( 'Add Media' ) : __( 'Replace' ) }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t{ !! url && (\n\t\t\t\t\t<PanelBody title={ __( 'Media settings' ) }>\n\t\t\t\t\t\t{ isImageBackground && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Fixed background' ) }\n\t\t\t\t\t\t\t\t\tchecked={ hasParallax }\n\t\t\t\t\t\t\t\t\tonChange={ toggleParallax }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Repeated background' ) }\n\t\t\t\t\t\t\t\t\tchecked={ isRepeated }\n\t\t\t\t\t\t\t\t\tonChange={ toggleIsRepeated }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ showFocalPointPicker && (\n\t\t\t\t\t\t\t<FocalPointPicker\n\t\t\t\t\t\t\t\tlabel={ __( 'Focal point picker' ) }\n\t\t\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\t\t\tvalue={ focalPoint }\n\t\t\t\t\t\t\t\tonDragStart={ imperativeFocalPointPreview }\n\t\t\t\t\t\t\t\tonDrag={ imperativeFocalPointPreview }\n\t\t\t\t\t\t\t\tonChange={ ( newFocalPoint ) =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\tfocalPoint: newFocalPoint,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\tclassName=\"block-library-cover__reset-button\"\n\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\t\t\t\t\tbackgroundType: undefined,\n\t\t\t\t\t\t\t\t\t\tdimRatio: undefined,\n\t\t\t\t\t\t\t\t\t\tfocalPoint: undefined,\n\t\t\t\t\t\t\t\t\t\thasParallax: undefined,\n\t\t\t\t\t\t\t\t\t\tisRepeated: undefined,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Clear Media' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t\t<PanelBody title={ __( 'Dimensions' ) }>\n\t\t\t\t\t<CoverHeightInput\n\t\t\t\t\t\tvalue={ temporaryMinHeight || minHeight }\n\t\t\t\t\t\tunit={ minHeightUnit }\n\t\t\t\t\t\tonChange={ ( newMinHeight ) =>\n\t\t\t\t\t\t\tsetAttributes( { minHeight: newMinHeight } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUnitChange={ ( nextUnit ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tminHeightUnit: nextUnit,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\ttitle={ __( 'Overlay' ) }\n\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t\tsettings={ [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolorValue: overlayColor.color,\n\t\t\t\t\t\t\tgradientValue,\n\t\t\t\t\t\t\tonColorChange: setOverlayColor,\n\t\t\t\t\t\t\tonGradientChange: setGradient,\n\t\t\t\t\t\t\tlabel: __( 'Color' ),\n\t\t\t\t\t\t},\n\t\t\t\t\t] }\n\t\t\t\t>\n\t\t\t\t\t{ !! url && (\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Opacity' ) }\n\t\t\t\t\t\t\tvalue={ dimRatio }\n\t\t\t\t\t\t\tonChange={ ( newDimRation ) =>\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tdimRatio: newDimRation,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\tmax={ 100 }\n\t\t\t\t\t\t\tstep={ 10 }\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PanelColorGradientSettings>\n\t\t\t</InspectorControls>\n\t\t</>\n\t);\n\n\tconst ref = useRef();\n\tconst blockProps = useBlockProps( { ref } );\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{\n\t\t\tclassName: 'wp-block-cover__inner-container',\n\t\t},\n\t\t{\n\t\t\ttemplate: INNER_BLOCKS_TEMPLATE,\n\t\t\ttemplateInsertUpdatesSelection: true,\n\t\t}\n\t);\n\n\tif ( ! hasBackground ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<div\n\t\t\t\t\t{ ...blockProps }\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'is-placeholder',\n\t\t\t\t\t\tblockProps.className\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t<CoverPlaceholder\n\t\t\t\t\t\tnoticeUI={ noticeUI }\n\t\t\t\t\t\tonSelectMedia={ onSelectMedia }\n\t\t\t\t\t\tnoticeOperations={ noticeOperations }\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"wp-block-cover__placeholder-background-options\">\n\t\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\t\tdisableCustomColors={ true }\n\t\t\t\t\t\t\t\tvalue={ overlayColor.color }\n\t\t\t\t\t\t\t\tonChange={ setOverlayColor }\n\t\t\t\t\t\t\t\tclearable={ false }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CoverPlaceholder>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\tconst classes = classnames(\n\t\tdimRatioToClass( dimRatio ),\n\t\t{\n\t\t\t'is-dark-theme': isDark,\n\t\t\t'has-background-dim': dimRatio !== 0,\n\t\t\t'is-transient': isUploadingMedia,\n\t\t\t'has-parallax': hasParallax,\n\t\t\t'is-repeated': isRepeated,\n\t\t\t[ overlayColor.class ]: overlayColor.class,\n\t\t\t'has-background-gradient': gradientValue,\n\t\t\t[ gradientClass ]: ! url && gradientClass,\n\t\t\t'has-custom-content-position': ! isContentPositionCenter(\n\t\t\t\tcontentPosition\n\t\t\t),\n\t\t},\n\t\tgetPositionClassName( contentPosition )\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ controls }\n\t\t\t<div\n\t\t\t\t{ ...blockProps }\n\t\t\t\tclassName={ classnames( classes, blockProps.className ) }\n\t\t\t\tstyle={ { ...style, ...blockProps.style } }\n\t\t\t\tdata-url={ url }\n\t\t\t>\n\t\t\t\t<BoxControlVisualizer\n\t\t\t\t\tvalues={ styleAttribute?.spacing?.padding }\n\t\t\t\t\tshowValues={ styleAttribute?.visualizers?.padding }\n\t\t\t\t/>\n\t\t\t\t<ResizableCover\n\t\t\t\t\tclassName=\"block-library-cover__resize-container\"\n\t\t\t\t\tonResizeStart={ () => {\n\t\t\t\t\t\tsetAttributes( { minHeightUnit: 'px' } );\n\t\t\t\t\t\ttoggleSelection( false );\n\t\t\t\t\t} }\n\t\t\t\t\tonResize={ setTemporaryMinHeight }\n\t\t\t\t\tonResizeStop={ ( newMinHeight ) => {\n\t\t\t\t\t\ttoggleSelection( true );\n\t\t\t\t\t\tsetAttributes( { minHeight: newMinHeight } );\n\t\t\t\t\t\tsetTemporaryMinHeight( null );\n\t\t\t\t\t} }\n\t\t\t\t\tshowHandle={ isSelected }\n\t\t\t\t/>\n\t\t\t\t{ url && gradientValue && dimRatio !== 0 && (\n\t\t\t\t\t<span\n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t'wp-block-cover__gradient-background',\n\t\t\t\t\t\t\tgradientClass\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tstyle={ { backgroundImage: gradientValue } }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ url && isImageBackground && isImgElement && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tref={ isDarkElement }\n\t\t\t\t\t\tclassName=\"wp-block-cover__image-background\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\tstyle={ mediaStyle }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ url && isVideoBackground && (\n\t\t\t\t\t<video\n\t\t\t\t\t\tref={ isDarkElement }\n\t\t\t\t\t\tclassName=\"wp-block-cover__video-background\"\n\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\tmuted\n\t\t\t\t\t\tloop\n\t\t\t\t\t\tsrc={ url }\n\t\t\t\t\t\tstyle={ mediaStyle }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ isUploadingMedia && <Spinner /> }\n\t\t\t\t<CoverPlaceholder\n\t\t\t\t\thasBackground={ hasBackground }\n\t\t\t\t\tnoticeUI={ noticeUI }\n\t\t\t\t\tonSelectMedia={ onSelectMedia }\n\t\t\t\t\tnoticeOperations={ noticeOperations }\n\t\t\t\t/>\n\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default compose( [\n\twithDispatch( ( dispatch ) => {\n\t\tconst { toggleSelection } = dispatch( blockEditorStore );\n\n\t\treturn {\n\t\t\ttoggleSelection,\n\t\t};\n\t} ),\n\twithColors( { overlayColor: 'background-color' } ),\n\twithNotices,\n\twithInstanceId,\n] )( CoverEdit );\n"]}