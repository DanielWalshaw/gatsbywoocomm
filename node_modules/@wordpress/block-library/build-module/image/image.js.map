{"version":3,"sources":["@wordpress/block-library/src/image/image.js"],"names":["get","filter","map","last","pick","includes","isBlobURL","ExternalLink","PanelBody","ResizableBox","Spinner","TextareaControl","TextControl","ToolbarButton","useViewportMatch","usePrevious","useSelect","useDispatch","BlockControls","InspectorControls","InspectorAdvancedControls","RichText","__experimentalImageSizeControl","ImageSizeControl","__experimentalImageURLInputUI","ImageURLInputUI","MediaReplaceFlow","store","blockEditorStore","BlockAlignmentControl","useEffect","useState","useRef","__","sprintf","isRTL","getPath","createBlock","getBlockType","switchToBlockType","crop","overlayText","upload","noticesStore","coreStore","createUpgradedEmbedBlock","useClientWidth","ImageEditor","ImageEditingProvider","isExternalImage","MIN_SIZE","ALLOWED_MEDIA_TYPES","getFilename","url","path","split","Image","temporaryURL","attributes","alt","caption","align","id","href","rel","linkClass","linkDestination","title","width","height","linkTarget","sizeSlug","setAttributes","isSelected","insertBlocksAfter","onReplace","onSelectImage","onSelectURL","onUploadError","containerRef","captionRef","prevUrl","select","getMedia","getMultiSelectedBlockClientIds","getBlockName","getSelectedBlock","getSelectedBlockClientId","multiSelectedClientIds","block","currentId","image","multiImageSelection","length","every","clientId","getSettings","imageEditing","imageSizes","maxWidth","mediaUpload","replaceBlocks","toggleSelection","createErrorNotice","createSuccessNotice","isLargeViewport","captionFocused","setCaptionFocused","isWideAligned","naturalWidth","naturalHeight","setNaturalSize","isEditingImage","setIsEditingImage","externalBlob","setExternalBlob","clientWidth","isResizable","imageSizeOptions","slug","name","value","label","coverBlockExists","window","fetch","then","response","blob","current","focus","onResizeStart","onResizeStop","onImageError","embedBlock","undefined","onSetHref","props","onSetTitle","onFocusCaption","onImageClick","updateAlt","newAlt","updateImage","newSizeSlug","newUrl","uploadExternal","filesList","onFileChange","img","type","allowedTypes","onError","message","updateAlignment","nextAlign","extraUpdatedAttributes","canEditImage","allowCrop","controls","source_url","link","filename","defaultedAlt","event","target","imageWidthWithinContainer","imageHeightWithinContainer","exceedMaxWidth","ratio","currentWidth","currentHeight","minWidth","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","direction","elt","delta","parseInt","imageAttributes","isEmpty"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get, filter, map, last, pick, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { isBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tPanelBody,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarButton,\n} from '@wordpress/components';\nimport { useViewportMatch, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockControls,\n\tInspectorControls,\n\tInspectorAdvancedControls,\n\tRichText,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n\tMediaReplaceFlow,\n\tstore as blockEditorStore,\n\tBlockAlignmentControl,\n} from '@wordpress/block-editor';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { __, sprintf, isRTL } from '@wordpress/i18n';\nimport { getPath } from '@wordpress/url';\nimport {\n\tcreateBlock,\n\tgetBlockType,\n\tswitchToBlockType,\n} from '@wordpress/blocks';\nimport { crop, overlayText, upload } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport useClientWidth from './use-client-width';\nimport ImageEditor, { ImageEditingProvider } from './image-editing';\nimport { isExternalImage } from './edit';\n\n/**\n * Module constants\n */\nimport { MIN_SIZE, ALLOWED_MEDIA_TYPES } from './constants';\n\nfunction getFilename( url ) {\n\tconst path = getPath( url );\n\tif ( path ) {\n\t\treturn last( path.split( '/' ) );\n\t}\n}\n\nexport default function Image( {\n\ttemporaryURL,\n\tattributes: {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\thref,\n\t\trel,\n\t\tlinkClass,\n\t\tlinkDestination,\n\t\ttitle,\n\t\twidth,\n\t\theight,\n\t\tlinkTarget,\n\t\tsizeSlug,\n\t},\n\tsetAttributes,\n\tisSelected,\n\tinsertBlocksAfter,\n\tonReplace,\n\tonSelectImage,\n\tonSelectURL,\n\tonUploadError,\n\tcontainerRef,\n} ) {\n\tconst captionRef = useRef();\n\tconst prevUrl = usePrevious( url );\n\tconst { block, currentId, image, multiImageSelection } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMedia } = select( coreStore );\n\t\t\tconst {\n\t\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\t\tgetBlockName,\n\t\t\t\tgetSelectedBlock,\n\t\t\t\tgetSelectedBlockClientId,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst multiSelectedClientIds = getMultiSelectedBlockClientIds();\n\t\t\treturn {\n\t\t\t\tblock: getSelectedBlock(),\n\t\t\t\tcurrentId: getSelectedBlockClientId(),\n\t\t\t\timage: id && isSelected ? getMedia( id ) : null,\n\t\t\t\tmultiImageSelection:\n\t\t\t\t\tmultiSelectedClientIds.length &&\n\t\t\t\t\tmultiSelectedClientIds.every(\n\t\t\t\t\t\t( clientId ) =>\n\t\t\t\t\t\t\tgetBlockName( clientId ) === 'core/image'\n\t\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ id, isSelected ]\n\t);\n\tconst { imageEditing, imageSizes, maxWidth, mediaUpload } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getSettings } = select( blockEditorStore );\n\t\t\treturn pick( getSettings(), [\n\t\t\t\t'imageEditing',\n\t\t\t\t'imageSizes',\n\t\t\t\t'maxWidth',\n\t\t\t\t'mediaUpload',\n\t\t\t] );\n\t\t}\n\t);\n\tconst { replaceBlocks, toggleSelection } = useDispatch( blockEditorStore );\n\tconst { createErrorNotice, createSuccessNotice } = useDispatch(\n\t\tnoticesStore\n\t);\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst [ captionFocused, setCaptionFocused ] = useState( false );\n\tconst isWideAligned = includes( [ 'wide', 'full' ], align );\n\tconst [ { naturalWidth, naturalHeight }, setNaturalSize ] = useState( {} );\n\tconst [ isEditingImage, setIsEditingImage ] = useState( false );\n\tconst [ externalBlob, setExternalBlob ] = useState();\n\tconst clientWidth = useClientWidth( containerRef, [ align ] );\n\tconst isResizable = ! isWideAligned && isLargeViewport;\n\tconst imageSizeOptions = map(\n\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\tget( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\n\t\t),\n\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t);\n\n\t// Check if the cover block is registered.\n\tconst coverBlockExists = !! getBlockType( 'core/cover' );\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetCaptionFocused( false );\n\t\t}\n\t}, [ isSelected ] );\n\n\t// If an image is externally hosted, try to fetch the image data. This may\n\t// fail if the image host doesn't allow CORS with the domain. If it works,\n\t// we can enable a button in the toolbar to upload the image.\n\tuseEffect( () => {\n\t\tif ( ! isExternalImage( id, url ) || ! isSelected || externalBlob ) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow\n\t\t\t.fetch( url )\n\t\t\t.then( ( response ) => response.blob() )\n\t\t\t.then( ( blob ) => setExternalBlob( blob ) );\n\t}, [ id, url, isSelected, externalBlob ] );\n\n\t// Focus the caption after inserting an image from the placeholder. This is\n\t// done to preserve the behaviour of focussing the first tabbable element\n\t// when a block is mounted. Previously, the image block would remount when\n\t// the placeholder is removed. Maybe this behaviour could be removed.\n\tuseEffect( () => {\n\t\tif ( url && ! prevUrl && isSelected ) {\n\t\t\tcaptionRef.current.focus();\n\t\t}\n\t}, [ url, prevUrl ] );\n\n\tfunction onResizeStart() {\n\t\ttoggleSelection( false );\n\t}\n\n\tfunction onResizeStop() {\n\t\ttoggleSelection( true );\n\t}\n\n\tfunction onImageError() {\n\t\t// Check if there's an embed block that handles this URL.\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tonReplace( embedBlock );\n\t\t}\n\t}\n\n\tfunction onSetHref( props ) {\n\t\tsetAttributes( props );\n\t}\n\n\tfunction onSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object\n\t\t// title.\n\t\tsetAttributes( { title: value } );\n\t}\n\n\tfunction onFocusCaption() {\n\t\tif ( ! captionFocused ) {\n\t\t\tsetCaptionFocused( true );\n\t\t}\n\t}\n\n\tfunction onImageClick() {\n\t\tif ( captionFocused ) {\n\t\t\tsetCaptionFocused( false );\n\t\t}\n\t}\n\n\tfunction updateAlt( newAlt ) {\n\t\tsetAttributes( { alt: newAlt } );\n\t}\n\n\tfunction updateImage( newSizeSlug ) {\n\t\tconst newUrl = get( image, [\n\t\t\t'media_details',\n\t\t\t'sizes',\n\t\t\tnewSizeSlug,\n\t\t\t'source_url',\n\t\t] );\n\t\tif ( ! newUrl ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl: newUrl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug: newSizeSlug,\n\t\t} );\n\t}\n\n\tfunction uploadExternal() {\n\t\tmediaUpload( {\n\t\t\tfilesList: [ externalBlob ],\n\t\t\tonFileChange( [ img ] ) {\n\t\t\t\tonSelectImage( img );\n\n\t\t\t\tif ( isBlobURL( img.url ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetExternalBlob();\n\t\t\t\tcreateSuccessNotice( __( 'Image uploaded.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t},\n\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\tonError( message ) {\n\t\t\t\tcreateErrorNotice( message, { type: 'snackbar' } );\n\t\t\t},\n\t\t} );\n\t}\n\n\tfunction updateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\n\t\t\t? { width: undefined, height: undefined }\n\t\t\t: {};\n\t\tsetAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetIsEditingImage( false );\n\t\t}\n\t}, [ isSelected ] );\n\n\tconst canEditImage = id && naturalWidth && naturalHeight && imageEditing;\n\tconst allowCrop = ! multiImageSelection && canEditImage && ! isEditingImage;\n\n\tconst controls = (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<BlockAlignmentControl\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t/>\n\t\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\tonChangeUrl={ onSetHref }\n\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\tmediaUrl={ ( image && image.source_url ) || url }\n\t\t\t\t\t\tmediaLink={ image && image.link }\n\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ allowCrop && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ () => setIsEditingImage( true ) }\n\t\t\t\t\t\ticon={ crop }\n\t\t\t\t\t\tlabel={ __( 'Crop' ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ externalBlob && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\tonClick={ uploadExternal }\n\t\t\t\t\t\ticon={ upload }\n\t\t\t\t\t\tlabel={ __( 'Upload external image' ) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ ! multiImageSelection && coverBlockExists && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ticon={ overlayText }\n\t\t\t\t\t\tlabel={ __( 'Add text over image' ) }\n\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\treplaceBlocks(\n\t\t\t\t\t\t\t\tcurrentId,\n\t\t\t\t\t\t\t\tswitchToBlockType( block, 'core/cover' )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\t\t\t{ ! multiImageSelection && ! isEditingImage && (\n\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmediaId={ id }\n\t\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonSelect={ onSelectImage }\n\t\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\t\tonError={ onUploadError }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Image settings' ) }>\n\t\t\t\t\t{ ! multiImageSelection && (\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\tlabel={ __( 'Alt text (alternative text)' ) }\n\t\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\t\tonChange={ updateAlt }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'Leave empty if the image is purely decorative.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\tonChangeImage={ updateImage }\n\t\t\t\t\t\tonChange={ ( value ) => setAttributes( value ) }\n\t\t\t\t\t\tslug={ sizeSlug }\n\t\t\t\t\t\twidth={ width }\n\t\t\t\t\t\theight={ height }\n\t\t\t\t\t\timageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\tisResizable={ isResizable }\n\t\t\t\t\t\timageWidth={ naturalWidth }\n\t\t\t\t\t\timageHeight={ naturalHeight }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorAdvancedControls>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Title attribute' ) }\n\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\tonChange={ onSetTitle }\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</InspectorAdvancedControls>\n\t\t</>\n\t);\n\n\tconst filename = getFilename( url );\n\tlet defaultedAlt;\n\n\tif ( alt ) {\n\t\tdefaultedAlt = alt;\n\t} else if ( filename ) {\n\t\tdefaultedAlt = sprintf(\n\t\t\t/* translators: %s: file name */\n\t\t\t__( 'This image has an empty alt attribute; its file name is %s' ),\n\t\t\tfilename\n\t\t);\n\t} else {\n\t\tdefaultedAlt = __( 'This image has an empty alt attribute' );\n\t}\n\n\tlet img = (\n\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t// should direct focus to block.\n\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t\t<>\n\t\t\t<img\n\t\t\t\tsrc={ temporaryURL || url }\n\t\t\t\talt={ defaultedAlt }\n\t\t\t\tonClick={ onImageClick }\n\t\t\t\tonError={ () => onImageError() }\n\t\t\t\tonLoad={ ( event ) => {\n\t\t\t\t\tsetNaturalSize(\n\t\t\t\t\t\tpick( event.target, [\n\t\t\t\t\t\t\t'naturalWidth',\n\t\t\t\t\t\t\t'naturalHeight',\n\t\t\t\t\t\t] )\n\t\t\t\t\t);\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t{ temporaryURL && <Spinner /> }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t);\n\n\tlet imageWidthWithinContainer;\n\tlet imageHeightWithinContainer;\n\n\tif ( clientWidth && naturalWidth && naturalHeight ) {\n\t\tconst exceedMaxWidth = naturalWidth > clientWidth;\n\t\tconst ratio = naturalHeight / naturalWidth;\n\t\timageWidthWithinContainer = exceedMaxWidth ? clientWidth : naturalWidth;\n\t\timageHeightWithinContainer = exceedMaxWidth\n\t\t\t? clientWidth * ratio\n\t\t\t: naturalHeight;\n\t}\n\n\tif ( canEditImage && isEditingImage ) {\n\t\timg = (\n\t\t\t<ImageEditor\n\t\t\t\turl={ url }\n\t\t\t\twidth={ width }\n\t\t\t\theight={ height }\n\t\t\t\tclientWidth={ clientWidth }\n\t\t\t\tnaturalHeight={ naturalHeight }\n\t\t\t\tnaturalWidth={ naturalWidth }\n\t\t\t/>\n\t\t);\n\t} else if ( ! isResizable || ! imageWidthWithinContainer ) {\n\t\timg = <div style={ { width, height } }>{ img }</div>;\n\t} else {\n\t\tconst currentWidth = width || imageWidthWithinContainer;\n\t\tconst currentHeight = height || imageHeightWithinContainer;\n\n\t\tconst ratio = naturalWidth / naturalHeight;\n\t\tconst minWidth =\n\t\t\tnaturalWidth < naturalHeight ? MIN_SIZE : MIN_SIZE * ratio;\n\t\tconst minHeight =\n\t\t\tnaturalHeight < naturalWidth ? MIN_SIZE : MIN_SIZE / ratio;\n\n\t\t// With the current implementation of ResizableBox, an image needs an\n\t\t// explicit pixel value for the max-width. In absence of being able to\n\t\t// set the content-width, this max-width is currently dictated by the\n\t\t// vanilla editor style. The following variable adds a buffer to this\n\t\t// vanilla style, so 3rd party themes have some wiggleroom. This does,\n\t\t// in most cases, allow you to scale the image beyond the width of the\n\t\t// main column, though not infinitely.\n\t\t// @todo It would be good to revisit this once a content-width variable\n\t\t// becomes available.\n\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\tlet showRightHandle = false;\n\t\tlet showLeftHandle = false;\n\n\t\t/* eslint-disable no-lonely-if */\n\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\tif ( align === 'center' ) {\n\t\t\t// When the image is centered, show both handles.\n\t\t\tshowRightHandle = true;\n\t\t\tshowLeftHandle = true;\n\t\t} else if ( isRTL() ) {\n\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t// Show the right handle and hide the left handle only when it is\n\t\t\t// aligned left. Otherwise always show the left handle.\n\t\t\tif ( align === 'left' ) {\n\t\t\t\tshowRightHandle = true;\n\t\t\t} else {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Show the left handle and hide the right handle only when the\n\t\t\t// image is aligned right. Otherwise always show the right handle.\n\t\t\tif ( align === 'right' ) {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t} else {\n\t\t\t\tshowRightHandle = true;\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-lonely-if */\n\n\t\timg = (\n\t\t\t<ResizableBox\n\t\t\t\tsize={ {\n\t\t\t\t\twidth: width ?? 'auto',\n\t\t\t\t\theight: height ?? 'auto',\n\t\t\t\t} }\n\t\t\t\tshowHandle={ isSelected }\n\t\t\t\tminWidth={ minWidth }\n\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\tminHeight={ minHeight }\n\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\tlockAspectRatio\n\t\t\t\tenable={ {\n\t\t\t\t\ttop: false,\n\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t} }\n\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\tonResizeStop={ ( event, direction, elt, delta ) => {\n\t\t\t\t\tonResizeStop();\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\twidth: parseInt( currentWidth + delta.width, 10 ),\n\t\t\t\t\t\theight: parseInt( currentHeight + delta.height, 10 ),\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ img }\n\t\t\t</ResizableBox>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ImageEditingProvider\n\t\t\tid={ id }\n\t\t\turl={ url }\n\t\t\tnaturalWidth={ naturalWidth }\n\t\t\tnaturalHeight={ naturalHeight }\n\t\t\tclientWidth={ clientWidth }\n\t\t\tonSaveImage={ ( imageAttributes ) =>\n\t\t\t\tsetAttributes( imageAttributes )\n\t\t\t}\n\t\t\tisEditing={ isEditingImage }\n\t\t\tonFinishEditing={ () => setIsEditingImage( false ) }\n\t\t>\n\t\t\t{ controls }\n\t\t\t{ img }\n\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t<RichText\n\t\t\t\t\tref={ captionRef }\n\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\taria-label={ __( 'Image caption text' ) }\n\t\t\t\t\tplaceholder={ __( 'Add caption' ) }\n\t\t\t\t\tvalue={ caption }\n\t\t\t\t\tunstableOnFocus={ onFocusCaption }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\tisSelected={ captionFocused }\n\t\t\t\t\tinlineToolbar\n\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ImageEditingProvider>\n\t);\n}\n"]}