{"version":3,"sources":["@wordpress/block-library/src/button/edit.native.js"],"names":["View","AccessibilityInfo","Platform","Text","withInstanceId","compose","__","RichText","InspectorControls","BlockControls","withGradient","store","blockEditorStore","getColorObjectByAttributeValues","getGradientValueBySlug","__experimentalGetColorClassesAndStyles","getColorClassesAndStyles","PanelBody","RangeControl","ToolbarGroup","ToolbarButton","LinkSettingsNavigation","BottomSheetSelectControl","Component","withSelect","withDispatch","link","richTextStyle","styles","ColorBackground","ColorEdit","MIN_BORDER_RADIUS_VALUE","MAX_BORDER_RADIUS_VALUE","INITIAL_MAX_WIDTH","MIN_WIDTH","MIN_WIDTH_MARGINS","button75","marginLeft","button50","button25","WidthPanel","selectedWidth","setAttributes","handleChange","newWidth","width","undefined","options","value","label","ButtonEdit","props","onChangeText","bind","onChangeBorderRadius","onClearSettings","onLayout","onSetMaxWidth","dismissSheet","onShowLinkSettings","onHideLinkSettings","onToggleButtonFocus","onPlaceholderTextWidth","setRef","onRemove","getPlaceholderWidth","state","maxWidth","isLinkSheetVisible","isButtonFocused","placeholderTextWidth","linkSettingsActions","onPress","linkSettingsOptions","url","placeholder","autoFocus","autoFill","openInNewTab","linkRel","noFocusLinkSettingOptions","prevProps","prevState","isSelected","editorSidebarOpened","parentWidth","OS","richTextRef","blur","isScreenReaderEnabled","then","enabled","focus","attributes","colors","gradients","backgroundColor","gradient","gradientValue","colorProps","colorObject","color","style","background","defaultButton","textColor","text","borderRadius","setState","rel","linkTarget","nativeEvent","layout","isParentWidthDidChange","spacing","marginRight","isParentWidthChanged","isWidthChanged","numOfButtons","onDeleteBlock","onReplace","closeSettingsBottomSheet","isCompatibleWithSettings","richText","placeholderText","textWidth","lines","Math","min","clientId","mergeBlocks","align","paddingTop","borderWidth","borderRadiusValue","Number","isInteger","outlineBorderRadius","minWidth","floor","getBackgroundColor","getTextColor","isFixedWidth","outline","borderColor","paddingLeft","paddingRight","placeholderTextColor","getLinkSettings","select","isEditorSidebarOpened","getBlockCount","getBlockRootClientId","getSettings","parentId","settings","dispatch","closeGeneralSidebar"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, AccessibilityInfo, Platform, Text } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tRichText,\n\tInspectorControls,\n\tBlockControls,\n\twithGradient,\n\tstore as blockEditorStore,\n\tgetColorObjectByAttributeValues,\n\tgetGradientValueBySlug,\n\t__experimentalGetColorClassesAndStyles as getColorClassesAndStyles,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tRangeControl,\n\tToolbarGroup,\n\tToolbarButton,\n\tLinkSettingsNavigation,\n\tBottomSheetSelectControl,\n} from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { link } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport richTextStyle from './rich-text.scss';\nimport styles from './editor.scss';\nimport ColorBackground from './color-background';\nimport ColorEdit from './color-edit';\n\nconst MIN_BORDER_RADIUS_VALUE = 0;\nconst MAX_BORDER_RADIUS_VALUE = 50;\nconst INITIAL_MAX_WIDTH = 108;\nconst MIN_WIDTH = 40;\n// Map of the percentage width to pixel subtraction that make the buttons fit nicely into columns.\nconst MIN_WIDTH_MARGINS = {\n\t100: 0,\n\t75: styles.button75?.marginLeft,\n\t50: styles.button50?.marginLeft,\n\t25: styles.button25?.marginLeft,\n};\n\nfunction WidthPanel( { selectedWidth, setAttributes } ) {\n\tfunction handleChange( newWidth ) {\n\t\t// Check if we are toggling the width off\n\t\tlet width = selectedWidth === newWidth ? undefined : newWidth;\n\t\tif ( newWidth === 'auto' ) {\n\t\t\twidth = undefined;\n\t\t}\n\t\t// Update attributes\n\t\tsetAttributes( { width } );\n\t}\n\n\tconst options = [\n\t\t{ value: 'auto', label: __( 'Auto' ) },\n\t\t{ value: 25, label: '25%' },\n\t\t{ value: 50, label: '50%' },\n\t\t{ value: 75, label: '75%' },\n\t\t{ value: 100, label: '100%' },\n\t];\n\n\tif ( ! selectedWidth ) {\n\t\tselectedWidth = 'auto';\n\t}\n\n\treturn (\n\t\t<PanelBody title={ __( 'Width Settings' ) }>\n\t\t\t<BottomSheetSelectControl\n\t\t\t\tlabel={ __( 'Button width' ) }\n\t\t\t\tvalue={ selectedWidth }\n\t\t\t\tonChange={ handleChange }\n\t\t\t\toptions={ options }\n\t\t\t/>\n\t\t</PanelBody>\n\t);\n}\n\nclass ButtonEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.onChangeText = this.onChangeText.bind( this );\n\t\tthis.onChangeBorderRadius = this.onChangeBorderRadius.bind( this );\n\t\tthis.onClearSettings = this.onClearSettings.bind( this );\n\t\tthis.onLayout = this.onLayout.bind( this );\n\t\tthis.onSetMaxWidth = this.onSetMaxWidth.bind( this );\n\t\tthis.dismissSheet = this.dismissSheet.bind( this );\n\t\tthis.onShowLinkSettings = this.onShowLinkSettings.bind( this );\n\t\tthis.onHideLinkSettings = this.onHideLinkSettings.bind( this );\n\t\tthis.onToggleButtonFocus = this.onToggleButtonFocus.bind( this );\n\t\tthis.onPlaceholderTextWidth = this.onPlaceholderTextWidth.bind( this );\n\t\tthis.setRef = this.setRef.bind( this );\n\t\tthis.onRemove = this.onRemove.bind( this );\n\t\tthis.getPlaceholderWidth = this.getPlaceholderWidth.bind( this );\n\n\t\tthis.state = {\n\t\t\tmaxWidth: INITIAL_MAX_WIDTH,\n\t\t\tisLinkSheetVisible: false,\n\t\t\tisButtonFocused: true,\n\t\t\tplaceholderTextWidth: 0,\n\t\t};\n\n\t\tthis.linkSettingsActions = [\n\t\t\t{\n\t\t\t\tlabel: __( 'Remove link' ),\n\t\t\t\tonPress: this.onClearSettings,\n\t\t\t},\n\t\t];\n\n\t\tthis.linkSettingsOptions = {\n\t\t\turl: {\n\t\t\t\tlabel: __( 'Button Link URL' ),\n\t\t\t\tplaceholder: __( 'Add URL' ),\n\t\t\t\tautoFocus: true,\n\t\t\t\tautoFill: true,\n\t\t\t},\n\t\t\topenInNewTab: {\n\t\t\t\tlabel: __( 'Open in new tab' ),\n\t\t\t},\n\t\t\tlinkRel: {\n\t\t\t\tlabel: __( 'Link Rel' ),\n\t\t\t\tplaceholder: __( 'None' ),\n\t\t\t},\n\t\t};\n\n\t\tthis.noFocusLinkSettingOptions = {\n\t\t\t...this.linkSettingsOptions,\n\t\t\turl: {\n\t\t\t\t...this.linkSettingsOptions.url,\n\t\t\t\tautoFocus: false,\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onSetMaxWidth();\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst { isSelected, editorSidebarOpened, parentWidth } = this.props;\n\t\tconst { isLinkSheetVisible, isButtonFocused } = this.state;\n\n\t\tif ( isSelected && ! prevProps.isSelected ) {\n\t\t\tthis.onToggleButtonFocus( true );\n\t\t}\n\n\t\tif ( prevProps.parentWidth !== parentWidth ) {\n\t\t\tthis.onSetMaxWidth( null, true );\n\t\t}\n\n\t\t// Blur `RichText` on Android when link settings sheet or button settings sheet is opened,\n\t\t// to avoid flashing caret after closing one of them\n\t\tif (\n\t\t\t( ! prevProps.editorSidebarOpened && editorSidebarOpened ) ||\n\t\t\t( ! prevState.isLinkSheetVisible && isLinkSheetVisible )\n\t\t) {\n\t\t\tif ( Platform.OS === 'android' && this.richTextRef ) {\n\t\t\t\tthis.richTextRef.blur();\n\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.richTextRef ) {\n\t\t\tif ( ! isSelected && isButtonFocused ) {\n\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t}\n\n\t\t\tif ( isSelected && ! isButtonFocused ) {\n\t\t\t\tAccessibilityInfo.isScreenReaderEnabled().then( ( enabled ) => {\n\t\t\t\t\tif ( enabled ) {\n\t\t\t\t\t\tthis.onToggleButtonFocus( true );\n\t\t\t\t\t\tthis.richTextRef.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetBackgroundColor() {\n\t\tconst { attributes, colors, gradients } = this.props;\n\t\tconst { backgroundColor, gradient } = attributes;\n\n\t\t// Return named gradient value if available.\n\t\tconst gradientValue = getGradientValueBySlug( gradients, gradient );\n\n\t\tif ( gradientValue ) {\n\t\t\treturn gradientValue;\n\t\t}\n\n\t\tconst colorProps = getColorClassesAndStyles( attributes );\n\n\t\t// Retrieve named color object to force inline styles for themes that\n\t\t// do not load their color stylesheets in the editor.\n\t\tconst colorObject = getColorObjectByAttributeValues(\n\t\t\tcolors,\n\t\t\tbackgroundColor\n\t\t);\n\n\t\treturn (\n\t\t\tcolorObject?.color ||\n\t\t\tcolorProps.style?.backgroundColor ||\n\t\t\tcolorProps.style?.background ||\n\t\t\tstyles.defaultButton.backgroundColor\n\t\t);\n\t}\n\n\tgetTextColor() {\n\t\tconst { attributes, colors } = this.props;\n\t\tconst colorProps = getColorClassesAndStyles( attributes );\n\n\t\t// Retrieve named color object to force inline styles for themes that\n\t\t// do not load their color stylesheets in the editor.\n\t\tconst colorObject = getColorObjectByAttributeValues(\n\t\t\tcolors,\n\t\t\tattributes.textColor\n\t\t);\n\n\t\treturn (\n\t\t\tcolorObject?.color ||\n\t\t\tcolorProps.style?.color ||\n\t\t\tstyles.defaultButton.color\n\t\t);\n\t}\n\n\tonChangeText( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { text: value } );\n\t}\n\n\tonChangeBorderRadius( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( {\n\t\t\tborderRadius: value,\n\t\t} );\n\t}\n\n\tonShowLinkSettings() {\n\t\tthis.setState( { isLinkSheetVisible: true } );\n\t}\n\n\tonHideLinkSettings() {\n\t\tthis.setState( { isLinkSheetVisible: false } );\n\t}\n\n\tonToggleButtonFocus( value ) {\n\t\tif ( value !== this.state.isButtonFocused ) {\n\t\t\tthis.setState( { isButtonFocused: value } );\n\t\t}\n\t}\n\n\tonClearSettings() {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\turl: '',\n\t\t\trel: '',\n\t\t\tlinkTarget: '',\n\t\t} );\n\n\t\tthis.onHideLinkSettings();\n\t}\n\n\tonLayout( { nativeEvent } ) {\n\t\tconst { width } = nativeEvent.layout;\n\t\tthis.onSetMaxWidth( width );\n\t}\n\n\tonSetMaxWidth( width, isParentWidthDidChange = false ) {\n\t\tconst { maxWidth } = this.state;\n\t\tconst { parentWidth } = this.props;\n\t\tconst { marginRight: spacing } = styles.defaultButton;\n\n\t\tconst isParentWidthChanged = isParentWidthDidChange\n\t\t\t? isParentWidthDidChange\n\t\t\t: maxWidth !== parentWidth;\n\t\tconst isWidthChanged = maxWidth !== width;\n\n\t\tif ( parentWidth && ! width && isParentWidthChanged ) {\n\t\t\tthis.setState( {\n\t\t\t\tmaxWidth: parentWidth - spacing,\n\t\t\t} );\n\t\t} else if ( ! parentWidth && width && isWidthChanged ) {\n\t\t\tthis.setState( { maxWidth: width - spacing } );\n\t\t}\n\t}\n\n\tonRemove() {\n\t\tconst { numOfButtons, onDeleteBlock, onReplace } = this.props;\n\n\t\tif ( numOfButtons === 1 ) {\n\t\t\tonDeleteBlock();\n\t\t} else {\n\t\t\tonReplace( [] );\n\t\t}\n\t}\n\n\tdismissSheet() {\n\t\tthis.onHideLinkSettings();\n\t\tthis.props.closeSettingsBottomSheet();\n\t}\n\n\tgetLinkSettings( isCompatibleWithSettings ) {\n\t\tconst { isLinkSheetVisible } = this.state;\n\t\tconst { attributes, setAttributes } = this.props;\n\t\treturn (\n\t\t\t<LinkSettingsNavigation\n\t\t\t\tisVisible={ isLinkSheetVisible }\n\t\t\t\turl={ attributes.url }\n\t\t\t\trel={ attributes.rel }\n\t\t\t\tlinkTarget={ attributes.linkTarget }\n\t\t\t\tonClose={ this.dismissSheet }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\twithBottomSheet={ ! isCompatibleWithSettings }\n\t\t\t\thasPicker\n\t\t\t\tactions={ this.linkSettingsActions }\n\t\t\t\toptions={\n\t\t\t\t\tisCompatibleWithSettings\n\t\t\t\t\t\t? this.linkSettingsOptions\n\t\t\t\t\t\t: this.noFocusLinkSettingOptions\n\t\t\t\t}\n\t\t\t\tshowIcon={ ! isCompatibleWithSettings }\n\t\t\t/>\n\t\t);\n\t}\n\n\tsetRef( richText ) {\n\t\tthis.richTextRef = richText;\n\t}\n\n\t// Render `Text` with `placeholderText` styled as a placeholder\n\t// to calculate its width which then is set as a `minWidth`\n\tgetPlaceholderWidth( placeholderText ) {\n\t\treturn (\n\t\t\t<Text\n\t\t\t\tstyle={ styles.placeholder }\n\t\t\t\tonTextLayout={ this.onPlaceholderTextWidth }\n\t\t\t>\n\t\t\t\t{ placeholderText }\n\t\t\t</Text>\n\t\t);\n\t}\n\n\tonPlaceholderTextWidth( { nativeEvent } ) {\n\t\tconst { maxWidth, placeholderTextWidth } = this.state;\n\t\tconst textWidth =\n\t\t\tnativeEvent.lines[ 0 ] && nativeEvent.lines[ 0 ].width;\n\n\t\tif ( textWidth && textWidth !== placeholderTextWidth ) {\n\t\t\tthis.setState( {\n\t\t\t\tplaceholderTextWidth: Math.min( textWidth, maxWidth ),\n\t\t\t} );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tisSelected,\n\t\t\tclientId,\n\t\t\tonReplace,\n\t\t\tmergeBlocks,\n\t\t\tparentWidth,\n\t\t\tsetAttributes,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tplaceholder,\n\t\t\ttext,\n\t\t\tborderRadius,\n\t\t\turl,\n\t\t\talign = 'center',\n\t\t\twidth,\n\t\t} = attributes;\n\t\tconst { maxWidth, isButtonFocused, placeholderTextWidth } = this.state;\n\t\tconst { paddingTop: spacing, borderWidth } = styles.defaultButton;\n\n\t\tif ( parentWidth === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst borderRadiusValue = Number.isInteger( borderRadius )\n\t\t\t? borderRadius\n\t\t\t: styles.defaultButton.borderRadius;\n\t\tconst outlineBorderRadius =\n\t\t\tborderRadiusValue > 0\n\t\t\t\t? borderRadiusValue + spacing + borderWidth\n\t\t\t\t: 0;\n\n\t\t// To achieve proper expanding and shrinking `RichText` on iOS, there is a need to set a `minWidth`\n\t\t// value at least on 1 when `RichText` is focused or when is not focused, but `RichText` value is\n\t\t// different than empty string.\n\t\tlet minWidth =\n\t\t\tisButtonFocused || ( ! isButtonFocused && text && text !== '' )\n\t\t\t\t? MIN_WIDTH\n\t\t\t\t: placeholderTextWidth;\n\t\tif ( width ) {\n\t\t\t// Set the width of the button.\n\t\t\tminWidth = Math.floor(\n\t\t\t\tmaxWidth * ( width / 100 ) - MIN_WIDTH_MARGINS[ width ]\n\t\t\t);\n\t\t}\n\t\t// To achieve proper expanding and shrinking `RichText` on Android, there is a need to set\n\t\t// a `placeholder` as an empty string when `RichText` is focused,\n\t\t// because `AztecView` is calculating a `minWidth` based on placeholder text.\n\t\tconst placeholderText =\n\t\t\tisButtonFocused || ( ! isButtonFocused && text && text !== '' )\n\t\t\t\t? ''\n\t\t\t\t: placeholder || __( 'Add text…' );\n\n\t\tconst backgroundColor = this.getBackgroundColor();\n\t\tconst textColor = this.getTextColor();\n\t\tconst isFixedWidth = !! width;\n\n\t\treturn (\n\t\t\t<View onLayout={ this.onLayout }>\n\t\t\t\t{ this.getPlaceholderWidth( placeholderText ) }\n\t\t\t\t<ColorBackground\n\t\t\t\t\tborderRadiusValue={ borderRadiusValue }\n\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ isSelected && (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tpointerEvents=\"none\"\n\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\tstyles.outline,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tborderRadius: outlineBorderRadius,\n\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t\t\tplaceholder={ placeholderText }\n\t\t\t\t\t\tvalue={ text }\n\t\t\t\t\t\tonChange={ this.onChangeText }\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t...richTextStyle.richText,\n\t\t\t\t\t\t\tpaddingLeft: isFixedWidth\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: richTextStyle.richText.paddingLeft,\n\t\t\t\t\t\t\tpaddingRight: isFixedWidth\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: richTextStyle.richText.paddingRight,\n\t\t\t\t\t\t\tcolor: textColor,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttextAlign={ align }\n\t\t\t\t\t\tplaceholderTextColor={\n\t\t\t\t\t\t\tstyles.placeholderTextColor.color\n\t\t\t\t\t\t}\n\t\t\t\t\t\tidentifier=\"text\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tminWidth={ minWidth } // The minimum Button size.\n\t\t\t\t\t\tmaxWidth={ isFixedWidth ? minWidth : maxWidth } // The width of the screen.\n\t\t\t\t\t\tid={ clientId }\n\t\t\t\t\t\tisSelected={ isButtonFocused }\n\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\tunstableOnFocus={ () =>\n\t\t\t\t\t\t\tthis.onToggleButtonFocus( true )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableMobileNoFocusOnMount={ ! isSelected }\n\t\t\t\t\t\tselectionColor={ textColor }\n\t\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\t\tthis.onSetMaxWidth();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\tonRemove={ this.onRemove }\n\t\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t\t/>\n\t\t\t\t</ColorBackground>\n\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\ttitle={ __( 'Edit link' ) }\n\t\t\t\t\t\t\t\t\ticon={ link }\n\t\t\t\t\t\t\t\t\tonClick={ this.onShowLinkSettings }\n\t\t\t\t\t\t\t\t\tisActive={ url }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t\t</BlockControls>\n\t\t\t\t\t\t{ this.getLinkSettings( false ) }\n\t\t\t\t\t\t<ColorEdit { ...this.props } />\n\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t<PanelBody title={ __( 'Border Settings' ) }>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Border Radius' ) }\n\t\t\t\t\t\t\t\t\tminimumValue={ MIN_BORDER_RADIUS_VALUE }\n\t\t\t\t\t\t\t\t\tmaximumValue={ MAX_BORDER_RADIUS_VALUE }\n\t\t\t\t\t\t\t\t\tvalue={ borderRadiusValue }\n\t\t\t\t\t\t\t\t\tonChange={ this.onChangeBorderRadius }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t<WidthPanel\n\t\t\t\t\t\t\t\tselectedWidth={ width }\n\t\t\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PanelBody title={ __( 'Link Settings' ) }>\n\t\t\t\t\t\t\t\t{ this.getLinkSettings( true ) }\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithGradient,\n\twithSelect( ( select, { clientId, isSelected } ) => {\n\t\tconst { isEditorSidebarOpened } = select( 'core/edit-post' );\n\t\tconst { getBlockCount, getBlockRootClientId, getSettings } = select(\n\t\t\tblockEditorStore\n\t\t);\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst numOfButtons = getBlockCount( parentId );\n\t\tconst settings = getSettings();\n\n\t\treturn {\n\t\t\tcolors: settings?.colors || [],\n\t\t\tgradients: settings?.gradients || [],\n\t\t\teditorSidebarOpened: isSelected && isEditorSidebarOpened(),\n\t\t\tnumOfButtons,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tcloseSettingsBottomSheet() {\n\t\t\t\tdispatch( 'core/edit-post' ).closeGeneralSidebar();\n\t\t\t},\n\t\t};\n\t} ),\n] )( ButtonEdit );\n"]}