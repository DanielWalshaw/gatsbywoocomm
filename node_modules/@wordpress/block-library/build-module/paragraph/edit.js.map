{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.js"],"names":["classnames","__","_x","isRTL","DropdownMenu","PanelBody","ToggleControl","AlignmentControl","BlockControls","InspectorControls","RichText","useBlockProps","__experimentalUseEditorFeature","useEditorFeature","createBlock","formatLtr","name","ParagraphRTLControl","direction","setDirection","icon","title","isActive","onClick","undefined","ParagraphBlock","attributes","mergeBlocks","onReplace","onRemove","setAttributes","clientId","align","content","dropCap","placeholder","isDropCapFeatureEnabled","blockProps","className","style","newAlign","newDirection","newContent","value","isOriginal","newAttributes","block"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, isRTL } from '@wordpress/i18n';\nimport { DropdownMenu, PanelBody, ToggleControl } from '@wordpress/components';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\tuseBlockProps,\n\t__experimentalUseEditorFeature as useEditorFeature,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { formatLtr } from '@wordpress/icons';\n\nconst name = 'core/paragraph';\n\nfunction ParagraphRTLControl( { direction, setDirection } ) {\n\treturn (\n\t\tisRTL() && (\n\t\t\t<DropdownMenu\n\t\t\t\tisToolbarButton\n\t\t\t\tcontrols={ [\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: formatLtr,\n\t\t\t\t\t\ttitle: _x( 'Left to right', 'editor button' ),\n\t\t\t\t\t\tisActive: direction === 'ltr',\n\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\tsetDirection(\n\t\t\t\t\t\t\t\tdirection === 'ltr' ? undefined : 'ltr'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t)\n\t);\n}\n\nfunction ParagraphBlock( {\n\tattributes,\n\tmergeBlocks,\n\tonReplace,\n\tonRemove,\n\tsetAttributes,\n\tclientId,\n} ) {\n\tconst { align, content, direction, dropCap, placeholder } = attributes;\n\tconst isDropCapFeatureEnabled = useEditorFeature( 'typography.dropCap' );\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t'has-drop-cap': dropCap,\n\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t} ),\n\t\tstyle: { direction },\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\tsetAttributes( { align: newAlign } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<ParagraphRTLControl\n\t\t\t\t\tdirection={ direction }\n\t\t\t\t\tsetDirection={ ( newDirection ) =>\n\t\t\t\t\t\tsetAttributes( { direction: newDirection } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t{ isDropCapFeatureEnabled && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Text settings' ) }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Drop cap' ) }\n\t\t\t\t\t\t\tchecked={ !! dropCap }\n\t\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\t\tsetAttributes( { dropCap: ! dropCap } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\tdropCap\n\t\t\t\t\t\t\t\t\t? __( 'Showing large initial letter.' )\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Toggle to show a large initial letter.'\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName=\"p\"\n\t\t\t\t{ ...blockProps }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ ( newContent ) =>\n\t\t\t\t\tsetAttributes( { content: newContent } )\n\t\t\t\t}\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\n\t\t\t\t\tlet newAttributes;\n\n\t\t\t\t\tif ( isOriginal || value ) {\n\t\t\t\t\t\tnewAttributes = {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst block = createBlock( name, newAttributes );\n\n\t\t\t\t\tif ( isOriginal ) {\n\t\t\t\t\t\tblock.clientId = clientId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn block;\n\t\t\t\t} }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ onRemove }\n\t\t\t\taria-label={\n\t\t\t\t\tcontent\n\t\t\t\t\t\t? __( 'Paragraph block' )\n\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t'Empty block; start writing or type forward slash to choose a block'\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\tdata-empty={ content ? false : true }\n\t\t\t\tplaceholder={ placeholder || __( 'Type / to choose a block' ) }\n\t\t\t\t__unstableEmbedURLOnPaste\n\t\t\t\t__unstableAllowPrefixTransformations\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ParagraphBlock;\n"]}