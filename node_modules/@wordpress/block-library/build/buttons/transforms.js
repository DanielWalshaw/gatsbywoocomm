"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _blocks = require("@wordpress/blocks");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
var _apiVersion$name$cate = {
  apiVersion: 2,
  name: "core/buttons",
  category: "design",
  attributes: {
    contentJustification: {
      type: "string"
    },
    orientation: {
      type: "string",
      "default": "horizontal"
    }
  },
  supports: {
    anchor: true,
    align: ["wide", "full"]
  },
  editorStyle: "wp-block-buttons-editor",
  style: "wp-block-buttons"
},
    name = _apiVersion$name$cate.name;
var transforms = {
  from: [{
    type: 'block',
    isMultiBlock: true,
    blocks: ['core/button'],
    transform: function transform(buttons) {
      return (// Creates the buttons block
        (0, _blocks.createBlock)(name, {}, // Loop the selected buttons
        buttons.map(function (attributes) {
          return (// Create singular button in the buttons block
            (0, _blocks.createBlock)('core/button', attributes)
          );
        }))
      );
    }
  }, {
    type: 'block',
    isMultiBlock: true,
    blocks: ['core/paragraph'],
    transform: function transform(buttons) {
      return (// Creates the buttons block
        (0, _blocks.createBlock)(name, {}, // Loop the selected buttons
        buttons.map(function (attributes) {
          // Remove any HTML tags
          var div = document.createElement('div');
          div.innerHTML = attributes.content;
          var text = div.innerText || ''; // Get first url

          var link = div.querySelector('a');
          var url = link === null || link === void 0 ? void 0 : link.getAttribute('href'); // Create singular button in the buttons block

          return (0, _blocks.createBlock)('core/button', {
            text: text,
            url: url
          });
        }))
      );
    },
    isMatch: function isMatch(paragraphs) {
      return paragraphs.every(function (attributes) {
        var div = document.createElement('div');
        div.innerHTML = attributes.content;
        var text = div.innerText || '';
        var links = div.querySelectorAll('a');
        return text.length <= 30 && links.length <= 1;
      });
    }
  }]
};
var _default = transforms;
exports.default = _default;
//# sourceMappingURL=transforms.js.map