{"version":3,"sources":["@wordpress/block-library/src/paragraph/edit.native.js"],"names":["name","ParagraphBlock","attributes","mergeBlocks","onReplace","setAttributes","mergedStyle","style","clientId","isRTL","select","blockEditorStore","getSettings","align","content","placeholder","styles","onAlignmentChange","nextAlign","nextContent","value","isOriginal","newAttributes","block","undefined"],"mappings":";;;;;;;;;AAWA;;;;AARA;;AACA;;AACA;;AAOA;;;;;;AAEA,IAAMA,IAAI,GAAG,gBAAb;;AAEA,SAASC,cAAT,OAQI;AAAA,MAPHC,UAOG,QAPHA,UAOG;AAAA,MANHC,WAMG,QANHA,WAMG;AAAA,MALHC,SAKG,QALHA,SAKG;AAAA,MAJHC,aAIG,QAJHA,aAIG;AAAA,MAHHC,WAGG,QAHHA,WAGG;AAAA,MAFHC,KAEG,QAFHA,KAEG;AAAA,MADHC,QACG,QADHA,QACG;AACH,MAAMC,KAAK,GAAG,qBAAW,UAAEC,MAAF,EAAc;AACtC,WAAO,CAAC,CAAEA,MAAM,CAAEC,kBAAF,CAAN,CAA2BC,WAA3B,GAAyCH,KAAnD;AACA,GAFa,EAEX,EAFW,CAAd;AADG,MAKKI,KALL,GAKqCX,UALrC,CAKKW,KALL;AAAA,MAKYC,OALZ,GAKqCZ,UALrC,CAKYY,OALZ;AAAA,MAKqBC,WALrB,GAKqCb,UALrC,CAKqBa,WALrB;;AAOH,MAAMC,MAAM,mCACRV,WADQ,GAERC,KAFQ,CAAZ;;AAKA,MAAMU,iBAAiB,GAAG,0BAAa,UAAEC,SAAF,EAAiB;AACvDb,IAAAA,aAAa,CAAE;AAAEQ,MAAAA,KAAK,EAAEK;AAAT,KAAF,CAAb;AACA,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,SACC,qDACC,4BAAC,0BAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGL,KADT;AAEC,IAAA,KAAK,EAAGJ,KAFT;AAGC,IAAA,QAAQ,EAAGQ;AAHZ,IADD,CADD,EAQC,4BAAC,qBAAD;AACC,IAAA,UAAU,EAAC,SADZ;AAEC,IAAA,OAAO,EAAC,GAFT;AAGC,IAAA,KAAK,EAAGH,OAHT;AAIC,IAAA,WAAW,EAAG,IAJf;AAKC,IAAA,KAAK,EAAGE,MALT;AAMC,IAAA,QAAQ,EAAG,kBAAEG,WAAF,EAAmB;AAC7Bd,MAAAA,aAAa,CAAE;AACdS,QAAAA,OAAO,EAAEK;AADK,OAAF,CAAb;AAGA,KAVF;AAWC,IAAA,OAAO,EAAG,iBAAEC,KAAF,EAASC,UAAT,EAAyB;AAClC,UAAIC,aAAJ;;AAEA,UAAKD,UAAU,IAAID,KAAnB,EAA2B;AAC1BE,QAAAA,aAAa,mCACTpB,UADS;AAEZY,UAAAA,OAAO,EAAEM;AAFG,UAAb;AAIA;;AAED,UAAMG,KAAK,GAAG,yBAAavB,IAAb,EAAmBsB,aAAnB,CAAd;;AAEA,UAAKD,UAAL,EAAkB;AACjBE,QAAAA,KAAK,CAACf,QAAN,GAAiBA,QAAjB;AACA;;AAED,aAAOe,KAAP;AACA,KA5BF;AA6BC,IAAA,OAAO,EAAGpB,WA7BX;AA8BC,IAAA,SAAS,EAAGC,SA9Bb;AA+BC,IAAA,QAAQ,EAAGA,SAAS,GAAG;AAAA,aAAMA,SAAS,CAAE,EAAF,CAAf;AAAA,KAAH,GAA2BoB,SA/BhD;AAgCC,IAAA,WAAW,EAAGT,WAAW,IAAI,cAAI,gBAAJ,CAhC9B;AAiCC,IAAA,SAAS,EAAGF;AAjCb,IARD,CADD;AA8CA;;eAEcZ,c","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tRichText,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useCallback } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\nconst name = 'core/paragraph';\n\nfunction ParagraphBlock( {\n\tattributes,\n\tmergeBlocks,\n\tonReplace,\n\tsetAttributes,\n\tmergedStyle,\n\tstyle,\n\tclientId,\n} ) {\n\tconst isRTL = useSelect( ( select ) => {\n\t\treturn !! select( blockEditorStore ).getSettings().isRTL;\n\t}, [] );\n\n\tconst { align, content, placeholder } = attributes;\n\n\tconst styles = {\n\t\t...mergedStyle,\n\t\t...style,\n\t};\n\n\tconst onAlignmentChange = useCallback( ( nextAlign ) => {\n\t\tsetAttributes( { align: nextAlign } );\n\t}, [] );\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ align }\n\t\t\t\t\tisRTL={ isRTL }\n\t\t\t\t\tonChange={ onAlignmentChange }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName=\"p\"\n\t\t\t\tvalue={ content }\n\t\t\t\tdeleteEnter={ true }\n\t\t\t\tstyle={ styles }\n\t\t\t\tonChange={ ( nextContent ) => {\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tcontent: nextContent,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\n\t\t\t\t\tlet newAttributes;\n\n\t\t\t\t\tif ( isOriginal || value ) {\n\t\t\t\t\t\tnewAttributes = {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst block = createBlock( name, newAttributes );\n\n\t\t\t\t\tif ( isOriginal ) {\n\t\t\t\t\t\tblock.clientId = clientId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn block;\n\t\t\t\t} }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ onReplace ? () => onReplace( [] ) : undefined }\n\t\t\t\tplaceholder={ placeholder || __( 'Start writingâ€¦' ) }\n\t\t\t\ttextAlign={ align }\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ParagraphBlock;\n"]}