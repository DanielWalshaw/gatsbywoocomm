{"version":3,"sources":["@wordpress/block-library/src/query/edit/index.js"],"names":["TEMPLATE","QueryContent","attributes","setAttributes","queryId","query","layout","blockEditorStore","__unstableMarkNextChangeAsNotPersistent","instanceId","blockProps","innerBlocksProps","template","select","getSettings","postsPerPage","DEFAULTS_POSTS_PER_PAGE","newQuery","perPage","Object","keys","length","updateQuery","updateLayout","newLayout","QueryEdit","props","clientId","hasInnerBlocks","getBlocks","Component","QueryBlockSetup"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect } from '@wordpress/element';\nimport {\n\tBlockControls,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport QueryToolbar from './query-toolbar';\nimport QueryInspectorControls from './query-inspector-controls';\nimport QueryBlockSetup from './query-block-setup';\nimport { DEFAULTS_POSTS_PER_PAGE } from '../constants';\n\nconst TEMPLATE = [ [ 'core/query-loop' ] ];\nexport function QueryContent( { attributes, setAttributes } ) {\n\tconst { queryId, query, layout } = attributes;\n\tconst { __unstableMarkNextChangeAsNotPersistent } = useDispatch(\n\t\tblockEditorStore\n\t);\n\tconst instanceId = useInstanceId( QueryContent );\n\tconst blockProps = useBlockProps();\n\tconst innerBlocksProps = useInnerBlocksProps( {}, { template: TEMPLATE } );\n\tconst { postsPerPage } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tpostsPerPage:\n\t\t\t\t+getSettings().postsPerPage || DEFAULTS_POSTS_PER_PAGE,\n\t\t};\n\t}, [] );\n\t// There are some effects running where some initialization logic is\n\t// happening and setting some values to some attributes (ex. queryId).\n\t// These updates can cause an `undo trap` where undoing will result in\n\t// resetting again, so we need to mark these changes as not persistent\n\t// with `__unstableMarkNextChangeAsNotPersistent`.\n\n\t// Changes in query property (which is an object) need to be in the same callback,\n\t// because updates are batched after the render and changes in different query properties\n\t// would cause to overide previous wanted changes.\n\tuseEffect( () => {\n\t\tconst newQuery = {};\n\t\tif ( ! query.perPage && postsPerPage ) {\n\t\t\tnewQuery.perPage = postsPerPage;\n\t\t}\n\t\tif ( !! Object.keys( newQuery ).length ) {\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tupdateQuery( newQuery );\n\t\t}\n\t}, [ query.perPage ] );\n\t// We need this for multi-query block pagination.\n\t// Query parameters for each block are scoped to their ID.\n\tuseEffect( () => {\n\t\tif ( ! queryId ) {\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\n\t\t\tsetAttributes( { queryId: instanceId } );\n\t\t}\n\t}, [ queryId, instanceId ] );\n\tconst updateQuery = ( newQuery ) =>\n\t\tsetAttributes( { query: { ...query, ...newQuery } } );\n\tconst updateLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: { ...layout, ...newLayout } } );\n\treturn (\n\t\t<>\n\t\t\t<QueryInspectorControls\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\tsetLayout={ updateLayout }\n\t\t\t/>\n\t\t\t<BlockControls>\n\t\t\t\t<QueryToolbar\n\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\tsetQuery={ updateQuery }\n\t\t\t\t\tsetLayout={ updateLayout }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<div { ...innerBlocksProps } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst QueryEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\t!! select( blockEditorStore ).getBlocks( clientId ).length,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks ? QueryContent : QueryBlockSetup;\n\treturn <Component { ...props } />;\n};\n\nexport default QueryEdit;\n"]}