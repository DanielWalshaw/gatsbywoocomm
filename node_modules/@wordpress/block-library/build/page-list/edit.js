"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PageListEdit;

var _element = require("@wordpress/element");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _blockEditor = require("@wordpress/block-editor");

var _serverSideRender = _interopRequireDefault(require("@wordpress/server-side-render"));

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _apiFetch = _interopRequireDefault(require("@wordpress/api-fetch"));

var _url = require("@wordpress/url");

var _convertToLinksModal = _interopRequireDefault(require("./convert-to-links-modal"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// We only show the edit option when page count is <= MAX_PAGE_COUNT
// Performance of Navigation Links is not good past this value.
var MAX_PAGE_COUNT = 100;

function PageListEdit(_ref) {
  var _classnames;

  var context = _ref.context,
      clientId = _ref.clientId;

  var _ref2 = context || {},
      textColor = _ref2.textColor,
      backgroundColor = _ref2.backgroundColor,
      showSubmenuIcon = _ref2.showSubmenuIcon,
      style = _ref2.style;

  var _useState = (0, _element.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      allowConvertToLinks = _useState2[0],
      setAllowConvertToLinks = _useState2[1];

  var blockProps = (0, _blockEditor.useBlockProps)({
    className: (0, _classnames2.default)((_classnames = {
      'has-text-color': !!textColor
    }, (0, _defineProperty2.default)(_classnames, "has-".concat(textColor, "-color"), !!textColor), (0, _defineProperty2.default)(_classnames, 'has-background', !!backgroundColor), (0, _defineProperty2.default)(_classnames, "has-".concat(backgroundColor, "-background-color"), !!backgroundColor), (0, _defineProperty2.default)(_classnames, 'show-submenu-icons', !!showSubmenuIcon), _classnames)),
    style: _objectSpread({}, style === null || style === void 0 ? void 0 : style.color)
  });
  var isParentNavigation = (0, _data.useSelect)(function (select) {
    var _select = select(_blockEditor.store),
        getBlockParentsByBlockName = _select.getBlockParentsByBlockName;

    return getBlockParentsByBlockName(clientId, 'core/navigation').length > 0;
  }, [clientId]);
  (0, _element.useEffect)(function () {
    if (isParentNavigation) {
      (0, _apiFetch.default)({
        path: (0, _url.addQueryArgs)('/wp/v2/pages', {
          per_page: 1,
          _fields: ['id']
        }),
        parse: false
      }).then(function (res) {
        setAllowConvertToLinks(res.headers.get('X-WP-Total') <= MAX_PAGE_COUNT);
      });
    } else {
      setAllowConvertToLinks(false);
    }
  }, [isParentNavigation]);

  var _useState3 = (0, _element.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      isOpen = _useState4[0],
      setOpen = _useState4[1];

  var openModal = function openModal() {
    return setOpen(true);
  };

  var closeModal = function closeModal() {
    return setOpen(false);
  };

  return (0, _element.createElement)(_element.Fragment, null, allowConvertToLinks && (0, _element.createElement)(_blockEditor.BlockControls, {
    group: "other"
  }, (0, _element.createElement)(_components.ToolbarButton, {
    title: (0, _i18n.__)('Edit'),
    onClick: openModal
  }, (0, _i18n.__)('Edit'))), allowConvertToLinks && isOpen && (0, _element.createElement)(_convertToLinksModal.default, {
    onClose: closeModal,
    clientId: clientId
  }), (0, _element.createElement)("div", blockProps, (0, _element.createElement)(_serverSideRender.default, {
    block: "core/page-list"
  })));
}
//# sourceMappingURL=edit.js.map