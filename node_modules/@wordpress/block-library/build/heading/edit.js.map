{"version":3,"sources":["@wordpress/block-library/src/heading/edit.js"],"names":["HeadingEdit","attributes","setAttributes","mergeBlocks","onReplace","mergedStyle","clientId","textAlign","content","level","placeholder","tagName","blockProps","className","style","newLevel","nextAlign","value","isOriginal","block"],"mappings":";;;;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAUA;;;;;;AAEA,SAASA,WAAT,OAOI;AAAA,MANHC,UAMG,QANHA,UAMG;AAAA,MALHC,aAKG,QALHA,aAKG;AAAA,MAJHC,WAIG,QAJHA,WAIG;AAAA,MAHHC,SAGG,QAHHA,SAGG;AAAA,MAFHC,WAEG,QAFHA,WAEG;AAAA,MADHC,QACG,QADHA,QACG;AAAA,MACKC,SADL,GACgDN,UADhD,CACKM,SADL;AAAA,MACgBC,OADhB,GACgDP,UADhD,CACgBO,OADhB;AAAA,MACyBC,KADzB,GACgDR,UADhD,CACyBQ,KADzB;AAAA,MACgCC,WADhC,GACgDT,UADhD,CACgCS,WADhC;AAEH,MAAMC,OAAO,GAAG,MAAMF,KAAtB;AACA,MAAMG,UAAU,GAAG,gCAAe;AACjCC,IAAAA,SAAS,EAAE,qFACWN,SADX,GAC2BA,SAD3B,EADsB;AAIjCO,IAAAA,KAAK,EAAET;AAJ0B,GAAf,CAAnB;AAOA,SACC,qDACC,4BAAC,0BAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,4BAAC,6BAAD;AACC,IAAA,aAAa,EAAGI,KADjB;AAEC,IAAA,QAAQ,EAAG,kBAAEM,QAAF;AAAA,aACVb,aAAa,CAAE;AAAEO,QAAAA,KAAK,EAAEM;AAAT,OAAF,CADH;AAAA;AAFZ,IADD,EAOC,4BAAC,6BAAD;AACC,IAAA,KAAK,EAAGR,SADT;AAEC,IAAA,QAAQ,EAAG,kBAAES,SAAF,EAAiB;AAC3Bd,MAAAA,aAAa,CAAE;AAAEK,QAAAA,SAAS,EAAES;AAAb,OAAF,CAAb;AACA;AAJF,IAPD,CADD,EAeC,4BAAC,qBAAD;AACC,IAAA,UAAU,EAAC,SADZ;AAEC,IAAA,OAAO,EAAGL,OAFX;AAGC,IAAA,KAAK,EAAGH,OAHT;AAIC,IAAA,QAAQ,EAAG,kBAAES,KAAF;AAAA,aAAaf,aAAa,CAAE;AAAEM,QAAAA,OAAO,EAAES;AAAX,OAAF,CAA1B;AAAA,KAJZ;AAKC,IAAA,OAAO,EAAGd,WALX;AAMC,IAAA,OAAO,EAAG,iBAAEc,KAAF,EAASC,UAAT,EAAyB;AAClC,UAAIC,KAAJ;;AAEA,UAAKD,UAAU,IAAID,KAAnB,EAA2B;AAC1BE,QAAAA,KAAK,GAAG,yBAAa,cAAb,kCACJlB,UADI;AAEPO,UAAAA,OAAO,EAAES;AAFF,WAAR;AAIA,OALD,MAKO;AACNE,QAAAA,KAAK,GAAG,yBAAa,gBAAb,CAAR;AACA;;AAED,UAAKD,UAAL,EAAkB;AACjBC,QAAAA,KAAK,CAACb,QAAN,GAAiBA,QAAjB;AACA;;AAED,aAAOa,KAAP;AACA,KAvBF;AAwBC,IAAA,SAAS,EAAGf,SAxBb;AAyBC,IAAA,QAAQ,EAAG;AAAA,aAAMA,SAAS,CAAE,EAAF,CAAf;AAAA,KAzBZ;AA0BC,kBAAa,cAAI,cAAJ,CA1Bd;AA2BC,IAAA,WAAW,EAAGM,WAAW,IAAI,cAAI,SAAJ,CA3B9B;AA4BC,IAAA,SAAS,EAAGH;AA5Bb,KA6BMK,UA7BN,EAfD,CADD;AAiDA;;eAEcZ,W","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tRichText,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport HeadingLevelDropdown from './heading-level-dropdown';\n\nfunction HeadingEdit( {\n\tattributes,\n\tsetAttributes,\n\tmergeBlocks,\n\tonReplace,\n\tmergedStyle,\n\tclientId,\n} ) {\n\tconst { textAlign, content, level, placeholder } = attributes;\n\tconst tagName = 'h' + level;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t\tstyle: mergedStyle,\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<HeadingLevelDropdown\n\t\t\t\t\tselectedLevel={ level }\n\t\t\t\t\tonChange={ ( newLevel ) =>\n\t\t\t\t\t\tsetAttributes( { level: newLevel } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName={ tagName }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ ( value ) => setAttributes( { content: value } ) }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\n\t\t\t\t\tlet block;\n\n\t\t\t\t\tif ( isOriginal || value ) {\n\t\t\t\t\t\tblock = createBlock( 'core/heading', {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblock = createBlock( 'core/paragraph' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isOriginal ) {\n\t\t\t\t\t\tblock.clientId = clientId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn block;\n\t\t\t\t} }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ () => onReplace( [] ) }\n\t\t\t\taria-label={ __( 'Heading text' ) }\n\t\t\t\tplaceholder={ placeholder || __( 'Heading' ) }\n\t\t\t\ttextAlign={ textAlign }\n\t\t\t\t{ ...blockProps }\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default HeadingEdit;\n"]}