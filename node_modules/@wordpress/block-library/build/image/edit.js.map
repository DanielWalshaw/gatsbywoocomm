{"version":3,"sources":["@wordpress/block-library/src/image/edit.js"],"names":["pickRelevantMediaFiles","image","size","imageProps","url","isTemporaryImage","id","isExternalImage","ImageEdit","attributes","setAttributes","isSelected","className","noticeUI","insertBlocksAfter","noticeOperations","onReplace","alt","caption","align","width","height","sizeSlug","temporaryURL","setTemporaryURL","altRef","current","captionRef","ref","select","blockEditorStore","getSettings","imageDefaultSize","mediaUpload","onUploadError","message","removeAllNotices","createErrorNotice","onSelectImage","media","undefined","title","mediaAttributes","additionalAttributes","linkDestination","wp","view","settings","defaultProps","link","LINK_DESTINATION_NONE","LINK_DESTINATION_MEDIA","LINK_DESTINATION_ATTACHMENT","LINK_DESTINATION_CUSTOM","href","onSelectURL","newURL","updateAlignment","nextAlign","extraUpdatedAttributes","includes","isTemp","file","filesList","onFileChange","img","allowedTypes","ALLOWED_MEDIA_TYPES","onError","src","isExternal","mediaPreview","classes","blockProps","icon"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, omit, pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport { withNotices } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport {\n\tBlockAlignmentControl,\n\tBlockControls,\n\tBlockIcon,\n\tMediaPlaceholder,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { image as icon } from '@wordpress/icons';\n\n/* global wp */\n\n/**\n * Internal dependencies\n */\nimport Image from './image';\n\n/**\n * Module constants\n */\nimport {\n\tLINK_DESTINATION_ATTACHMENT,\n\tLINK_DESTINATION_CUSTOM,\n\tLINK_DESTINATION_MEDIA,\n\tLINK_DESTINATION_NONE,\n\tALLOWED_MEDIA_TYPES,\n} from './constants';\n\nexport const pickRelevantMediaFiles = ( image, size ) => {\n\tconst imageProps = pick( image, [ 'alt', 'id', 'link', 'caption' ] );\n\timageProps.url =\n\t\tget( image, [ 'sizes', size, 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', size, 'source_url' ] ) ||\n\t\timage.url;\n\treturn imageProps;\n};\n\n/**\n * Is the URL a temporary blob URL? A blob URL is one that is used temporarily\n * while the image is being uploaded and will not have an id yet allocated.\n *\n * @param {number=} id The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the URL a Blob URL\n */\nconst isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\n\n/**\n * Is the url for the image hosted externally. An externally hosted image has no\n * id and is not a blob url.\n *\n * @param {number=} id  The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the url an externally hosted url?\n */\nexport const isExternalImage = ( id, url ) => url && ! id && ! isBlobURL( url );\n\nexport function ImageEdit( {\n\tattributes,\n\tsetAttributes,\n\tisSelected,\n\tclassName,\n\tnoticeUI,\n\tinsertBlocksAfter,\n\tnoticeOperations,\n\tonReplace,\n} ) {\n\tconst {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\twidth,\n\t\theight,\n\t\tsizeSlug,\n\t} = attributes;\n\tconst [ temporaryURL, setTemporaryURL ] = useState();\n\n\tconst altRef = useRef();\n\tuseEffect( () => {\n\t\taltRef.current = alt;\n\t}, [ alt ] );\n\n\tconst captionRef = useRef();\n\tuseEffect( () => {\n\t\tcaptionRef.current = caption;\n\t}, [ caption ] );\n\n\tconst ref = useRef();\n\tconst { imageDefaultSize, mediaUpload } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn pick( getSettings(), [ 'imageDefaultSize', 'mediaUpload' ] );\n\t}, [] );\n\n\tfunction onUploadError( message ) {\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tfunction onSelectImage( media ) {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tsetAttributes( {\n\t\t\t\turl: undefined,\n\t\t\t\talt: undefined,\n\t\t\t\tid: undefined,\n\t\t\t\ttitle: undefined,\n\t\t\t\tcaption: undefined,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isBlobURL( media.url ) ) {\n\t\t\tsetTemporaryURL( media.url );\n\t\t\treturn;\n\t\t}\n\n\t\tsetTemporaryURL();\n\n\t\tlet mediaAttributes = pickRelevantMediaFiles( media, imageDefaultSize );\n\n\t\t// If a caption text was meanwhile written by the user,\n\t\t// make sure the text is not overwritten by empty captions.\n\t\tif ( captionRef.current && ! get( mediaAttributes, [ 'caption' ] ) ) {\n\t\t\tmediaAttributes = omit( mediaAttributes, [ 'caption' ] );\n\t\t}\n\n\t\tlet additionalAttributes;\n\t\t// Reset the dimension attributes if changing to a different image.\n\t\tif ( ! media.id || media.id !== id ) {\n\t\t\tadditionalAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: imageDefaultSize,\n\t\t\t};\n\t\t} else {\n\t\t\t// Keep the same url when selecting the same file, so \"Image Size\"\n\t\t\t// option is not changed.\n\t\t\tadditionalAttributes = { url };\n\t\t}\n\n\t\t// Check if default link setting should be used.\n\t\tlet linkDestination = attributes.linkDestination;\n\t\tif ( ! linkDestination ) {\n\t\t\t// Use the WordPress option to determine the proper default.\n\t\t\t// The constants used in Gutenberg do not match WP options so a little more complicated than ideal.\n\t\t\t// TODO: fix this in a follow up PR, requires updating media-text and ui component.\n\t\t\tswitch (\n\t\t\t\twp?.media?.view?.settings?.defaultProps?.link ||\n\t\t\t\tLINK_DESTINATION_NONE\n\t\t\t) {\n\t\t\t\tcase 'file':\n\t\t\t\tcase LINK_DESTINATION_MEDIA:\n\t\t\t\t\tlinkDestination = LINK_DESTINATION_MEDIA;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'post':\n\t\t\t\tcase LINK_DESTINATION_ATTACHMENT:\n\t\t\t\t\tlinkDestination = LINK_DESTINATION_ATTACHMENT;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LINK_DESTINATION_CUSTOM:\n\t\t\t\t\tlinkDestination = LINK_DESTINATION_CUSTOM;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LINK_DESTINATION_NONE:\n\t\t\t\t\tlinkDestination = LINK_DESTINATION_NONE;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Check if the image is linked to it's media.\n\t\tlet href;\n\t\tswitch ( linkDestination ) {\n\t\t\tcase LINK_DESTINATION_MEDIA:\n\t\t\t\thref = media.url;\n\t\t\t\tbreak;\n\t\t\tcase LINK_DESTINATION_ATTACHMENT:\n\t\t\t\thref = media.link;\n\t\t\t\tbreak;\n\t\t}\n\t\tmediaAttributes.href = href;\n\n\t\tsetAttributes( {\n\t\t\t...mediaAttributes,\n\t\t\t...additionalAttributes,\n\t\t\tlinkDestination,\n\t\t} );\n\t}\n\n\tfunction onSelectURL( newURL ) {\n\t\tif ( newURL !== url ) {\n\t\t\tsetAttributes( {\n\t\t\t\turl: newURL,\n\t\t\t\tid: undefined,\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: imageDefaultSize,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction updateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = [ 'wide', 'full' ].includes( nextAlign )\n\t\t\t? { width: undefined, height: undefined }\n\t\t\t: {};\n\t\tsetAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tconst isTemp = isTemporaryImage( id, url );\n\n\t// Upload a temporary image on mount.\n\tuseEffect( () => {\n\t\tif ( ! isTemp ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst file = getBlobByURL( url );\n\n\t\tif ( file ) {\n\t\t\tmediaUpload( {\n\t\t\t\tfilesList: [ file ],\n\t\t\t\tonFileChange: ( [ img ] ) => {\n\t\t\t\t\tonSelectImage( img );\n\t\t\t\t},\n\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\tonError: ( message ) => {\n\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tsrc: undefined,\n\t\t\t\t\t\tid: undefined,\n\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\t// If an image is temporary, revoke the Blob url when it is uploaded (and is\n\t// no longer temporary).\n\tuseEffect( () => {\n\t\tif ( ! temporaryURL ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn () => {\n\t\t\trevokeBlobURL( temporaryURL );\n\t\t};\n\t}, [ temporaryURL ] );\n\n\tconst isExternal = isExternalImage( id, url );\n\tconst src = isExternal ? url : undefined;\n\tconst mediaPreview = !! url && (\n\t\t<img\n\t\t\talt={ __( 'Edit image' ) }\n\t\t\ttitle={ __( 'Edit image' ) }\n\t\t\tclassName={ 'edit-image-preview' }\n\t\t\tsrc={ url }\n\t\t/>\n\t);\n\n\tconst classes = classnames( className, {\n\t\t'is-transient': temporaryURL,\n\t\t'is-resized': !! width || !! height,\n\t\t[ `size-${ sizeSlug }` ]: sizeSlug,\n\t} );\n\n\tconst blockProps = useBlockProps( {\n\t\tref,\n\t\tclassName: classes,\n\t} );\n\n\treturn (\n\t\t<figure { ...blockProps }>\n\t\t\t{ ( temporaryURL || url ) && (\n\t\t\t\t<Image\n\t\t\t\t\ttemporaryURL={ temporaryURL }\n\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\tonSelectImage={ onSelectImage }\n\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\tonUploadError={ onUploadError }\n\t\t\t\t\tcontainerRef={ ref }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ ! url && (\n\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t<BlockAlignmentControl\n\t\t\t\t\t\tvalue={ align }\n\t\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t<MediaPlaceholder\n\t\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\t\tonSelect={ onSelectImage }\n\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\tnotices={ noticeUI }\n\t\t\t\tonError={ onUploadError }\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\tvalue={ { id, src } }\n\t\t\t\tmediaPreview={ mediaPreview }\n\t\t\t\tdisableMediaButtons={ temporaryURL || url }\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nexport default withNotices( ImageEdit );\n"]}