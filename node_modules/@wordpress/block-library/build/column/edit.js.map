{"version":3,"sources":["@wordpress/block-library/src/column/edit.js"],"names":["ColumnEdit","attributes","verticalAlignment","width","templateLock","setAttributes","clientId","classes","select","blockEditorStore","getBlockOrder","getBlockRootClientId","rootId","hasChildBlocks","length","rootClientId","columnsIds","updateBlockAttributes","updateAlignment","value","widthWithUnit","Number","isFinite","blockProps","className","style","flexBasis","undefined","columnsCount","currentColumnPosition","indexOf","label","innerBlocksProps","renderAppender","InnerBlocks","ButtonBlockAppender","nextWidth","parseFloat","CSS_UNITS"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tInspectorControls,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\t__experimentalUnitControl as UnitControl,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { sprintf, __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { CSS_UNITS } from '../columns/utils';\n\nfunction ColumnEdit( {\n\tattributes: { verticalAlignment, width, templateLock = false },\n\tsetAttributes,\n\tclientId,\n} ) {\n\tconst classes = classnames( 'block-core-columns', {\n\t\t[ `is-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t} );\n\n\tconst { columnsIds, hasChildBlocks, rootClientId } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockOrder, getBlockRootClientId } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\n\t\t\tconst rootId = getBlockRootClientId( clientId );\n\n\t\t\treturn {\n\t\t\t\thasChildBlocks: getBlockOrder( clientId ).length > 0,\n\t\t\t\trootClientId: rootId,\n\t\t\t\tcolumnsIds: getBlockOrder( rootId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tconst updateAlignment = ( value ) => {\n\t\t// Update own alignment.\n\t\tsetAttributes( { verticalAlignment: value } );\n\t\t// Reset parent Columns block.\n\t\tupdateBlockAttributes( rootClientId, {\n\t\t\tverticalAlignment: null,\n\t\t} );\n\t};\n\n\tconst widthWithUnit = Number.isFinite( width ) ? width + '%' : width;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classes,\n\t\tstyle: widthWithUnit ? { flexBasis: widthWithUnit } : undefined,\n\t} );\n\n\tconst columnsCount = columnsIds.length;\n\tconst currentColumnPosition = columnsIds.indexOf( clientId ) + 1;\n\n\tconst label = sprintf(\n\t\t/* translators: 1: Block label (i.e. \"Block: Column\"), 2: Position of the selected block, 3: Total number of sibling blocks of the same type */\n\t\t__( '%1$s (%2$d of %3$d)' ),\n\t\tblockProps[ 'aria-label' ],\n\t\tcurrentColumnPosition,\n\t\tcolumnsCount\n\t);\n\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{ ...blockProps, 'aria-label': label },\n\t\t{\n\t\t\ttemplateLock,\n\t\t\trenderAppender: hasChildBlocks\n\t\t\t\t? undefined\n\t\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t\t}\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Column settings' ) }>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tlabel={ __( 'Width' ) }\n\t\t\t\t\t\tlabelPosition=\"edge\"\n\t\t\t\t\t\t__unstableInputWidth=\"80px\"\n\t\t\t\t\t\tvalue={ width || '' }\n\t\t\t\t\t\tonChange={ ( nextWidth ) => {\n\t\t\t\t\t\t\tnextWidth =\n\t\t\t\t\t\t\t\t0 > parseFloat( nextWidth ) ? '0' : nextWidth;\n\t\t\t\t\t\t\tsetAttributes( { width: nextWidth } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tunits={ CSS_UNITS }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nexport default ColumnEdit;\n"]}