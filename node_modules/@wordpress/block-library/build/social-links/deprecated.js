"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classnames = _interopRequireDefault(require("classnames"));

var _blockEditor = require("@wordpress/block-editor");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */
// Social Links block deprecations.
var deprecated = [// V1. Remove CSS variable use for colors.
{
  attributes: {
    iconColor: {
      type: 'string'
    },
    customIconColor: {
      type: 'string'
    },
    iconColorValue: {
      type: 'string'
    },
    iconBackgroundColor: {
      type: 'string'
    },
    customIconBackgroundColor: {
      type: 'string'
    },
    iconBackgroundColorValue: {
      type: 'string'
    },
    openInNewTab: {
      type: 'boolean',
      default: false
    },
    size: {
      type: 'string'
    }
  },
  providesContext: {
    openInNewTab: 'openInNewTab'
  },
  supports: {
    align: ['left', 'center', 'right'],
    anchor: true
  },
  save: function save(props) {
    var _props$attributes = props.attributes,
        iconBackgroundColorValue = _props$attributes.iconBackgroundColorValue,
        iconColorValue = _props$attributes.iconColorValue,
        itemsJustification = _props$attributes.itemsJustification,
        size = _props$attributes.size;
    var className = (0, _classnames.default)(size, (0, _defineProperty2.default)({
      'has-icon-color': iconColorValue,
      'has-icon-background-color': iconBackgroundColorValue
    }, "items-justified-".concat(itemsJustification), itemsJustification));
    var style = {
      '--wp--social-links--icon-color': iconColorValue,
      '--wp--social-links--icon-background-color': iconBackgroundColorValue
    };
    return (0, _element.createElement)("ul", _blockEditor.useBlockProps.save({
      className: className,
      style: style
    }), (0, _element.createElement)(_blockEditor.InnerBlocks.Content, null));
  }
}];
var _default = deprecated;
exports.default = _default;
//# sourceMappingURL=deprecated.js.map