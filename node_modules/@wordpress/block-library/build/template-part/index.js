"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.settings = exports.name = exports.metadata = void 0;

var _lodash = require("lodash");

var _coreData = require("@wordpress/core-data");

var _data = require("@wordpress/data");

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

var _edit = _interopRequireDefault(require("./edit"));

var _variations = _interopRequireDefault(require("./variations"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
var metadata = {
  apiVersion: 2,
  name: "core/template-part",
  category: "theme",
  attributes: {
    slug: {
      type: "string"
    },
    theme: {
      type: "string"
    },
    tagName: {
      type: "string"
    },
    area: {
      type: "string"
    }
  },
  supports: {
    align: true,
    html: false,
    color: {
      gradients: true,
      link: true
    },
    spacing: {
      padding: true
    },
    __experimentalLayout: true
  },
  editorStyle: "wp-block-template-part-editor"
};
exports.metadata = metadata;
var name = metadata.name;
exports.name = name;
var settings = {
  title: (0, _i18n._x)('Template Part', 'block title'),
  description: (0, _i18n.__)('Edit the different global regions of your site, like the header, footer, sidebar, or create your own.'),
  icon: _icons.layout,
  keywords: [(0, _i18n.__)('template part')],
  __experimentalLabel: function __experimentalLabel(_ref) {
    var _entity$title;

    var slug = _ref.slug,
        theme = _ref.theme;

    // Attempt to find entity title if block is a template part.
    // Require slug to request, otherwise entity is uncreated and will throw 404.
    if (!slug) {
      return;
    }

    var entity = (0, _data.select)(_coreData.store).getEntityRecord('postType', 'wp_template_part', theme + '//' + slug);

    if (!entity) {
      return;
    }

    return (0, _lodash.startCase)(((_entity$title = entity.title) === null || _entity$title === void 0 ? void 0 : _entity$title.rendered) || entity.slug);
  },
  edit: _edit.default,
  variations: _variations.default
};
exports.settings = settings;
//# sourceMappingURL=index.js.map