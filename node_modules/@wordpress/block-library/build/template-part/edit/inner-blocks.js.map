{"version":3,"sources":["@wordpress/block-library/src/template-part/edit/inner-blocks.js"],"names":["TemplatePartInnerBlocks","id","postId","hasInnerBlocks","layout","TagName","tagName","blockProps","themeSupportsLayout","select","blockEditorStore","getSettings","supportsLayout","defaultLayout","usedLayout","inherit","contentSize","wideSize","alignments","blocks","onInput","onChange","innerBlocksProps","value","renderAppender","undefined","InnerBlocks","ButtonBlockAppender","__experimentalLayout","type"],"mappings":";;;;;;;;;;;;;AAGA;;AACA;;AAMA;;AAVA;AACA;AACA;AAUe,SAASA,uBAAT,OAMX;AAAA,MALKC,EAKL,QALHC,MAKG;AAAA,MAJHC,cAIG,QAJHA,cAIG;AAAA,MAHHC,MAGG,QAHHA,MAGG;AAAA,MAFMC,OAEN,QAFHC,OAEG;AAAA,MADHC,UACG,QADHA,UACG;AACH,MAAMC,mBAAmB,GAAG,qBAAW,UAAEC,MAAF,EAAc;AAAA;;AAAA,kBAC5BA,MAAM,CAAEC,kBAAF,CADsB;AAAA,QAC5CC,WAD4C,WAC5CA,WAD4C;;AAEpD,2BAAOA,WAAW,EAAlB,iDAAO,aAAeC,cAAtB;AACA,GAH2B,EAGzB,EAHyB,CAA5B;AAIA,MAAMC,aAAa,GAAG,iDAAkB,QAAlB,KAAgC,EAAtD;AACA,MAAMC,UAAU,GAAG,CAAC,CAAEV,MAAH,IAAaA,MAAM,CAACW,OAApB,GAA8BF,aAA9B,GAA8CT,MAAjE;AANG,MAOKY,WAPL,GAO+BF,UAP/B,CAOKE,WAPL;AAAA,MAOkBC,QAPlB,GAO+BH,UAP/B,CAOkBG,QAPlB;AAQH,MAAMC,UAAU,GACfF,WAAW,IAAIC,QAAf,GACG,CAAE,MAAF,EAAU,MAAV,CADH,GAEG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,CAHJ;;AARG,8BAYmC,oCACrC,UADqC,EAErC,kBAFqC,EAGrC;AAAEhB,IAAAA,EAAE,EAAFA;AAAF,GAHqC,CAZnC;AAAA;AAAA,MAYKkB,MAZL;AAAA,MAYaC,OAZb;AAAA,MAYsBC,QAZtB;;AAiBH,MAAMC,gBAAgB,GAAG,oDAAqBf,UAArB,EAAiC;AACzDgB,IAAAA,KAAK,EAAEJ,MADkD;AAEzDC,IAAAA,OAAO,EAAPA,OAFyD;AAGzDC,IAAAA,QAAQ,EAARA,QAHyD;AAIzDG,IAAAA,cAAc,EAAErB,cAAc,GAC3BsB,SAD2B,GAE3BC,yBAAYC,mBAN0C;AAOzDC,IAAAA,oBAAoB,EAAE;AACrBC,MAAAA,IAAI,EAAE,SADe;AAErB;AACAX,MAAAA,UAAU,EAAEV,mBAAmB,GAAGU,UAAH,GAAgBO;AAH1B;AAPmC,GAAjC,CAAzB;AAaA,SAAO,4BAAC,OAAD,EAAcH,gBAAd,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityBlockEditor } from '@wordpress/core-data';\nimport {\n\tInnerBlocks,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\t__experimentalUseEditorFeature as useEditorFeature,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\nexport default function TemplatePartInnerBlocks( {\n\tpostId: id,\n\thasInnerBlocks,\n\tlayout,\n\ttagName: TagName,\n\tblockProps,\n} ) {\n\tconst themeSupportsLayout = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings()?.supportsLayout;\n\t}, [] );\n\tconst defaultLayout = useEditorFeature( 'layout' ) || {};\n\tconst usedLayout = !! layout && layout.inherit ? defaultLayout : layout;\n\tconst { contentSize, wideSize } = usedLayout;\n\tconst alignments =\n\t\tcontentSize || wideSize\n\t\t\t? [ 'wide', 'full' ]\n\t\t\t: [ 'left', 'center', 'right' ];\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\t'wp_template_part',\n\t\t{ id }\n\t);\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tvalue: blocks,\n\t\tonInput,\n\t\tonChange,\n\t\trenderAppender: hasInnerBlocks\n\t\t\t? undefined\n\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t\t__experimentalLayout: {\n\t\t\ttype: 'default',\n\t\t\t// Find a way to inject this in the support flag code (hooks).\n\t\t\talignments: themeSupportsLayout ? alignments : undefined,\n\t\t},\n\t} );\n\treturn <TagName { ...innerBlocksProps } />;\n}\n"]}