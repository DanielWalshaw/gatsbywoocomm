"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _icons = require("@wordpress/icons");

var _coreData = require("@wordpress/core-data");

var _data = require("@wordpress/data");

var _i18n = require("@wordpress/i18n");

/**
 * WordPress dependencies
 */
var variations = [{
  name: 'header',
  title: (0, _i18n.__)('Header'),
  description: (0, _i18n.__)("The header template defines a page area that typically contains a title, logo, and main navigation. Since it's a global element it can be present across all pages and posts."),
  icon: _icons.header,
  attributes: {
    area: 'header'
  },
  scope: ['inserter']
}, {
  name: 'footer',
  title: (0, _i18n.__)('Footer'),
  description: (0, _i18n.__)("The footer template defines a page area that typically contains site credits, social links, or any other combination of blocks. Since it's a global element it can be present across all pages and posts."),
  icon: _icons.footer,
  attributes: {
    area: 'footer'
  },
  scope: ['inserter']
}];
/**
 * Add `isActive` function to all `Template Part` variations, if not defined.
 * `isActive` function is used to find a variation match from a created
 *  Block by providing its attributes.
 */

variations.forEach(function (variation) {
  if (variation.isActive) return;

  variation.isActive = function (blockAttributes, variationAttributes) {
    var area = blockAttributes.area,
        theme = blockAttributes.theme,
        slug = blockAttributes.slug; // We first check the `area` block attribute which is set during insertion.
    // This property is removed on the creation of a template part.

    if (area) return area === variationAttributes.area; // Find a matching variation from the created template part
    // by checking the entity's `area` property.

    if (!slug) return false;
    var entity = (0, _data.select)(_coreData.store).getEntityRecord('postType', 'wp_template_part', "".concat(theme, "//").concat(slug));
    return (entity === null || entity === void 0 ? void 0 : entity.area) === variationAttributes.area;
  };
});
var _default = variations;
exports.default = _default;
//# sourceMappingURL=variations.js.map