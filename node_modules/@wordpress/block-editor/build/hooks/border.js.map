{"version":3,"sources":["@wordpress/block-editor/src/hooks/border.js"],"names":["BORDER_SUPPORT_KEY","BorderPanel","props","isDisabled","useIsBorderDisabled","isSupported","hasBorderSupport","name","isColorSupported","isRadiusSupported","isStyleSupported","isWidthSupported","blockName","feature","Platform","OS","support","color","radius","width","style","shouldSkipSerialization","blockType","__experimentalSkipSerialization","configs","every","Boolean"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getBlockSupport } from '@wordpress/blocks';\nimport { PanelBody } from '@wordpress/components';\nimport { Platform } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../components/inspector-controls';\nimport useEditorFeature from '../components/use-editor-feature';\nimport { BorderColorEdit } from './border-color';\nimport { BorderRadiusEdit } from './border-radius';\nimport { BorderStyleEdit } from './border-style';\nimport { BorderWidthEdit } from './border-width';\n\nexport const BORDER_SUPPORT_KEY = '__experimentalBorder';\n\nexport function BorderPanel( props ) {\n\tconst isDisabled = useIsBorderDisabled( props );\n\tconst isSupported = hasBorderSupport( props.name );\n\n\tconst isColorSupported =\n\t\tuseEditorFeature( 'border.customColor' ) &&\n\t\thasBorderSupport( props.name, 'color' );\n\n\tconst isRadiusSupported =\n\t\tuseEditorFeature( 'border.customRadius' ) &&\n\t\thasBorderSupport( props.name, 'radius' );\n\n\tconst isStyleSupported =\n\t\tuseEditorFeature( 'border.customStyle' ) &&\n\t\thasBorderSupport( props.name, 'style' );\n\n\tconst isWidthSupported =\n\t\tuseEditorFeature( 'border.customWidth' ) &&\n\t\thasBorderSupport( props.name, 'width' );\n\n\tif ( isDisabled || ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Border settings' ) } initialOpen={ false }>\n\t\t\t\t{ isStyleSupported && <BorderStyleEdit { ...props } /> }\n\t\t\t\t{ isWidthSupported && <BorderWidthEdit { ...props } /> }\n\t\t\t\t{ isRadiusSupported && <BorderRadiusEdit { ...props } /> }\n\t\t\t\t{ isColorSupported && <BorderColorEdit { ...props } /> }\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n\n/**\n * Determine whether there is block support for border properties.\n *\n * @param  {string} blockName Block name.\n * @param  {string} feature   Border feature to check support for.\n * @return {boolean}          Whether there is support.\n */\nexport function hasBorderSupport( blockName, feature = 'any' ) {\n\tif ( Platform.OS !== 'web' ) {\n\t\treturn false;\n\t}\n\n\tconst support = getBlockSupport( blockName, BORDER_SUPPORT_KEY );\n\n\tif ( support === true ) {\n\t\treturn true;\n\t}\n\n\tif ( feature === 'any' ) {\n\t\treturn !! (\n\t\t\tsupport?.color ||\n\t\t\tsupport?.radius ||\n\t\t\tsupport?.width ||\n\t\t\tsupport?.style\n\t\t);\n\t}\n\n\treturn !! support?.[ feature ];\n}\n\n/**\n * Check whether serialization of border classes and styles should be skipped.\n *\n * @param  {string|Object} blockType Block name or block type object.\n * @return {boolean}                 Whether serialization of border properties should occur.\n */\nexport function shouldSkipSerialization( blockType ) {\n\tconst support = getBlockSupport( blockType, BORDER_SUPPORT_KEY );\n\n\treturn support?.__experimentalSkipSerialization;\n}\n\n/**\n * Determines if all border support features have been disabled.\n *\n * @return {boolean} If border support is completely disabled.\n */\nconst useIsBorderDisabled = () => {\n\tconst configs = [\n\t\t! useEditorFeature( 'border.customColor' ),\n\t\t! useEditorFeature( 'border.customRadius' ),\n\t\t! useEditorFeature( 'border.customStyle' ),\n\t\t! useEditorFeature( 'border.customWidth' ),\n\t];\n\n\treturn configs.every( Boolean );\n};\n"]}