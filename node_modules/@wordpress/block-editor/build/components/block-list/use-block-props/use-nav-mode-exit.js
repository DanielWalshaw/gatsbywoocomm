"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNavModeExit = useNavModeExit;

var _data = require("@wordpress/data");

var _compose = require("@wordpress/compose");

var _store = require("../../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Allows navigation mode to be exited by clicking in the selected block.
 *
 * @param {string} clientId Block client ID.
 */
function useNavModeExit(clientId) {
  var _useSelect = (0, _data.useSelect)(_store.store),
      isNavigationMode = _useSelect.isNavigationMode,
      isBlockSelected = _useSelect.isBlockSelected;

  var _useDispatch = (0, _data.useDispatch)(_store.store),
      setNavigationMode = _useDispatch.setNavigationMode,
      selectBlock = _useDispatch.selectBlock;

  return (0, _compose.useRefEffect)(function (node) {
    function onMouseDown(event) {
      // Don't select a block if it's already handled by a child
      // block.
      if (isNavigationMode() && !event.defaultPrevented) {
        // Prevent focus from moving to the block.
        event.preventDefault(); // When clicking on a selected block, exit navigation mode.

        if (isBlockSelected(clientId)) {
          setNavigationMode(false);
        } else {
          selectBlock(clientId);
        }
      }
    }

    node.addEventListener('mousedown', onMouseDown);
    return function () {
      node.addEventListener('mousedown', onMouseDown);
    };
  }, [clientId, isNavigationMode, isBlockSelected, setNavigationMode]);
}
//# sourceMappingURL=use-nav-mode-exit.js.map