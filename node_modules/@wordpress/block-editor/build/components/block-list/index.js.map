{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/index.js"],"names":["BlockNodes","SetBlockNodes","BlockList","className","__experimentalLayout","ref","blockNodes","setBlockNodes","insertionPoint","isLargeViewport","select","blockEditorStore","_isTyping","isTyping","getSettings","_isNavigationMode","isNavigationMode","outlineMode","focusMode","isOutlineMode","isFocusMode","Items","placeholder","rootClientId","renderAppender","__experimentalAppenderTagName","layout","defaultLayout","selector","getBlockOrder","getSelectedBlockClientId","getMultiSelectedBlockClientIds","hasMultiSelection","blockClientIds","selectedBlockClientId","multiSelectedBlockClientIds","map","clientId","index","isBlockInSelection","includes","length","BlockListItems","props"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { AsyncModeProvider, useSelect } from '@wordpress/data';\nimport { useRef, createContext, useState } from '@wordpress/element';\nimport { useViewportMatch, useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockListBlock from './block';\nimport BlockListAppender from '../block-list-appender';\nimport useBlockDropZone from '../use-block-drop-zone';\nimport useInsertionPoint from './insertion-point';\nimport BlockPopover from './block-popover';\nimport { store as blockEditorStore } from '../../store';\nimport { usePreParsePatterns } from '../../utils/pre-parse-patterns';\nimport { LayoutProvider, defaultLayout } from './layout';\n\nexport const BlockNodes = createContext();\nexport const SetBlockNodes = createContext();\n\nexport default function BlockList( { className, __experimentalLayout } ) {\n\tconst ref = useRef();\n\tconst [ blockNodes, setBlockNodes ] = useState( {} );\n\tconst insertionPoint = useInsertionPoint( ref );\n\tusePreParsePatterns();\n\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst {\n\t\tisTyping,\n\t\tisOutlineMode,\n\t\tisFocusMode,\n\t\tisNavigationMode,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisTyping: _isTyping,\n\t\t\tgetSettings,\n\t\t\tisNavigationMode: _isNavigationMode,\n\t\t} = select( blockEditorStore );\n\t\tconst { outlineMode, focusMode } = getSettings();\n\t\treturn {\n\t\t\tisTyping: _isTyping(),\n\t\t\tisOutlineMode: outlineMode,\n\t\t\tisFocusMode: focusMode,\n\t\t\tisNavigationMode: _isNavigationMode(),\n\t\t};\n\t}, [] );\n\n\treturn (\n\t\t<BlockNodes.Provider value={ blockNodes }>\n\t\t\t{ insertionPoint }\n\t\t\t<BlockPopover />\n\t\t\t<div\n\t\t\t\tref={ useMergeRefs( [ ref, useBlockDropZone() ] ) }\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'block-editor-block-list__layout is-root-container',\n\t\t\t\t\tclassName,\n\t\t\t\t\t{\n\t\t\t\t\t\t'is-typing': isTyping,\n\t\t\t\t\t\t'is-outline-mode': isOutlineMode,\n\t\t\t\t\t\t'is-focus-mode': isFocusMode && isLargeViewport,\n\t\t\t\t\t\t'is-navigate-mode': isNavigationMode,\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t<SetBlockNodes.Provider value={ setBlockNodes }>\n\t\t\t\t\t<BlockListItems\n\t\t\t\t\t\t__experimentalLayout={ __experimentalLayout }\n\t\t\t\t\t/>\n\t\t\t\t</SetBlockNodes.Provider>\n\t\t\t</div>\n\t\t</BlockNodes.Provider>\n\t);\n}\n\nfunction Items( {\n\tplaceholder,\n\trootClientId,\n\trenderAppender,\n\t__experimentalAppenderTagName,\n\t__experimentalLayout: layout = defaultLayout,\n} ) {\n\tfunction selector( select ) {\n\t\tconst {\n\t\t\tgetBlockOrder,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t} = select( blockEditorStore );\n\t\treturn {\n\t\t\tblockClientIds: getBlockOrder( rootClientId ),\n\t\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t\t\tmultiSelectedBlockClientIds: getMultiSelectedBlockClientIds(),\n\t\t\thasMultiSelection: hasMultiSelection(),\n\t\t};\n\t}\n\n\tconst {\n\t\tblockClientIds,\n\t\tselectedBlockClientId,\n\t\tmultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t} = useSelect( selector, [ rootClientId ] );\n\n\treturn (\n\t\t<LayoutProvider value={ layout }>\n\t\t\t{ blockClientIds.map( ( clientId, index ) => {\n\t\t\t\tconst isBlockInSelection = hasMultiSelection\n\t\t\t\t\t? multiSelectedBlockClientIds.includes( clientId )\n\t\t\t\t\t: selectedBlockClientId === clientId;\n\n\t\t\t\treturn (\n\t\t\t\t\t<AsyncModeProvider\n\t\t\t\t\t\tkey={ clientId }\n\t\t\t\t\t\tvalue={ ! isBlockInSelection }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockListBlock\n\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t// This prop is explicitely computed and passed down\n\t\t\t\t\t\t\t// to avoid being impacted by the async mode\n\t\t\t\t\t\t\t// otherwise there might be a small delay to trigger the animation.\n\t\t\t\t\t\t\tindex={ index }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</AsyncModeProvider>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t{ blockClientIds.length < 1 && placeholder }\n\t\t\t<BlockListAppender\n\t\t\t\ttagName={ __experimentalAppenderTagName }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\trenderAppender={ renderAppender }\n\t\t\t/>\n\t\t</LayoutProvider>\n\t);\n}\n\nexport function BlockListItems( props ) {\n\t// This component needs to always be synchronous as it's the one changing\n\t// the async mode depending on the block selection.\n\treturn (\n\t\t<AsyncModeProvider value={ false }>\n\t\t\t<Items { ...props } />\n\t\t</AsyncModeProvider>\n\t);\n}\n"]}