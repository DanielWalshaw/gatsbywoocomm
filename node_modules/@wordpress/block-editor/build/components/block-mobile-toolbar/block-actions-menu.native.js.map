{"version":3,"sources":["@wordpress/block-editor/src/components/block-mobile-toolbar/block-actions-menu.native.js"],"names":["BlockActionsMenu","blockTitle","canInsertBlockType","getBlocksByClientId","isEmptyDefaultBlock","isFirst","isLast","rootClientId","selectedBlockClientId","selectedBlockPossibleTransformations","createSuccessNotice","duplicateBlock","onMoveDown","onMoveUp","openGeneralSidebar","pasteBlock","removeBlocks","anchorNodeRef","isStackedHorizontally","onDelete","wrapBlockMover","wrapBlockSettings","clipboard","setCurrentClipboard","blockActionsMenuPickerRef","blockTransformationMenuPickerRef","moversOptions","keys","clipboardBlock","HTML","isPasteEnabled","name","actionTitle","backwardButtonTitle","backward","forwardButtonTitle","forward","allOptions","settings","id","label","value","onSelect","backwardButton","disabled","forwardButton","delete","separated","transformButton","current","presentPicker","copyButton","serializedBlock","cutButton","pasteButton","onPasteBlock","duplicateButton","options","length","onPickerSelect","selectedItem","find","item","onPickerPresent","disabledButtonIndices","map","option","index","filter","Boolean","accessibilityHint","Platform","OS","getAnchor","undefined","moreHorizontalMobile","hint","select","clientIds","blockEditorStore","getBlockIndex","getBlockRootClientId","getBlockOrder","getBlockName","getBlockTransformItems","getBlock","getSelectedBlockClientIds","normalizedClientIds","block","blockName","blockType","title","firstClientId","blockOrder","firstIndex","lastIndex","isDefaultBlock","isEmptyContent","attributes","content","isExactlyOneBlock","selectedBlock","currentIndex","dispatch","moveBlocksDown","moveBlocksUp","duplicateBlocks","insertBlock","replaceBlocks","getBlockSelectionEnd","noticesStore","canReplaceBlock","insertedBlock","innerBlocks","withInstanceId"],"mappings":";;;;;;;;;AA0BA;;;;AAvBA;;AACA;;AAIA;;AAMA;;AAQA;;AACA;;AACA;;AACA;;AAEA;;AAIA;;AACA;;AACA;;AAjCA;AACA;AACA;;AAGA;AACA;AACA;;AAqBA;AACA;AACA;AAKA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAyBlB;AAAA,MAvBNC,UAuBM,QAvBNA,UAuBM;AAAA,MAtBNC,kBAsBM,QAtBNA,kBAsBM;AAAA,MArBNC,mBAqBM,QArBNA,mBAqBM;AAAA,MApBNC,mBAoBM,QApBNA,mBAoBM;AAAA,MAnBNC,OAmBM,QAnBNA,OAmBM;AAAA,MAlBNC,MAkBM,QAlBNA,MAkBM;AAAA,MAjBNC,YAiBM,QAjBNA,YAiBM;AAAA,MAhBNC,qBAgBM,QAhBNA,qBAgBM;AAAA,MAfNC,oCAeM,QAfNA,oCAeM;AAAA,MAbNC,mBAaM,QAbNA,mBAaM;AAAA,MAZNC,cAYM,QAZNA,cAYM;AAAA,MAXNC,UAWM,QAXNA,UAWM;AAAA,MAVNC,QAUM,QAVNA,QAUM;AAAA,MATNC,kBASM,QATNA,kBASM;AAAA,MARNC,UAQM,QARNA,UAQM;AAAA,MAPNC,YAOM,QAPNA,YAOM;AAAA,MALNC,aAKM,QALNA,aAKM;AAAA,MAJNC,qBAIM,QAJNA,qBAIM;AAAA,MAHNC,QAGM,QAHNA,QAGM;AAAA,MAFNC,cAEM,QAFNA,cAEM;AAAA,MADNC,iBACM,QADNA,iBACM;;AAAA,kBACqC,uBAAU,+BAAV,CADrC;AAAA;AAAA,MACEC,SADF;AAAA,MACaC,mBADb;;AAEN,MAAMC,yBAAyB,GAAG,sBAAlC;AACA,MAAMC,gCAAgC,GAAG,sBAAzC;AACA,MAAMC,aAAa,GAAG;AAAEC,IAAAA,IAAI,EAAE,CAAE,MAAF,EAAU,aAAV;AAAR,GAAtB;AACA,MAAMC,cAAc,GAAGN,SAAS,IAAI,wBAAY;AAAEO,IAAAA,IAAI,EAAEP;AAAR,GAAZ,EAAmC,CAAnC,CAApC;AACA,MAAMQ,cAAc,GACnBF,cAAc,IACd1B,kBAAkB,CAAE0B,cAAc,CAACG,IAAjB,EAAuBxB,YAAvB,CAFnB;;AANM,wBAeF,sCAAgBW,qBAAhB,EAAuCQ,aAAvC,CAfE;AAAA,8CAWLM,WAXK;AAAA,MAYMC,mBAZN,yBAYJC,QAZI;AAAA,MAaKC,kBAbL,yBAaJC,OAbI;;AAiBN,MAAMC,UAAU,GAAG;AAClBC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,EAAE,EAAE,gBADK;AAETC,MAAAA,KAAK,EAAE,cAAI,gBAAJ,CAFE;AAGTC,MAAAA,KAAK,EAAE,gBAHE;AAITC,MAAAA,QAAQ,EAAE5B;AAJD,KADQ;AAOlB6B,IAAAA,cAAc,EAAE;AACfJ,MAAAA,EAAE,EAAE,sBADW;AAEfC,MAAAA,KAAK,EAAEP,mBAFQ;AAGfQ,MAAAA,KAAK,EAAE,sBAHQ;AAIfG,MAAAA,QAAQ,EAAEvC,OAJK;AAKfqC,MAAAA,QAAQ,EAAE7B;AALK,KAPE;AAclBgC,IAAAA,aAAa,EAAE;AACdN,MAAAA,EAAE,EAAE,qBADU;AAEdC,MAAAA,KAAK,EAAEL,kBAFO;AAGdM,MAAAA,KAAK,EAAE,qBAHO;AAIdG,MAAAA,QAAQ,EAAEtC,MAJI;AAKdoC,MAAAA,QAAQ,EAAE9B;AALI,KAdG;AAqBlBkC,IAAAA,MAAM,EAAE;AACPP,MAAAA,EAAE,EAAE,cADG;AAEPC,MAAAA,KAAK,EAAE,cAAI,cAAJ,CAFA;AAGPC,MAAAA,KAAK,EAAE,cAHA;AAIPM,MAAAA,SAAS,EAAE,IAJJ;AAKPH,MAAAA,QAAQ,EAAExC,mBALH;AAMPsC,MAAAA,QAAQ,EAAE,oBAAM;AACfvB,QAAAA,QAAQ;AACRT,QAAAA,mBAAmB,EAClB;AACA,sBAAI,eAAJ,CAFkB,CAAnB;AAIA;AAZM,KArBU;AAmClBsC,IAAAA,eAAe,EAAE;AAChBT,MAAAA,EAAE,EAAE,uBADY;AAEhBC,MAAAA,KAAK,EAAE,cAAI,kBAAJ,CAFS;AAGhBC,MAAAA,KAAK,EAAE,uBAHS;AAIhBC,MAAAA,QAAQ,EAAE,oBAAM;AACf,YAAKjB,gCAAgC,CAACwB,OAAtC,EAAgD;AAC/CxB,UAAAA,gCAAgC,CAACwB,OAAjC,CAAyCC,aAAzC;AACA;AACD;AARe,KAnCC;AA6ClBC,IAAAA,UAAU,EAAE;AACXZ,MAAAA,EAAE,EAAE,kBADO;AAEXC,MAAAA,KAAK,EAAE,cAAI,YAAJ,CAFI;AAGXC,MAAAA,KAAK,EAAE,kBAHI;AAIXC,MAAAA,QAAQ,EAAE,oBAAM;AACf,YAAMU,eAAe,GAAG,uBACvBjD,mBAAmB,CAAEK,qBAAF,CADI,CAAxB;AAGAe,QAAAA,mBAAmB,CAAE6B,eAAF,CAAnB;AACA,sCAAcA,eAAd;AACA1C,QAAAA,mBAAmB,EAClB;AACA,sBAAI,cAAJ,CAFkB,CAAnB;AAIA;AAdU,KA7CM;AA6DlB2C,IAAAA,SAAS,EAAE;AACVd,MAAAA,EAAE,EAAE,iBADM;AAEVC,MAAAA,KAAK,EAAE,cAAI,WAAJ,CAFG;AAGVC,MAAAA,KAAK,EAAE,iBAHG;AAIVC,MAAAA,QAAQ,EAAE,oBAAM;AACf,sCACC,uBAAWvC,mBAAmB,CAAEK,qBAAF,CAA9B,CADD;AAGAQ,QAAAA,YAAY,CAAER,qBAAF,CAAZ;AACAE,QAAAA,mBAAmB,EAClB;AACA,sBAAI,WAAJ,CAFkB,CAAnB;AAIA;AAbS,KA7DO;AA4ElB4C,IAAAA,WAAW,EAAE;AACZf,MAAAA,EAAE,EAAE,mBADQ;AAEZC,MAAAA,KAAK,EAAE,cAAI,mBAAJ,CAFK;AAGZC,MAAAA,KAAK,EAAE,mBAHK;AAIZC,MAAAA,QAAQ,EAAE,oBAAM;AACfa,QAAAA,YAAY;AACZ7C,QAAAA,mBAAmB,EAClB;AACA,sBAAI,cAAJ,CAFkB,CAAnB;AAIA;AAVW,KA5EK;AAwFlB8C,IAAAA,eAAe,EAAE;AAChBjB,MAAAA,EAAE,EAAE,uBADY;AAEhBC,MAAAA,KAAK,EAAE,cAAI,iBAAJ,CAFS;AAGhBC,MAAAA,KAAK,EAAE,uBAHS;AAIhBC,MAAAA,QAAQ,EAAE,oBAAM;AACf/B,QAAAA,cAAc;AACdD,QAAAA,mBAAmB,EAClB;AACA,sBAAI,kBAAJ,CAFkB,CAAnB;AAIA;AAVe;AAxFC,GAAnB;AAsGA,MAAM+C,OAAO,GAAG,qBAAS,CACxBrC,cAAc,IAAIiB,UAAU,CAACM,cADL,EAExBvB,cAAc,IAAIiB,UAAU,CAACQ,aAFL,EAGxBxB,iBAAiB,IAAIgB,UAAU,CAACC,QAHR,EAIxB7B,oCAAoC,CAACiD,MAArC,IACCrB,UAAU,CAACW,eALY,EAMxBX,UAAU,CAACc,UANa,EAOxBd,UAAU,CAACgB,SAPa,EAQxBvB,cAAc,IAAIO,UAAU,CAACiB,WARL,EASxBjB,UAAU,CAACmB,eATa,EAUxBnB,UAAU,CAACS,MAVa,CAAT,CAAhB;;AAaA,WAASS,YAAT,GAAwB;AACvB,QAAK,CAAEjC,SAAP,EAAmB;AAClB;AACA;;AAEDP,IAAAA,UAAU,CAAE,wBAAY;AAAEc,MAAAA,IAAI,EAAEP;AAAR,KAAZ,EAAmC,CAAnC,CAAF,CAAV;AACA;;AAED,WAASqC,cAAT,CAAyBlB,KAAzB,EAAiC;AAChC,QAAMmB,YAAY,GAAGH,OAAO,CAACI,IAAR,CAAc,UAAEC,IAAF;AAAA,aAAYA,IAAI,CAACrB,KAAL,KAAeA,KAA3B;AAAA,KAAd,CAArB;AACAmB,IAAAA,YAAY,CAAClB,QAAb;AACA;;AAED,WAASqB,eAAT,GAA2B;AAC1B,QAAKvC,yBAAyB,CAACyB,OAA/B,EAAyC;AACxCzB,MAAAA,yBAAyB,CAACyB,OAA1B,CAAkCC,aAAlC;AACA;AACD;;AAED,MAAMc,qBAAqB,GAAGP,OAAO,CACnCQ,GAD4B,CACvB,UAAEC,MAAF,EAAUC,KAAV;AAAA,WAAqBD,MAAM,CAACtB,QAAP,IAAmBuB,KAAK,GAAG,CAAhD;AAAA,GADuB,EAE5BC,MAF4B,CAEpBC,OAFoB,CAA9B;AAIA,MAAMC,iBAAiB,GACtBC,sBAASC,EAAT,KAAgB,KAAhB,GACG,cAAI,wDAAJ,CADH,GAEG,cAAI,wDAAJ,CAHJ;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WACjBxD,aAAa,GAAG,iCAAgBA,aAAhB,CAAH,GAAqCyD,SADjC;AAAA,GAAlB;;AAGA,SACC,qDACC,4BAAC,yBAAD;AACC,IAAA,KAAK,EAAG,cAAI,yBAAJ,CADT;AAEC,IAAA,OAAO,EAAGX,eAFX;AAGC,IAAA,IAAI,EAAGY,2BAHR;AAIC,IAAA,UAAU,EAAG;AACZC,MAAAA,IAAI,EAAEN;AADM;AAJd,IADD,EASC,4BAAC,kBAAD;AACC,IAAA,GAAG,EAAG9C,yBADP;AAEC,IAAA,OAAO,EAAGiC,OAFX;AAGC,IAAA,QAAQ,EAAGE,cAHZ;AAIC,IAAA,sBAAsB,EAAGF,OAAO,CAACC,MAJlC;AAKC,IAAA,qBAAqB,EAAGM,qBALzB;AAMC,IAAA,gBAAgB,EAAGO,sBAASC,EAAT,KAAgB,KANpC;AAOC,IAAA,SAAS,EAAG,IAPb;AAQC,IAAA,SAAS,EAAGC,SARb,CASC;AATD;AAUC,IAAA,KAAK,EAAG,mBAAS,cAAI,kBAAJ,CAAT,EAAmCxE,UAAnC;AAVT,IATD,EAqBC,4BAAC,iCAAD;AACC,IAAA,aAAa,EAAGgB,aADjB;AAEC,IAAA,UAAU,EAAGhB,UAFd;AAGC,IAAA,SAAS,EAAGwB,gCAHb;AAIC,IAAA,uBAAuB,EAAGhB,oCAJ3B;AAKC,IAAA,aAAa,EAAGN,mBAAmB,CAAEK,qBAAF,CALpC;AAMC,IAAA,qBAAqB,EAAGA;AANzB,IArBD,CADD;AAgCA,CA5ND;;eA8Ne,sBACd,sBAAY,UAAEqE,MAAF,SAA6B;AAAA,MAAjBC,SAAiB,SAAjBA,SAAiB;;AAAA,gBAWpCD,MAAM,CAAEE,YAAF,CAX8B;AAAA,MAEvCC,aAFuC,WAEvCA,aAFuC;AAAA,MAGvCC,oBAHuC,WAGvCA,oBAHuC;AAAA,MAIvCC,aAJuC,WAIvCA,aAJuC;AAAA,MAKvCC,YALuC,WAKvCA,YALuC;AAAA,MAMvCC,sBANuC,WAMvCA,sBANuC;AAAA,MAOvCC,QAPuC,WAOvCA,QAPuC;AAAA,MAQvClF,mBARuC,WAQvCA,mBARuC;AAAA,MASvCmF,yBATuC,WASvCA,yBATuC;AAAA,MAUvCpF,kBAVuC,WAUvCA,kBAVuC;;AAYxC,MAAMqF,mBAAmB,GAAG,uBAAWT,SAAX,CAA5B;AACA,MAAMU,KAAK,GAAGH,QAAQ,CAAEE,mBAAF,CAAtB;AACA,MAAME,SAAS,GAAGN,YAAY,CAAEI,mBAAF,CAA9B;AACA,MAAMG,SAAS,GAAG,0BAAcD,SAAd,CAAlB;AACA,MAAMxF,UAAU,GAAGyF,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEC,KAA9B;AACA,MAAMC,aAAa,GAAG,mBAAOL,mBAAP,CAAtB;AACA,MAAMhF,YAAY,GAAG0E,oBAAoB,CAAEW,aAAF,CAAzC;AACA,MAAMC,UAAU,GAAGX,aAAa,CAAE3E,YAAF,CAAhC;AAEA,MAAMuF,UAAU,GAAGd,aAAa,CAAEY,aAAF,EAAiBrF,YAAjB,CAAhC;AACA,MAAMwF,SAAS,GAAGf,aAAa,CAC9B,kBAAMO,mBAAN,CAD8B,EAE9BhF,YAF8B,CAA/B;AAKA,MAAMyF,cAAc,GAAGP,SAAS,KAAK,kCAArC;AACA,MAAMQ,cAAc,GAAG,CAAAT,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEU,UAAP,CAAkBC,OAAlB,MAA8B,EAArD;AACA,MAAMC,iBAAiB,GAAGP,UAAU,CAACnC,MAAX,KAAsB,CAAhD;AACA,MAAMtD,mBAAmB,GACxBgG,iBAAiB,IAAIJ,cAArB,IAAuCC,cADxC;AAGA,MAAMzF,qBAAqB,GAAG,mBAAO8E,yBAAyB,EAAhC,CAA9B;AACA,MAAMe,aAAa,GAAG7F,qBAAqB,GACxC,mBAAOL,mBAAmB,CAAEK,qBAAF,CAA1B,CADwC,GAExCkE,SAFH;AAGA,MAAMjE,oCAAoC,GAAG4F,aAAa,GACvDjB,sBAAsB,CAAE,CAAEiB,aAAF,CAAF,EAAqB9F,YAArB,CADiC,GAEvD,EAFH;AAIA,SAAO;AACNN,IAAAA,UAAU,EAAVA,UADM;AAENC,IAAAA,kBAAkB,EAAlBA,kBAFM;AAGNoG,IAAAA,YAAY,EAAER,UAHR;AAIN3F,IAAAA,mBAAmB,EAAnBA,mBAJM;AAKNC,IAAAA,mBAAmB,EAAnBA,mBALM;AAMNC,IAAAA,OAAO,EAAEyF,UAAU,KAAK,CANlB;AAONxF,IAAAA,MAAM,EAAEyF,SAAS,KAAKF,UAAU,CAACnC,MAAX,GAAoB,CAPpC;AAQNnD,IAAAA,YAAY,EAAZA,YARM;AASNC,IAAAA,qBAAqB,EAArBA,qBATM;AAUNC,IAAAA,oCAAoC,EAApCA;AAVM,GAAP;AAYA,CArDD,CADc,EAuDd,wBACC,UAAE8F,QAAF,gBAAuE;AAAA,MAAzDzB,SAAyD,SAAzDA,SAAyD;AAAA,MAA9CvE,YAA8C,SAA9CA,YAA8C;AAAA,MAAhC+F,YAAgC,SAAhCA,YAAgC;AAAA,MAAdzB,MAAc,SAAdA,MAAc;;AAAA,kBAQlE0B,QAAQ,CAAExB,YAAF,CAR0D;AAAA,MAErEyB,cAFqE,aAErEA,cAFqE;AAAA,MAGrEC,YAHqE,aAGrEA,YAHqE;AAAA,MAIrEC,eAJqE,aAIrEA,eAJqE;AAAA,MAKrE1F,YALqE,aAKrEA,YALqE;AAAA,MAMrE2F,WANqE,aAMrEA,WANqE;AAAA,MAOrEC,aAPqE,aAOrEA,aAPqE;;AAAA,mBASvCL,QAAQ,CAAE,gBAAF,CAT+B;AAAA,MAS9DzF,mBAT8D,cAS9DA,kBAT8D;;AAAA,iBAU3B+D,MAAM,CAChDE,YADgD,CAVqB;AAAA,MAU9D8B,oBAV8D,YAU9DA,oBAV8D;AAAA,MAUxCxB,QAVwC,YAUxCA,QAVwC;;AAAA,mBAatCkB,QAAQ,CAAEO,cAAF,CAb8B;AAAA,MAa9DpG,mBAb8D,cAa9DA,mBAb8D;;AAetE,SAAO;AACNA,IAAAA,mBAAmB,EAAnBA,mBADM;AAENC,IAAAA,cAFM,4BAEW;AAChB,aAAO+F,eAAe,CAAE5B,SAAF,CAAtB;AACA,KAJK;AAKNlE,IAAAA,UAAU,EAAE,qBAAS4F,cAAT,EAAyB1B,SAAzB,EAAoCvE,YAApC,CALN;AAMNM,IAAAA,QAAQ,EAAE,qBAAS4F,YAAT,EAAuB3B,SAAvB,EAAkCvE,YAAlC,CANJ;AAONO,IAAAA,kBAAkB,EAAE;AAAA,aACnBA,mBAAkB,CAAE,iBAAF,CADC;AAAA,KAPd;AASNC,IAAAA,UAAU,EAAE,oBAAEa,cAAF,EAAsB;AACjC,UAAMmF,eAAe,GAAG,sCACvB1B,QAAQ,CAAEwB,oBAAoB,EAAtB,CADe,CAAxB;;AAIA,UAAK,CAAEE,eAAP,EAAyB;AACxB,YAAMC,aAAa,GAAG,yBACrBpF,cAAc,CAACG,IADM,EAErBH,cAAc,CAACsE,UAFM,EAGrBtE,cAAc,CAACqF,WAHM,CAAtB;AAMAN,QAAAA,WAAW,CACVK,aADU,EAEVV,YAAY,GAAG,CAFL,EAGV/F,YAHU,CAAX;AAKA,OAZD,MAYO;AACNqG,QAAAA,aAAa,CAAE9B,SAAF,EAAalD,cAAb,CAAb;AACA;AACD,KA7BK;AA8BNZ,IAAAA,YAAY,EAAZA;AA9BM,GAAP;AAgCA,CAhDF,CAvDc,EAyGdkG,uBAzGc,EA0GZlH,gBA1GY,C","sourcesContent":["/**\n * External dependencies\n */\nimport { Platform, findNodeHandle } from 'react-native';\nimport { partial, first, castArray, last, compact } from 'lodash';\n/**\n * WordPress dependencies\n */\nimport {\n\tgetClipboard,\n\tsetClipboard,\n\tToolbarButton,\n\tPicker,\n} from '@wordpress/components';\nimport {\n\tgetBlockType,\n\tgetDefaultBlockName,\n\tserialize,\n\trawHandler,\n\tcreateBlock,\n\tisUnmodifiedDefaultBlock,\n} from '@wordpress/blocks';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { moreHorizontalMobile } from '@wordpress/icons';\nimport { useRef, useState } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\n/**\n * Internal dependencies\n */\nimport { getMoversSetup } from '../block-mover/mover-description';\nimport { store as blockEditorStore } from '../../store';\nimport BlockTransformationsMenu from '../block-switcher/block-transformations-menu';\n\nconst BlockActionsMenu = ( {\n\t// Select\n\tblockTitle,\n\tcanInsertBlockType,\n\tgetBlocksByClientId,\n\tisEmptyDefaultBlock,\n\tisFirst,\n\tisLast,\n\trootClientId,\n\tselectedBlockClientId,\n\tselectedBlockPossibleTransformations,\n\t// Dispatch\n\tcreateSuccessNotice,\n\tduplicateBlock,\n\tonMoveDown,\n\tonMoveUp,\n\topenGeneralSidebar,\n\tpasteBlock,\n\tremoveBlocks,\n\t// Passed in\n\tanchorNodeRef,\n\tisStackedHorizontally,\n\tonDelete,\n\twrapBlockMover,\n\twrapBlockSettings,\n} ) => {\n\tconst [ clipboard, setCurrentClipboard ] = useState( getClipboard() );\n\tconst blockActionsMenuPickerRef = useRef();\n\tconst blockTransformationMenuPickerRef = useRef();\n\tconst moversOptions = { keys: [ 'icon', 'actionTitle' ] };\n\tconst clipboardBlock = clipboard && rawHandler( { HTML: clipboard } )[ 0 ];\n\tconst isPasteEnabled =\n\t\tclipboardBlock &&\n\t\tcanInsertBlockType( clipboardBlock.name, rootClientId );\n\n\tconst {\n\t\tactionTitle: {\n\t\t\tbackward: backwardButtonTitle,\n\t\t\tforward: forwardButtonTitle,\n\t\t},\n\t} = getMoversSetup( isStackedHorizontally, moversOptions );\n\n\tconst allOptions = {\n\t\tsettings: {\n\t\t\tid: 'settingsOption',\n\t\t\tlabel: __( 'Block settings' ),\n\t\t\tvalue: 'settingsOption',\n\t\t\tonSelect: openGeneralSidebar,\n\t\t},\n\t\tbackwardButton: {\n\t\t\tid: 'backwardButtonOption',\n\t\t\tlabel: backwardButtonTitle,\n\t\t\tvalue: 'backwardButtonOption',\n\t\t\tdisabled: isFirst,\n\t\t\tonSelect: onMoveUp,\n\t\t},\n\t\tforwardButton: {\n\t\t\tid: 'forwardButtonOption',\n\t\t\tlabel: forwardButtonTitle,\n\t\t\tvalue: 'forwardButtonOption',\n\t\t\tdisabled: isLast,\n\t\t\tonSelect: onMoveDown,\n\t\t},\n\t\tdelete: {\n\t\t\tid: 'deleteOption',\n\t\t\tlabel: __( 'Remove block' ),\n\t\t\tvalue: 'deleteOption',\n\t\t\tseparated: true,\n\t\t\tdisabled: isEmptyDefaultBlock,\n\t\t\tonSelect: () => {\n\t\t\t\tonDelete();\n\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t// translators: displayed right after the block is removed.\n\t\t\t\t\t__( 'Block removed' )\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\ttransformButton: {\n\t\t\tid: 'transformButtonOption',\n\t\t\tlabel: __( 'Transform block…' ),\n\t\t\tvalue: 'transformButtonOption',\n\t\t\tonSelect: () => {\n\t\t\t\tif ( blockTransformationMenuPickerRef.current ) {\n\t\t\t\t\tblockTransformationMenuPickerRef.current.presentPicker();\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tcopyButton: {\n\t\t\tid: 'copyButtonOption',\n\t\t\tlabel: __( 'Copy block' ),\n\t\t\tvalue: 'copyButtonOption',\n\t\t\tonSelect: () => {\n\t\t\t\tconst serializedBlock = serialize(\n\t\t\t\t\tgetBlocksByClientId( selectedBlockClientId )\n\t\t\t\t);\n\t\t\t\tsetCurrentClipboard( serializedBlock );\n\t\t\t\tsetClipboard( serializedBlock );\n\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t// translators: displayed right after the block is copied.\n\t\t\t\t\t__( 'Block copied' )\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\tcutButton: {\n\t\t\tid: 'cutButtonOption',\n\t\t\tlabel: __( 'Cut block' ),\n\t\t\tvalue: 'cutButtonOption',\n\t\t\tonSelect: () => {\n\t\t\t\tsetClipboard(\n\t\t\t\t\tserialize( getBlocksByClientId( selectedBlockClientId ) )\n\t\t\t\t);\n\t\t\t\tremoveBlocks( selectedBlockClientId );\n\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t// translators: displayed right after the block is cut.\n\t\t\t\t\t__( 'Block cut' )\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\tpasteButton: {\n\t\t\tid: 'pasteButtonOption',\n\t\t\tlabel: __( 'Paste block after' ),\n\t\t\tvalue: 'pasteButtonOption',\n\t\t\tonSelect: () => {\n\t\t\t\tonPasteBlock();\n\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t// translators: displayed right after the block is pasted.\n\t\t\t\t\t__( 'Block pasted' )\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\tduplicateButton: {\n\t\t\tid: 'duplicateButtonOption',\n\t\t\tlabel: __( 'Duplicate block' ),\n\t\t\tvalue: 'duplicateButtonOption',\n\t\t\tonSelect: () => {\n\t\t\t\tduplicateBlock();\n\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t// translators: displayed right after the block is duplicated.\n\t\t\t\t\t__( 'Block duplicated' )\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t};\n\n\tconst options = compact( [\n\t\twrapBlockMover && allOptions.backwardButton,\n\t\twrapBlockMover && allOptions.forwardButton,\n\t\twrapBlockSettings && allOptions.settings,\n\t\tselectedBlockPossibleTransformations.length &&\n\t\t\tallOptions.transformButton,\n\t\tallOptions.copyButton,\n\t\tallOptions.cutButton,\n\t\tisPasteEnabled && allOptions.pasteButton,\n\t\tallOptions.duplicateButton,\n\t\tallOptions.delete,\n\t] );\n\n\tfunction onPasteBlock() {\n\t\tif ( ! clipboard ) {\n\t\t\treturn;\n\t\t}\n\n\t\tpasteBlock( rawHandler( { HTML: clipboard } )[ 0 ] );\n\t}\n\n\tfunction onPickerSelect( value ) {\n\t\tconst selectedItem = options.find( ( item ) => item.value === value );\n\t\tselectedItem.onSelect();\n\t}\n\n\tfunction onPickerPresent() {\n\t\tif ( blockActionsMenuPickerRef.current ) {\n\t\t\tblockActionsMenuPickerRef.current.presentPicker();\n\t\t}\n\t}\n\n\tconst disabledButtonIndices = options\n\t\t.map( ( option, index ) => option.disabled && index + 1 )\n\t\t.filter( Boolean );\n\n\tconst accessibilityHint =\n\t\tPlatform.OS === 'ios'\n\t\t\t? __( 'Double tap to open Action Sheet with available options' )\n\t\t\t: __( 'Double tap to open Bottom Sheet with available options' );\n\n\tconst getAnchor = () =>\n\t\tanchorNodeRef ? findNodeHandle( anchorNodeRef ) : undefined;\n\n\treturn (\n\t\t<>\n\t\t\t<ToolbarButton\n\t\t\t\ttitle={ __( 'Open Block Actions Menu' ) }\n\t\t\t\tonClick={ onPickerPresent }\n\t\t\t\ticon={ moreHorizontalMobile }\n\t\t\t\textraProps={ {\n\t\t\t\t\thint: accessibilityHint,\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t<Picker\n\t\t\t\tref={ blockActionsMenuPickerRef }\n\t\t\t\toptions={ options }\n\t\t\t\tonChange={ onPickerSelect }\n\t\t\t\tdestructiveButtonIndex={ options.length }\n\t\t\t\tdisabledButtonIndices={ disabledButtonIndices }\n\t\t\t\thideCancelButton={ Platform.OS !== 'ios' }\n\t\t\t\tleftAlign={ true }\n\t\t\t\tgetAnchor={ getAnchor }\n\t\t\t\t// translators: %s: block title e.g: \"Paragraph\".\n\t\t\t\ttitle={ sprintf( __( '%s block options' ), blockTitle ) }\n\t\t\t/>\n\t\t\t<BlockTransformationsMenu\n\t\t\t\tanchorNodeRef={ anchorNodeRef }\n\t\t\t\tblockTitle={ blockTitle }\n\t\t\t\tpickerRef={ blockTransformationMenuPickerRef }\n\t\t\t\tpossibleTransformations={ selectedBlockPossibleTransformations }\n\t\t\t\tselectedBlock={ getBlocksByClientId( selectedBlockClientId ) }\n\t\t\t\tselectedBlockClientId={ selectedBlockClientId }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default compose(\n\twithSelect( ( select, { clientIds } ) => {\n\t\tconst {\n\t\t\tgetBlockIndex,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockOrder,\n\t\t\tgetBlockName,\n\t\t\tgetBlockTransformItems,\n\t\t\tgetBlock,\n\t\t\tgetBlocksByClientId,\n\t\t\tgetSelectedBlockClientIds,\n\t\t\tcanInsertBlockType,\n\t\t} = select( blockEditorStore );\n\t\tconst normalizedClientIds = castArray( clientIds );\n\t\tconst block = getBlock( normalizedClientIds );\n\t\tconst blockName = getBlockName( normalizedClientIds );\n\t\tconst blockType = getBlockType( blockName );\n\t\tconst blockTitle = blockType?.title;\n\t\tconst firstClientId = first( normalizedClientIds );\n\t\tconst rootClientId = getBlockRootClientId( firstClientId );\n\t\tconst blockOrder = getBlockOrder( rootClientId );\n\n\t\tconst firstIndex = getBlockIndex( firstClientId, rootClientId );\n\t\tconst lastIndex = getBlockIndex(\n\t\t\tlast( normalizedClientIds ),\n\t\t\trootClientId\n\t\t);\n\n\t\tconst isDefaultBlock = blockName === getDefaultBlockName();\n\t\tconst isEmptyContent = block?.attributes.content === '';\n\t\tconst isExactlyOneBlock = blockOrder.length === 1;\n\t\tconst isEmptyDefaultBlock =\n\t\t\tisExactlyOneBlock && isDefaultBlock && isEmptyContent;\n\n\t\tconst selectedBlockClientId = first( getSelectedBlockClientIds() );\n\t\tconst selectedBlock = selectedBlockClientId\n\t\t\t? first( getBlocksByClientId( selectedBlockClientId ) )\n\t\t\t: undefined;\n\t\tconst selectedBlockPossibleTransformations = selectedBlock\n\t\t\t? getBlockTransformItems( [ selectedBlock ], rootClientId )\n\t\t\t: [];\n\n\t\treturn {\n\t\t\tblockTitle,\n\t\t\tcanInsertBlockType,\n\t\t\tcurrentIndex: firstIndex,\n\t\t\tgetBlocksByClientId,\n\t\t\tisEmptyDefaultBlock,\n\t\t\tisFirst: firstIndex === 0,\n\t\t\tisLast: lastIndex === blockOrder.length - 1,\n\t\t\trootClientId,\n\t\t\tselectedBlockClientId,\n\t\t\tselectedBlockPossibleTransformations,\n\t\t};\n\t} ),\n\twithDispatch(\n\t\t( dispatch, { clientIds, rootClientId, currentIndex }, { select } ) => {\n\t\t\tconst {\n\t\t\t\tmoveBlocksDown,\n\t\t\t\tmoveBlocksUp,\n\t\t\t\tduplicateBlocks,\n\t\t\t\tremoveBlocks,\n\t\t\t\tinsertBlock,\n\t\t\t\treplaceBlocks,\n\t\t\t} = dispatch( blockEditorStore );\n\t\t\tconst { openGeneralSidebar } = dispatch( 'core/edit-post' );\n\t\t\tconst { getBlockSelectionEnd, getBlock } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst { createSuccessNotice } = dispatch( noticesStore );\n\n\t\t\treturn {\n\t\t\t\tcreateSuccessNotice,\n\t\t\t\tduplicateBlock() {\n\t\t\t\t\treturn duplicateBlocks( clientIds );\n\t\t\t\t},\n\t\t\t\tonMoveDown: partial( moveBlocksDown, clientIds, rootClientId ),\n\t\t\t\tonMoveUp: partial( moveBlocksUp, clientIds, rootClientId ),\n\t\t\t\topenGeneralSidebar: () =>\n\t\t\t\t\topenGeneralSidebar( 'edit-post/block' ),\n\t\t\t\tpasteBlock: ( clipboardBlock ) => {\n\t\t\t\t\tconst canReplaceBlock = isUnmodifiedDefaultBlock(\n\t\t\t\t\t\tgetBlock( getBlockSelectionEnd() )\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( ! canReplaceBlock ) {\n\t\t\t\t\t\tconst insertedBlock = createBlock(\n\t\t\t\t\t\t\tclipboardBlock.name,\n\t\t\t\t\t\t\tclipboardBlock.attributes,\n\t\t\t\t\t\t\tclipboardBlock.innerBlocks\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tinsertBlock(\n\t\t\t\t\t\t\tinsertedBlock,\n\t\t\t\t\t\t\tcurrentIndex + 1,\n\t\t\t\t\t\t\trootClientId\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treplaceBlocks( clientIds, clipboardBlock );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tremoveBlocks,\n\t\t\t};\n\t\t}\n\t),\n\twithInstanceId\n)( BlockActionsMenu );\n"]}