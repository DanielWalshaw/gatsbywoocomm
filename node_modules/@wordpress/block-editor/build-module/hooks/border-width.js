import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { createElement } from "@wordpress/element";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * WordPress dependencies
 */
import { RangeControl } from '@wordpress/components';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import { cleanEmptyObject } from './utils';
var MIN_BORDER_WIDTH = 0;
var MAX_BORDER_WIDTH = 50;
/**
 * Inspector control for configuring border width property.
 *
 * @param  {Object} props  Block properties.
 * @return {WPElement}     Border width edit element.
 */

export var BorderWidthEdit = function BorderWidthEdit(props) {
  var _style$border;

  var style = props.attributes.style,
      setAttributes = props.setAttributes;

  var onChange = function onChange(newWidth) {
    var newStyle = _objectSpread(_objectSpread({}, style), {}, {
      border: _objectSpread(_objectSpread({}, style === null || style === void 0 ? void 0 : style.border), {}, {
        width: newWidth
      })
    });

    setAttributes({
      style: cleanEmptyObject(newStyle)
    });
  };

  return createElement(RangeControl, {
    value: style === null || style === void 0 ? void 0 : (_style$border = style.border) === null || _style$border === void 0 ? void 0 : _style$border.width,
    label: __('Border width'),
    min: MIN_BORDER_WIDTH,
    max: MAX_BORDER_WIDTH,
    initialPosition: 0,
    allowReset: true,
    onChange: onChange
  });
};
//# sourceMappingURL=border-width.js.map