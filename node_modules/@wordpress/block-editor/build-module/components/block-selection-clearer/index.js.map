{"version":3,"sources":["@wordpress/block-editor/src/components/block-selection-clearer/index.js"],"names":["useSelect","useDispatch","useRefEffect","store","blockEditorStore","useBlockSelectionClearer","onlySelfClicks","hasSelection","select","hasSelectedBlock","hasMultiSelection","clearSelectedBlock","node","onMouseDown","event","target","closest","addEventListener","removeEventListener","BlockSelectionClearer","props"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,OAAO,SAASC,wBAAT,GAA4D;AAAA,MAAzBC,cAAyB,uEAAR,KAAQ;AAClE,MAAMC,YAAY,GAAGP,SAAS,CAAE,UAAEQ,MAAF,EAAc;AAAA,kBACGA,MAAM,CACrDJ,gBADqD,CADT;AAAA,QACrCK,gBADqC,WACrCA,gBADqC;AAAA,QACnBC,iBADmB,WACnBA,iBADmB;;AAK7C,WAAOD,gBAAgB,MAAMC,iBAAiB,EAA9C;AACA,GAN6B,CAA9B;;AADkE,qBAQnCT,WAAW,CAAEG,gBAAF,CARwB;AAAA,MAQ1DO,kBAR0D,gBAQ1DA,kBAR0D;;AAUlE,SAAOT,YAAY,CAClB,UAAEU,IAAF,EAAY;AACX,QAAK,CAAEL,YAAP,EAAsB;AACrB;AACA;;AAED,aAASM,WAAT,CAAsBC,KAAtB,EAA8B;AAC7B;AACA,UACCA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAsB,WAAtB,KACEV,cAAc,IAAIQ,KAAK,CAACC,MAAN,KAAiBH,IAFtC,EAGE;AACD;AACA;;AAEDD,MAAAA,kBAAkB;AAClB;;AAEDC,IAAAA,IAAI,CAACK,gBAAL,CAAuB,WAAvB,EAAoCJ,WAApC;AAEA,WAAO,YAAM;AACZD,MAAAA,IAAI,CAACM,mBAAL,CAA0B,WAA1B,EAAuCL,WAAvC;AACA,KAFD;AAGA,GAvBiB,EAwBlB,CAAEN,YAAF,EAAgBI,kBAAhB,CAxBkB,CAAnB;AA0BA;AAED,eAAe,SAASQ,qBAAT,CAAgCC,KAAhC,EAAwC;AACtD,SAAO;AAAK,IAAA,GAAG,EAAGf,wBAAwB;AAAnC,KAA6Ce,KAA7C,EAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport function useBlockSelectionClearer( onlySelfClicks = false ) {\n\tconst hasSelection = useSelect( ( select ) => {\n\t\tconst { hasSelectedBlock, hasMultiSelection } = select(\n\t\t\tblockEditorStore\n\t\t);\n\n\t\treturn hasSelectedBlock() || hasMultiSelection();\n\t} );\n\tconst { clearSelectedBlock } = useDispatch( blockEditorStore );\n\n\treturn useRefEffect(\n\t\t( node ) => {\n\t\t\tif ( ! hasSelection ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunction onMouseDown( event ) {\n\t\t\t\t// Only handle clicks on the canvas, not the content.\n\t\t\t\tif (\n\t\t\t\t\tevent.target.closest( '.wp-block' ) ||\n\t\t\t\t\t( onlySelfClicks && event.target !== node )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tclearSelectedBlock();\n\t\t\t}\n\n\t\t\tnode.addEventListener( 'mousedown', onMouseDown );\n\n\t\t\treturn () => {\n\t\t\t\tnode.removeEventListener( 'mousedown', onMouseDown );\n\t\t\t};\n\t\t},\n\t\t[ hasSelection, clearSelectedBlock ]\n\t);\n}\n\nexport default function BlockSelectionClearer( props ) {\n\treturn <div ref={ useBlockSelectionClearer() } { ...props } />;\n}\n"]}