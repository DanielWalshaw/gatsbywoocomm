{"version":3,"sources":["@wordpress/block-editor/src/components/block-switcher/block-transformations-menu.native.js"],"names":["findNodeHandle","Platform","__","sprintf","switchToBlockType","Picker","useDispatch","store","noticesStore","blockEditorStore","BlockTransformationsMenu","anchorNodeRef","blockTitle","pickerRef","possibleTransformations","selectedBlock","selectedBlockClientId","replaceBlocks","createSuccessNotice","pickerOptions","selectedBlockName","name","blocksThatSplitWhenTransformed","map","item","label","length","includes","id","title","value","getAnchor","undefined","onPickerSelect","selectedItem","find","successNotice","OS"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { findNodeHandle, Platform } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { switchToBlockType } from '@wordpress/blocks';\nimport { Picker } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nconst BlockTransformationsMenu = ( {\n\tanchorNodeRef,\n\tblockTitle,\n\tpickerRef,\n\tpossibleTransformations,\n\tselectedBlock,\n\tselectedBlockClientId,\n} ) => {\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\n\tconst pickerOptions = () => {\n\t\tconst selectedBlockName = selectedBlock?.name ?? '';\n\t\tconst blocksThatSplitWhenTransformed = {\n\t\t\t'core/list': [ 'core/paragraph', 'core/heading' ],\n\t\t\t'core/quote': [ 'core/paragraph' ],\n\t\t\t'core/pullquote': [ 'core/paragraph' ],\n\t\t};\n\n\t\treturn possibleTransformations.map( ( item ) => {\n\t\t\tconst label =\n\t\t\t\tselectedBlockName.length &&\n\t\t\t\tblocksThatSplitWhenTransformed[ selectedBlockName ] &&\n\t\t\t\tblocksThatSplitWhenTransformed[ selectedBlockName ].includes(\n\t\t\t\t\titem.id\n\t\t\t\t)\n\t\t\t\t\t? `${ item.title } blocks`\n\t\t\t\t\t: item.title;\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\tvalue: item.id,\n\t\t\t};\n\t\t} );\n\t};\n\n\tconst getAnchor = () =>\n\t\tanchorNodeRef ? findNodeHandle( anchorNodeRef ) : undefined;\n\n\tfunction onPickerSelect( value ) {\n\t\treplaceBlocks(\n\t\t\tselectedBlockClientId,\n\t\t\tswitchToBlockType( selectedBlock, value )\n\t\t);\n\n\t\tconst selectedItem = pickerOptions().find(\n\t\t\t( item ) => item.value === value\n\t\t);\n\t\tconst successNotice = sprintf(\n\t\t\t/* translators: 1: From block title, e.g. Paragraph. 2: To block title, e.g. Header. */\n\t\t\t__( '%1$s transformed to %2$s' ),\n\t\t\tblockTitle,\n\t\t\tselectedItem.label\n\t\t);\n\t\tcreateSuccessNotice( successNotice );\n\t}\n\n\treturn (\n\t\t<Picker\n\t\t\tref={ pickerRef }\n\t\t\toptions={ pickerOptions() }\n\t\t\tonChange={ onPickerSelect }\n\t\t\thideCancelButton={ Platform.OS !== 'ios' }\n\t\t\tleftAlign={ true }\n\t\t\tgetAnchor={ getAnchor }\n\t\t\t// translators: %s: block title e.g: \"Paragraph\".\n\t\t\ttitle={ sprintf( __( 'Transform %s to' ), blockTitle ) }\n\t\t/>\n\t);\n};\n\nexport default BlockTransformationsMenu;\n"]}