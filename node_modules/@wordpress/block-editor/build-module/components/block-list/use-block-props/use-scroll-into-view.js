/**
 * External dependencies
 */
import scrollIntoView from 'dom-scroll-into-view';
/**
 * WordPress dependencies
 */

/**
 * WordPress dependencies
 */

import { useEffect, useRef } from '@wordpress/element';
import { useSelect } from '@wordpress/data';
import { getScrollContainer } from '@wordpress/dom';
/**
 * Internal dependencies
 */

import { store as blockEditorStore } from '../../../store';
export function useScrollIntoView(clientId) {
  var ref = useRef();
  var isSelectionEnd = useSelect(function (select) {
    var _select = select(blockEditorStore),
        isBlockSelected = _select.isBlockSelected,
        getBlockSelectionEnd = _select.getBlockSelectionEnd;

    return isBlockSelected(clientId) || getBlockSelectionEnd() === clientId;
  }, [clientId]);
  useEffect(function () {
    if (!isSelectionEnd) {
      return;
    }

    var extentNode = ref.current; // If the block is focused, the browser will already have scrolled into
    // view if necessary.

    if (extentNode.contains(extentNode.ownerDocument.activeElement)) {
      return;
    }

    var scrollContainer = getScrollContainer(extentNode); // If there's no scroll container, it follows that there's no scrollbar
    // and thus there's no need to try to scroll into view.

    if (!scrollContainer) {
      return;
    }

    scrollIntoView(extentNode, scrollContainer, {
      onlyScrollIfNeeded: true
    });
  }, [isSelectionEnd]);
  return ref;
}
//# sourceMappingURL=use-scroll-into-view.js.map