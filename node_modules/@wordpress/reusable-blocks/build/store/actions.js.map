{"version":3,"sources":["@wordpress/reusable-blocks/src/store/actions.js"],"names":["__experimentalConvertBlockToStatic","__experimentalConvertBlocksToReusable","__experimentalDeleteReusableBlock","clientId","clientIds","title","id","__experimentalSetEditingReusableBlock","isEditing","type"],"mappings":";;;;;;;;;;;;;;AAGA;;qDAWiBA,kC;sDAUAC,qC;sDASAC,iC;;AAxBjB;AACA;AACA;AACA;AACA;AACO,SAAUF,kCAAV,CAA8CG,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAM,oCAAsBA,QAAtB,CAAN;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAUF,qCAAV,CAAiDG,SAAjD,EAA4DC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAM,uCAAyBD,SAAzB,EAAoCC,KAApC,CAAN;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP;AACA;AACA;AACA;AACA;;;AACO,SAAUH,iCAAV,CAA6CI,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAM,mCAAqBA,EAArB,CAAN;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,qCAAT,CAAgDJ,QAAhD,EAA0DK,SAA1D,EAAsE;AAC5E,SAAO;AACNC,IAAAA,IAAI,EAAE,4BADA;AAENN,IAAAA,QAAQ,EAARA,QAFM;AAGNK,IAAAA,SAAS,EAATA;AAHM,GAAP;AAKA","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tconvertBlockToStatic,\n\tconvertBlocksToReusable,\n\tdeleteReusableBlock,\n} from './controls';\n\n/**\n * Returns a generator converting a reusable block into a static block.\n *\n * @param {string} clientId The client ID of the block to attach.\n */\nexport function* __experimentalConvertBlockToStatic( clientId ) {\n\tyield convertBlockToStatic( clientId );\n}\n\n/**\n * Returns a generator converting one or more static blocks into a reusable block.\n *\n * @param {string[]} clientIds The client IDs of the block to detach.\n * @param {string}   title     Reusable block title.\n */\nexport function* __experimentalConvertBlocksToReusable( clientIds, title ) {\n\tyield convertBlocksToReusable( clientIds, title );\n}\n\n/**\n * Returns a generator deleting a reusable block.\n *\n * @param {string} id The ID of the reusable block to delete.\n */\nexport function* __experimentalDeleteReusableBlock( id ) {\n\tyield deleteReusableBlock( id );\n}\n\n/**\n * Returns an action descriptor for SET_EDITING_REUSABLE_BLOCK action.\n *\n * @param {string} clientId The clientID of the reusable block to target.\n * @param {boolean} isEditing Whether the block should be in editing state.\n * @return {Object} Action descriptor.\n */\nexport function __experimentalSetEditingReusableBlock( clientId, isEditing ) {\n\treturn {\n\t\ttype: 'SET_EDITING_REUSABLE_BLOCK',\n\t\tclientId,\n\t\tisEditing,\n\t};\n}\n"]}